{
  "version": 3,
  "sources": ["../../../node_modules/chroma-js/chroma.js", "../../../app/components/ColorSetting.tsx", "../../../app/services/converter.ts", "../../../app/constants/namespaces.ts", "../../../app/constants/defaults.ts", "../../../app/constants/types.ts", "../../../app/constants/keys.ts"],
  "sourcesContent": ["/**\n * chroma.js - JavaScript library for color conversions\n *\n * Copyright (c) 2011-2019, Gregor Aisch\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. The name Gregor Aisch may not be used to endorse or promote products\n * derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * -------------------------------------------------------\n *\n * chroma.js includes colors from colorbrewer2.org, which are released under\n * the following license:\n *\n * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,\n * and The Pennsylvania State University.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n *\n * ------------------------------------------------------\n *\n * Named colors are taken from X11 Color Names.\n * http://www.w3.org/TR/css3-color/#svg-color\n *\n * @preserve\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) : (\n  global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.chroma = factory());\n})(this, function () {'use strict';\n\n  var limit$2 = function (x, min, max) {\n    if (min === void 0) min = 0;\n    if (max === void 0) max = 1;\n\n    return x < min ? min : x > max ? max : x;\n  };\n\n  var limit$1 = limit$2;\n\n  var clip_rgb$3 = function (rgb) {\n    rgb._clipped = false;\n    rgb._unclipped = rgb.slice(0);\n    for (var i = 0; i <= 3; i++) {\n      if (i < 3) {\n        if (rgb[i] < 0 || rgb[i] > 255) {rgb._clipped = true;}\n        rgb[i] = limit$1(rgb[i], 0, 255);\n      } else if (i === 3) {\n        rgb[i] = limit$1(rgb[i], 0, 1);\n      }\n    }\n    return rgb;\n  };\n\n  // ported from jQuery's $.type\n  var classToType = {};\n  for (var i$1 = 0, list$1 = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Undefined', 'Null']; i$1 < list$1.length; i$1 += 1) {\n    var name = list$1[i$1];\n\n    classToType[\"[object \" + name + \"]\"] = name.toLowerCase();\n  }\n  var type$p = function (obj) {\n    return classToType[Object.prototype.toString.call(obj)] || \"object\";\n  };\n\n  var type$o = type$p;\n\n  var unpack$B = function (args, keyOrder) {\n    if (keyOrder === void 0) keyOrder = null;\n\n    // if called with more than 3 arguments, we return the arguments\n    if (args.length >= 3) {return Array.prototype.slice.call(args);}\n    // with less than 3 args we check if first arg is object\n    // and use the keyOrder string to extract and sort properties\n    if (type$o(args[0]) == 'object' && keyOrder) {\n      return keyOrder.split('').\n      filter(function (k) {return args[0][k] !== undefined;}).\n      map(function (k) {return args[0][k];});\n    }\n    // otherwise we just return the first argument\n    // (which we suppose is an array of args)\n    return args[0];\n  };\n\n  var type$n = type$p;\n\n  var last$4 = function (args) {\n    if (args.length < 2) {return null;}\n    var l = args.length - 1;\n    if (type$n(args[l]) == 'string') {return args[l].toLowerCase();}\n    return null;\n  };\n\n  var PI$2 = Math.PI;\n\n  var utils = {\n    clip_rgb: clip_rgb$3,\n    limit: limit$2,\n    type: type$p,\n    unpack: unpack$B,\n    last: last$4,\n    PI: PI$2,\n    TWOPI: PI$2 * 2,\n    PITHIRD: PI$2 / 3,\n    DEG2RAD: PI$2 / 180,\n    RAD2DEG: 180 / PI$2\n  };\n\n  var input$h = {\n    format: {},\n    autodetect: []\n  };\n\n  var last$3 = utils.last;\n  var clip_rgb$2 = utils.clip_rgb;\n  var type$m = utils.type;\n  var _input = input$h;\n\n  var Color$D = function Color() {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    var me = this;\n    if (type$m(args[0]) === 'object' &&\n    args[0].constructor &&\n    args[0].constructor === this.constructor) {\n      // the argument is already a Color instance\n      return args[0];\n    }\n\n    // last argument could be the mode\n    var mode = last$3(args);\n    var autodetect = false;\n\n    if (!mode) {\n      autodetect = true;\n      if (!_input.sorted) {\n        _input.autodetect = _input.autodetect.sort(function (a, b) {return b.p - a.p;});\n        _input.sorted = true;\n      }\n      // auto-detect format\n      for (var i = 0, list = _input.autodetect; i < list.length; i += 1) {\n        var chk = list[i];\n\n        mode = chk.test.apply(chk, args);\n        if (mode) {break;}\n      }\n    }\n\n    if (_input.format[mode]) {\n      var rgb = _input.format[mode].apply(null, autodetect ? args : args.slice(0, -1));\n      me._rgb = clip_rgb$2(rgb);\n    } else {\n      throw new Error('unknown format: ' + args);\n    }\n\n    // add alpha channel\n    if (me._rgb.length === 3) {me._rgb.push(1);}\n  };\n\n  Color$D.prototype.toString = function toString() {\n    if (type$m(this.hex) == 'function') {return this.hex();}\n    return \"[\" + this._rgb.join(',') + \"]\";\n  };\n\n  var Color_1 = Color$D;\n\n  var chroma$k = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(chroma$k.Color, [null].concat(args)))();\n  };\n\n  chroma$k.Color = Color_1;\n  chroma$k.version = '2.4.2';\n\n  var chroma_1 = chroma$k;\n\n  var unpack$A = utils.unpack;\n  var max$2 = Math.max;\n\n  var rgb2cmyk$1 = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    var ref = unpack$A(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n    var k = 1 - max$2(r, max$2(g, b));\n    var f = k < 1 ? 1 / (1 - k) : 0;\n    var c = (1 - r - k) * f;\n    var m = (1 - g - k) * f;\n    var y = (1 - b - k) * f;\n    return [c, m, y, k];\n  };\n\n  var rgb2cmyk_1 = rgb2cmyk$1;\n\n  var unpack$z = utils.unpack;\n\n  var cmyk2rgb = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    args = unpack$z(args, 'cmyk');\n    var c = args[0];\n    var m = args[1];\n    var y = args[2];\n    var k = args[3];\n    var alpha = args.length > 4 ? args[4] : 1;\n    if (k === 1) {return [0, 0, 0, alpha];}\n    return [\n    c >= 1 ? 0 : 255 * (1 - c) * (1 - k), // r\n    m >= 1 ? 0 : 255 * (1 - m) * (1 - k), // g\n    y >= 1 ? 0 : 255 * (1 - y) * (1 - k), // b\n    alpha];\n\n  };\n\n  var cmyk2rgb_1 = cmyk2rgb;\n\n  var chroma$j = chroma_1;\n  var Color$C = Color_1;\n  var input$g = input$h;\n  var unpack$y = utils.unpack;\n  var type$l = utils.type;\n\n  var rgb2cmyk = rgb2cmyk_1;\n\n  Color$C.prototype.cmyk = function () {\n    return rgb2cmyk(this._rgb);\n  };\n\n  chroma$j.cmyk = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color$C, [null].concat(args, ['cmyk'])))();\n  };\n\n  input$g.format.cmyk = cmyk2rgb_1;\n\n  input$g.autodetect.push({\n    p: 2,\n    test: function () {\n      var args = [],len = arguments.length;\n      while (len--) args[len] = arguments[len];\n\n      args = unpack$y(args, 'cmyk');\n      if (type$l(args) === 'array' && args.length === 4) {\n        return 'cmyk';\n      }\n    }\n  });\n\n  var unpack$x = utils.unpack;\n  var last$2 = utils.last;\n  var rnd = function (a) {return Math.round(a * 100) / 100;};\n\n  /*\n   * supported arguments:\n   * - hsl2css(h,s,l)\n   * - hsl2css(h,s,l,a)\n   * - hsl2css([h,s,l], mode)\n   * - hsl2css([h,s,l,a], mode)\n   * - hsl2css({h,s,l,a}, mode)\n   */\n  var hsl2css$1 = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    var hsla = unpack$x(args, 'hsla');\n    var mode = last$2(args) || 'lsa';\n    hsla[0] = rnd(hsla[0] || 0);\n    hsla[1] = rnd(hsla[1] * 100) + '%';\n    hsla[2] = rnd(hsla[2] * 100) + '%';\n    if (mode === 'hsla' || hsla.length > 3 && hsla[3] < 1) {\n      hsla[3] = hsla.length > 3 ? hsla[3] : 1;\n      mode = 'hsla';\n    } else {\n      hsla.length = 3;\n    }\n    return mode + \"(\" + hsla.join(',') + \")\";\n  };\n\n  var hsl2css_1 = hsl2css$1;\n\n  var unpack$w = utils.unpack;\n\n  /*\n   * supported arguments:\n   * - rgb2hsl(r,g,b)\n   * - rgb2hsl(r,g,b,a)\n   * - rgb2hsl([r,g,b])\n   * - rgb2hsl([r,g,b,a])\n   * - rgb2hsl({r,g,b,a})\n   */\n  var rgb2hsl$3 = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    args = unpack$w(args, 'rgba');\n    var r = args[0];\n    var g = args[1];\n    var b = args[2];\n\n    r /= 255;\n    g /= 255;\n    b /= 255;\n\n    var min = Math.min(r, g, b);\n    var max = Math.max(r, g, b);\n\n    var l = (max + min) / 2;\n    var s, h;\n\n    if (max === min) {\n      s = 0;\n      h = Number.NaN;\n    } else {\n      s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n    }\n\n    if (r == max) {h = (g - b) / (max - min);} else\n    if (g == max) {h = 2 + (b - r) / (max - min);} else\n    if (b == max) {h = 4 + (r - g) / (max - min);}\n\n    h *= 60;\n    if (h < 0) {h += 360;}\n    if (args.length > 3 && args[3] !== undefined) {return [h, s, l, args[3]];}\n    return [h, s, l];\n  };\n\n  var rgb2hsl_1 = rgb2hsl$3;\n\n  var unpack$v = utils.unpack;\n  var last$1 = utils.last;\n  var hsl2css = hsl2css_1;\n  var rgb2hsl$2 = rgb2hsl_1;\n  var round$6 = Math.round;\n\n  /*\n   * supported arguments:\n   * - rgb2css(r,g,b)\n   * - rgb2css(r,g,b,a)\n   * - rgb2css([r,g,b], mode)\n   * - rgb2css([r,g,b,a], mode)\n   * - rgb2css({r,g,b,a}, mode)\n   */\n  var rgb2css$1 = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    var rgba = unpack$v(args, 'rgba');\n    var mode = last$1(args) || 'rgb';\n    if (mode.substr(0, 3) == 'hsl') {\n      return hsl2css(rgb2hsl$2(rgba), mode);\n    }\n    rgba[0] = round$6(rgba[0]);\n    rgba[1] = round$6(rgba[1]);\n    rgba[2] = round$6(rgba[2]);\n    if (mode === 'rgba' || rgba.length > 3 && rgba[3] < 1) {\n      rgba[3] = rgba.length > 3 ? rgba[3] : 1;\n      mode = 'rgba';\n    }\n    return mode + \"(\" + rgba.slice(0, mode === 'rgb' ? 3 : 4).join(',') + \")\";\n  };\n\n  var rgb2css_1 = rgb2css$1;\n\n  var unpack$u = utils.unpack;\n  var round$5 = Math.round;\n\n  var hsl2rgb$1 = function () {\n    var assign;\n\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    args = unpack$u(args, 'hsl');\n    var h = args[0];\n    var s = args[1];\n    var l = args[2];\n    var r, g, b;\n    if (s === 0) {\n      r = g = b = l * 255;\n    } else {\n      var t3 = [0, 0, 0];\n      var c = [0, 0, 0];\n      var t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      var t1 = 2 * l - t2;\n      var h_ = h / 360;\n      t3[0] = h_ + 1 / 3;\n      t3[1] = h_;\n      t3[2] = h_ - 1 / 3;\n      for (var i = 0; i < 3; i++) {\n        if (t3[i] < 0) {t3[i] += 1;}\n        if (t3[i] > 1) {t3[i] -= 1;}\n        if (6 * t3[i] < 1)\n        {c[i] = t1 + (t2 - t1) * 6 * t3[i];} else\n        if (2 * t3[i] < 1)\n        {c[i] = t2;} else\n        if (3 * t3[i] < 2)\n        {c[i] = t1 + (t2 - t1) * (2 / 3 - t3[i]) * 6;} else\n\n        {c[i] = t1;}\n      }\n      assign = [round$5(c[0] * 255), round$5(c[1] * 255), round$5(c[2] * 255)], r = assign[0], g = assign[1], b = assign[2];\n    }\n    if (args.length > 3) {\n      // keep alpha channel\n      return [r, g, b, args[3]];\n    }\n    return [r, g, b, 1];\n  };\n\n  var hsl2rgb_1 = hsl2rgb$1;\n\n  var hsl2rgb = hsl2rgb_1;\n  var input$f = input$h;\n\n  var RE_RGB = /^rgb\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*\\)$/;\n  var RE_RGBA = /^rgba\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n  var RE_RGB_PCT = /^rgb\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  var RE_RGBA_PCT = /^rgba\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n  var RE_HSL = /^hsl\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  var RE_HSLA = /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n\n  var round$4 = Math.round;\n\n  var css2rgb$1 = function (css) {\n    css = css.toLowerCase().trim();\n    var m;\n\n    if (input$f.format.named) {\n      try {\n        return input$f.format.named(css);\n      } catch (e) {\n\n        // eslint-disable-next-line\n      }}\n\n    // rgb(250,20,0)\n    if (m = css.match(RE_RGB)) {\n      var rgb = m.slice(1, 4);\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = +rgb[i];\n      }\n      rgb[3] = 1; // default alpha\n      return rgb;\n    }\n\n    // rgba(250,20,0,0.4)\n    if (m = css.match(RE_RGBA)) {\n      var rgb$1 = m.slice(1, 5);\n      for (var i$1 = 0; i$1 < 4; i$1++) {\n        rgb$1[i$1] = +rgb$1[i$1];\n      }\n      return rgb$1;\n    }\n\n    // rgb(100%,0%,0%)\n    if (m = css.match(RE_RGB_PCT)) {\n      var rgb$2 = m.slice(1, 4);\n      for (var i$2 = 0; i$2 < 3; i$2++) {\n        rgb$2[i$2] = round$4(rgb$2[i$2] * 2.55);\n      }\n      rgb$2[3] = 1; // default alpha\n      return rgb$2;\n    }\n\n    // rgba(100%,0%,0%,0.4)\n    if (m = css.match(RE_RGBA_PCT)) {\n      var rgb$3 = m.slice(1, 5);\n      for (var i$3 = 0; i$3 < 3; i$3++) {\n        rgb$3[i$3] = round$4(rgb$3[i$3] * 2.55);\n      }\n      rgb$3[3] = +rgb$3[3];\n      return rgb$3;\n    }\n\n    // hsl(0,100%,50%)\n    if (m = css.match(RE_HSL)) {\n      var hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      var rgb$4 = hsl2rgb(hsl);\n      rgb$4[3] = 1;\n      return rgb$4;\n    }\n\n    // hsla(0,100%,50%,0.5)\n    if (m = css.match(RE_HSLA)) {\n      var hsl$1 = m.slice(1, 4);\n      hsl$1[1] *= 0.01;\n      hsl$1[2] *= 0.01;\n      var rgb$5 = hsl2rgb(hsl$1);\n      rgb$5[3] = +m[4]; // default alpha = 1\n      return rgb$5;\n    }\n  };\n\n  css2rgb$1.test = function (s) {\n    return RE_RGB.test(s) ||\n    RE_RGBA.test(s) ||\n    RE_RGB_PCT.test(s) ||\n    RE_RGBA_PCT.test(s) ||\n    RE_HSL.test(s) ||\n    RE_HSLA.test(s);\n  };\n\n  var css2rgb_1 = css2rgb$1;\n\n  var chroma$i = chroma_1;\n  var Color$B = Color_1;\n  var input$e = input$h;\n  var type$k = utils.type;\n\n  var rgb2css = rgb2css_1;\n  var css2rgb = css2rgb_1;\n\n  Color$B.prototype.css = function (mode) {\n    return rgb2css(this._rgb, mode);\n  };\n\n  chroma$i.css = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color$B, [null].concat(args, ['css'])))();\n  };\n\n  input$e.format.css = css2rgb;\n\n  input$e.autodetect.push({\n    p: 5,\n    test: function (h) {\n      var rest = [],len = arguments.length - 1;\n      while (len-- > 0) rest[len] = arguments[len + 1];\n\n      if (!rest.length && type$k(h) === 'string' && css2rgb.test(h)) {\n        return 'css';\n      }\n    }\n  });\n\n  var Color$A = Color_1;\n  var chroma$h = chroma_1;\n  var input$d = input$h;\n  var unpack$t = utils.unpack;\n\n  input$d.format.gl = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    var rgb = unpack$t(args, 'rgba');\n    rgb[0] *= 255;\n    rgb[1] *= 255;\n    rgb[2] *= 255;\n    return rgb;\n  };\n\n  chroma$h.gl = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color$A, [null].concat(args, ['gl'])))();\n  };\n\n  Color$A.prototype.gl = function () {\n    var rgb = this._rgb;\n    return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]];\n  };\n\n  var unpack$s = utils.unpack;\n\n  var rgb2hcg$1 = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    var ref = unpack$s(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    var min = Math.min(r, g, b);\n    var max = Math.max(r, g, b);\n    var delta = max - min;\n    var c = delta * 100 / 255;\n    var _g = min / (255 - delta) * 100;\n    var h;\n    if (delta === 0) {\n      h = Number.NaN;\n    } else {\n      if (r === max) {h = (g - b) / delta;}\n      if (g === max) {h = 2 + (b - r) / delta;}\n      if (b === max) {h = 4 + (r - g) / delta;}\n      h *= 60;\n      if (h < 0) {h += 360;}\n    }\n    return [h, c, _g];\n  };\n\n  var rgb2hcg_1 = rgb2hcg$1;\n\n  var unpack$r = utils.unpack;\n  var floor$3 = Math.floor;\n\n  /*\n   * this is basically just HSV with some minor tweaks\n   *\n   * hue.. [0..360]\n   * chroma .. [0..1]\n   * grayness .. [0..1]\n   */\n\n  var hcg2rgb = function () {\n    var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    args = unpack$r(args, 'hcg');\n    var h = args[0];\n    var c = args[1];\n    var _g = args[2];\n    var r, g, b;\n    _g = _g * 255;\n    var _c = c * 255;\n    if (c === 0) {\n      r = g = b = _g;\n    } else {\n      if (h === 360) {h = 0;}\n      if (h > 360) {h -= 360;}\n      if (h < 0) {h += 360;}\n      h /= 60;\n      var i = floor$3(h);\n      var f = h - i;\n      var p = _g * (1 - c);\n      var q = p + _c * (1 - f);\n      var t = p + _c * f;\n      var v = p + _c;\n      switch (i) {\n        case 0:assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2];break;\n        case 1:assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2];break;\n        case 2:assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2];break;\n        case 3:assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2];break;\n        case 4:assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2];break;\n        case 5:assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2];break;\n      }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  var hcg2rgb_1 = hcg2rgb;\n\n  var unpack$q = utils.unpack;\n  var type$j = utils.type;\n  var chroma$g = chroma_1;\n  var Color$z = Color_1;\n  var input$c = input$h;\n\n  var rgb2hcg = rgb2hcg_1;\n\n  Color$z.prototype.hcg = function () {\n    return rgb2hcg(this._rgb);\n  };\n\n  chroma$g.hcg = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color$z, [null].concat(args, ['hcg'])))();\n  };\n\n  input$c.format.hcg = hcg2rgb_1;\n\n  input$c.autodetect.push({\n    p: 1,\n    test: function () {\n      var args = [],len = arguments.length;\n      while (len--) args[len] = arguments[len];\n\n      args = unpack$q(args, 'hcg');\n      if (type$j(args) === 'array' && args.length === 3) {\n        return 'hcg';\n      }\n    }\n  });\n\n  var unpack$p = utils.unpack;\n  var last = utils.last;\n  var round$3 = Math.round;\n\n  var rgb2hex$2 = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    var ref = unpack$p(args, 'rgba');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    var a = ref[3];\n    var mode = last(args) || 'auto';\n    if (a === undefined) {a = 1;}\n    if (mode === 'auto') {\n      mode = a < 1 ? 'rgba' : 'rgb';\n    }\n    r = round$3(r);\n    g = round$3(g);\n    b = round$3(b);\n    var u = r << 16 | g << 8 | b;\n    var str = \"000000\" + u.toString(16); //#.toUpperCase();\n    str = str.substr(str.length - 6);\n    var hxa = '0' + round$3(a * 255).toString(16);\n    hxa = hxa.substr(hxa.length - 2);\n    switch (mode.toLowerCase()) {\n      case 'rgba':return \"#\" + str + hxa;\n      case 'argb':return \"#\" + hxa + str;\n      default:return \"#\" + str;\n    }\n  };\n\n  var rgb2hex_1 = rgb2hex$2;\n\n  var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n  var RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n\n  var hex2rgb$1 = function (hex) {\n    if (hex.match(RE_HEX)) {\n      // remove optional leading #\n      if (hex.length === 4 || hex.length === 7) {\n        hex = hex.substr(1);\n      }\n      // expand short-notation to full six-digit\n      if (hex.length === 3) {\n        hex = hex.split('');\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n      }\n      var u = parseInt(hex, 16);\n      var r = u >> 16;\n      var g = u >> 8 & 0xFF;\n      var b = u & 0xFF;\n      return [r, g, b, 1];\n    }\n\n    // match rgba hex format, eg #FF000077\n    if (hex.match(RE_HEXA)) {\n      if (hex.length === 5 || hex.length === 9) {\n        // remove optional leading #\n        hex = hex.substr(1);\n      }\n      // expand short-notation to full eight-digit\n      if (hex.length === 4) {\n        hex = hex.split('');\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3];\n      }\n      var u$1 = parseInt(hex, 16);\n      var r$1 = u$1 >> 24 & 0xFF;\n      var g$1 = u$1 >> 16 & 0xFF;\n      var b$1 = u$1 >> 8 & 0xFF;\n      var a = Math.round((u$1 & 0xFF) / 0xFF * 100) / 100;\n      return [r$1, g$1, b$1, a];\n    }\n\n    // we used to check for css colors here\n    // if _input.css? and rgb = _input.css hex\n    //     return rgb\n\n    throw new Error(\"unknown hex color: \" + hex);\n  };\n\n  var hex2rgb_1 = hex2rgb$1;\n\n  var chroma$f = chroma_1;\n  var Color$y = Color_1;\n  var type$i = utils.type;\n  var input$b = input$h;\n\n  var rgb2hex$1 = rgb2hex_1;\n\n  Color$y.prototype.hex = function (mode) {\n    return rgb2hex$1(this._rgb, mode);\n  };\n\n  chroma$f.hex = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color$y, [null].concat(args, ['hex'])))();\n  };\n\n  input$b.format.hex = hex2rgb_1;\n  input$b.autodetect.push({\n    p: 4,\n    test: function (h) {\n      var rest = [],len = arguments.length - 1;\n      while (len-- > 0) rest[len] = arguments[len + 1];\n\n      if (!rest.length && type$i(h) === 'string' && [3, 4, 5, 6, 7, 8, 9].indexOf(h.length) >= 0) {\n        return 'hex';\n      }\n    }\n  });\n\n  var unpack$o = utils.unpack;\n  var TWOPI$2 = utils.TWOPI;\n  var min$2 = Math.min;\n  var sqrt$4 = Math.sqrt;\n  var acos = Math.acos;\n\n  var rgb2hsi$1 = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n    */\n    var ref = unpack$o(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    var h;\n    var min_ = min$2(r, g, b);\n    var i = (r + g + b) / 3;\n    var s = i > 0 ? 1 - min_ / i : 0;\n    if (s === 0) {\n      h = NaN;\n    } else {\n      h = (r - g + (r - b)) / 2;\n      h /= sqrt$4((r - g) * (r - g) + (r - b) * (g - b));\n      h = acos(h);\n      if (b > g) {\n        h = TWOPI$2 - h;\n      }\n      h /= TWOPI$2;\n    }\n    return [h * 360, s, i];\n  };\n\n  var rgb2hsi_1 = rgb2hsi$1;\n\n  var unpack$n = utils.unpack;\n  var limit = utils.limit;\n  var TWOPI$1 = utils.TWOPI;\n  var PITHIRD = utils.PITHIRD;\n  var cos$4 = Math.cos;\n\n  /*\n   * hue [0..360]\n   * saturation [0..1]\n   * intensity [0..1]\n   */\n  var hsi2rgb = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n    */\n    args = unpack$n(args, 'hsi');\n    var h = args[0];\n    var s = args[1];\n    var i = args[2];\n    var r, g, b;\n\n    if (isNaN(h)) {h = 0;}\n    if (isNaN(s)) {s = 0;}\n    // normalize hue\n    if (h > 360) {h -= 360;}\n    if (h < 0) {h += 360;}\n    h /= 360;\n    if (h < 1 / 3) {\n      b = (1 - s) / 3;\n      r = (1 + s * cos$4(TWOPI$1 * h) / cos$4(PITHIRD - TWOPI$1 * h)) / 3;\n      g = 1 - (b + r);\n    } else if (h < 2 / 3) {\n      h -= 1 / 3;\n      r = (1 - s) / 3;\n      g = (1 + s * cos$4(TWOPI$1 * h) / cos$4(PITHIRD - TWOPI$1 * h)) / 3;\n      b = 1 - (r + g);\n    } else {\n      h -= 2 / 3;\n      g = (1 - s) / 3;\n      b = (1 + s * cos$4(TWOPI$1 * h) / cos$4(PITHIRD - TWOPI$1 * h)) / 3;\n      r = 1 - (g + b);\n    }\n    r = limit(i * r * 3);\n    g = limit(i * g * 3);\n    b = limit(i * b * 3);\n    return [r * 255, g * 255, b * 255, args.length > 3 ? args[3] : 1];\n  };\n\n  var hsi2rgb_1 = hsi2rgb;\n\n  var unpack$m = utils.unpack;\n  var type$h = utils.type;\n  var chroma$e = chroma_1;\n  var Color$x = Color_1;\n  var input$a = input$h;\n\n  var rgb2hsi = rgb2hsi_1;\n\n  Color$x.prototype.hsi = function () {\n    return rgb2hsi(this._rgb);\n  };\n\n  chroma$e.hsi = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color$x, [null].concat(args, ['hsi'])))();\n  };\n\n  input$a.format.hsi = hsi2rgb_1;\n\n  input$a.autodetect.push({\n    p: 2,\n    test: function () {\n      var args = [],len = arguments.length;\n      while (len--) args[len] = arguments[len];\n\n      args = unpack$m(args, 'hsi');\n      if (type$h(args) === 'array' && args.length === 3) {\n        return 'hsi';\n      }\n    }\n  });\n\n  var unpack$l = utils.unpack;\n  var type$g = utils.type;\n  var chroma$d = chroma_1;\n  var Color$w = Color_1;\n  var input$9 = input$h;\n\n  var rgb2hsl$1 = rgb2hsl_1;\n\n  Color$w.prototype.hsl = function () {\n    return rgb2hsl$1(this._rgb);\n  };\n\n  chroma$d.hsl = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color$w, [null].concat(args, ['hsl'])))();\n  };\n\n  input$9.format.hsl = hsl2rgb_1;\n\n  input$9.autodetect.push({\n    p: 2,\n    test: function () {\n      var args = [],len = arguments.length;\n      while (len--) args[len] = arguments[len];\n\n      args = unpack$l(args, 'hsl');\n      if (type$g(args) === 'array' && args.length === 3) {\n        return 'hsl';\n      }\n    }\n  });\n\n  var unpack$k = utils.unpack;\n  var min$1 = Math.min;\n  var max$1 = Math.max;\n\n  /*\n   * supported arguments:\n   * - rgb2hsv(r,g,b)\n   * - rgb2hsv([r,g,b])\n   * - rgb2hsv({r,g,b})\n   */\n  var rgb2hsl = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    args = unpack$k(args, 'rgb');\n    var r = args[0];\n    var g = args[1];\n    var b = args[2];\n    var min_ = min$1(r, g, b);\n    var max_ = max$1(r, g, b);\n    var delta = max_ - min_;\n    var h, s, v;\n    v = max_ / 255.0;\n    if (max_ === 0) {\n      h = Number.NaN;\n      s = 0;\n    } else {\n      s = delta / max_;\n      if (r === max_) {h = (g - b) / delta;}\n      if (g === max_) {h = 2 + (b - r) / delta;}\n      if (b === max_) {h = 4 + (r - g) / delta;}\n      h *= 60;\n      if (h < 0) {h += 360;}\n    }\n    return [h, s, v];\n  };\n\n  var rgb2hsv$1 = rgb2hsl;\n\n  var unpack$j = utils.unpack;\n  var floor$2 = Math.floor;\n\n  var hsv2rgb = function () {\n    var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    args = unpack$j(args, 'hsv');\n    var h = args[0];\n    var s = args[1];\n    var v = args[2];\n    var r, g, b;\n    v *= 255;\n    if (s === 0) {\n      r = g = b = v;\n    } else {\n      if (h === 360) {h = 0;}\n      if (h > 360) {h -= 360;}\n      if (h < 0) {h += 360;}\n      h /= 60;\n\n      var i = floor$2(h);\n      var f = h - i;\n      var p = v * (1 - s);\n      var q = v * (1 - s * f);\n      var t = v * (1 - s * (1 - f));\n\n      switch (i) {\n        case 0:assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2];break;\n        case 1:assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2];break;\n        case 2:assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2];break;\n        case 3:assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2];break;\n        case 4:assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2];break;\n        case 5:assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2];break;\n      }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  var hsv2rgb_1 = hsv2rgb;\n\n  var unpack$i = utils.unpack;\n  var type$f = utils.type;\n  var chroma$c = chroma_1;\n  var Color$v = Color_1;\n  var input$8 = input$h;\n\n  var rgb2hsv = rgb2hsv$1;\n\n  Color$v.prototype.hsv = function () {\n    return rgb2hsv(this._rgb);\n  };\n\n  chroma$c.hsv = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color$v, [null].concat(args, ['hsv'])))();\n  };\n\n  input$8.format.hsv = hsv2rgb_1;\n\n  input$8.autodetect.push({\n    p: 2,\n    test: function () {\n      var args = [],len = arguments.length;\n      while (len--) args[len] = arguments[len];\n\n      args = unpack$i(args, 'hsv');\n      if (type$f(args) === 'array' && args.length === 3) {\n        return 'hsv';\n      }\n    }\n  });\n\n  var labConstants = {\n    // Corresponds roughly to RGB brighter/darker\n    Kn: 18,\n\n    // D65 standard referent\n    Xn: 0.950470,\n    Yn: 1,\n    Zn: 1.088830,\n\n    t0: 0.137931034, // 4 / 29\n    t1: 0.206896552, // 6 / 29\n    t2: 0.12841855, // 3 * t1 * t1\n    t3: 0.008856452 // t1 * t1 * t1\n  };\n\n  var LAB_CONSTANTS$3 = labConstants;\n  var unpack$h = utils.unpack;\n  var pow$a = Math.pow;\n\n  var rgb2lab$2 = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    var ref = unpack$h(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    var ref$1 = rgb2xyz(r, g, b);\n    var x = ref$1[0];\n    var y = ref$1[1];\n    var z = ref$1[2];\n    var l = 116 * y - 16;\n    return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];\n  };\n\n  var rgb_xyz = function (r) {\n    if ((r /= 255) <= 0.04045) {return r / 12.92;}\n    return pow$a((r + 0.055) / 1.055, 2.4);\n  };\n\n  var xyz_lab = function (t) {\n    if (t > LAB_CONSTANTS$3.t3) {return pow$a(t, 1 / 3);}\n    return t / LAB_CONSTANTS$3.t2 + LAB_CONSTANTS$3.t0;\n  };\n\n  var rgb2xyz = function (r, g, b) {\n    r = rgb_xyz(r);\n    g = rgb_xyz(g);\n    b = rgb_xyz(b);\n    var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS$3.Xn);\n    var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS$3.Yn);\n    var z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS$3.Zn);\n    return [x, y, z];\n  };\n\n  var rgb2lab_1 = rgb2lab$2;\n\n  var LAB_CONSTANTS$2 = labConstants;\n  var unpack$g = utils.unpack;\n  var pow$9 = Math.pow;\n\n  /*\n   * L* [0..100]\n   * a [-100..100]\n   * b [-100..100]\n   */\n  var lab2rgb$1 = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    args = unpack$g(args, 'lab');\n    var l = args[0];\n    var a = args[1];\n    var b = args[2];\n    var x, y, z, r, g, b_;\n\n    y = (l + 16) / 116;\n    x = isNaN(a) ? y : y + a / 500;\n    z = isNaN(b) ? y : y - b / 200;\n\n    y = LAB_CONSTANTS$2.Yn * lab_xyz(y);\n    x = LAB_CONSTANTS$2.Xn * lab_xyz(x);\n    z = LAB_CONSTANTS$2.Zn * lab_xyz(z);\n\n    r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z); // D65 -> sRGB\n    g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n    b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n\n    return [r, g, b_, args.length > 3 ? args[3] : 1];\n  };\n\n  var xyz_rgb = function (r) {\n    return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow$9(r, 1 / 2.4) - 0.055);\n  };\n\n  var lab_xyz = function (t) {\n    return t > LAB_CONSTANTS$2.t1 ? t * t * t : LAB_CONSTANTS$2.t2 * (t - LAB_CONSTANTS$2.t0);\n  };\n\n  var lab2rgb_1 = lab2rgb$1;\n\n  var unpack$f = utils.unpack;\n  var type$e = utils.type;\n  var chroma$b = chroma_1;\n  var Color$u = Color_1;\n  var input$7 = input$h;\n\n  var rgb2lab$1 = rgb2lab_1;\n\n  Color$u.prototype.lab = function () {\n    return rgb2lab$1(this._rgb);\n  };\n\n  chroma$b.lab = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color$u, [null].concat(args, ['lab'])))();\n  };\n\n  input$7.format.lab = lab2rgb_1;\n\n  input$7.autodetect.push({\n    p: 2,\n    test: function () {\n      var args = [],len = arguments.length;\n      while (len--) args[len] = arguments[len];\n\n      args = unpack$f(args, 'lab');\n      if (type$e(args) === 'array' && args.length === 3) {\n        return 'lab';\n      }\n    }\n  });\n\n  var unpack$e = utils.unpack;\n  var RAD2DEG = utils.RAD2DEG;\n  var sqrt$3 = Math.sqrt;\n  var atan2$2 = Math.atan2;\n  var round$2 = Math.round;\n\n  var lab2lch$2 = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    var ref = unpack$e(args, 'lab');\n    var l = ref[0];\n    var a = ref[1];\n    var b = ref[2];\n    var c = sqrt$3(a * a + b * b);\n    var h = (atan2$2(b, a) * RAD2DEG + 360) % 360;\n    if (round$2(c * 10000) === 0) {h = Number.NaN;}\n    return [l, c, h];\n  };\n\n  var lab2lch_1 = lab2lch$2;\n\n  var unpack$d = utils.unpack;\n  var rgb2lab = rgb2lab_1;\n  var lab2lch$1 = lab2lch_1;\n\n  var rgb2lch$1 = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    var ref = unpack$d(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    var ref$1 = rgb2lab(r, g, b);\n    var l = ref$1[0];\n    var a = ref$1[1];\n    var b_ = ref$1[2];\n    return lab2lch$1(l, a, b_);\n  };\n\n  var rgb2lch_1 = rgb2lch$1;\n\n  var unpack$c = utils.unpack;\n  var DEG2RAD = utils.DEG2RAD;\n  var sin$3 = Math.sin;\n  var cos$3 = Math.cos;\n\n  var lch2lab$2 = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    /*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\n    out of gamut if the parameters are in the range 0-1.\n     A saturation multiplier was added by Gregor Aisch\n    */\n\n    var ref = unpack$c(args, 'lch');\n    var l = ref[0];\n    var c = ref[1];\n    var h = ref[2];\n    if (isNaN(h)) {h = 0;}\n    h = h * DEG2RAD;\n    return [l, cos$3(h) * c, sin$3(h) * c];\n  };\n\n  var lch2lab_1 = lch2lab$2;\n\n  var unpack$b = utils.unpack;\n  var lch2lab$1 = lch2lab_1;\n  var lab2rgb = lab2rgb_1;\n\n  var lch2rgb$1 = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    args = unpack$b(args, 'lch');\n    var l = args[0];\n    var c = args[1];\n    var h = args[2];\n    var ref = lch2lab$1(l, c, h);\n    var L = ref[0];\n    var a = ref[1];\n    var b_ = ref[2];\n    var ref$1 = lab2rgb(L, a, b_);\n    var r = ref$1[0];\n    var g = ref$1[1];\n    var b = ref$1[2];\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  var lch2rgb_1 = lch2rgb$1;\n\n  var unpack$a = utils.unpack;\n  var lch2rgb = lch2rgb_1;\n\n  var hcl2rgb = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    var hcl = unpack$a(args, 'hcl').reverse();\n    return lch2rgb.apply(void 0, hcl);\n  };\n\n  var hcl2rgb_1 = hcl2rgb;\n\n  var unpack$9 = utils.unpack;\n  var type$d = utils.type;\n  var chroma$a = chroma_1;\n  var Color$t = Color_1;\n  var input$6 = input$h;\n\n  var rgb2lch = rgb2lch_1;\n\n  Color$t.prototype.lch = function () {return rgb2lch(this._rgb);};\n  Color$t.prototype.hcl = function () {return rgb2lch(this._rgb).reverse();};\n\n  chroma$a.lch = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color$t, [null].concat(args, ['lch'])))();\n  };\n  chroma$a.hcl = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color$t, [null].concat(args, ['hcl'])))();\n  };\n\n  input$6.format.lch = lch2rgb_1;\n  input$6.format.hcl = hcl2rgb_1;\n\n  ['lch', 'hcl'].forEach(function (m) {return input$6.autodetect.push({\n      p: 2,\n      test: function () {\n        var args = [],len = arguments.length;\n        while (len--) args[len] = arguments[len];\n\n        args = unpack$9(args, m);\n        if (type$d(args) === 'array' && args.length === 3) {\n          return m;\n        }\n      }\n    });});\n\n  /**\n  \tX11 color names\n   \thttp://www.w3.org/TR/css3-color/#svg-color\n  */\n\n\n  var w3cx11$1 = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflower: '#6495ed',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    laserlemon: '#ffff54',\n    lavender: '#e6e6fa',\n    lavenderblush: '#fff0f5',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrod: '#fafad2',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    maroon2: '#7f0000',\n    maroon3: '#b03060',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    purple2: '#7f007f',\n    purple3: '#a020f0',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32'\n  };\n\n  var w3cx11_1 = w3cx11$1;\n\n  var Color$s = Color_1;\n  var input$5 = input$h;\n  var type$c = utils.type;\n\n  var w3cx11 = w3cx11_1;\n  var hex2rgb = hex2rgb_1;\n  var rgb2hex = rgb2hex_1;\n\n  Color$s.prototype.name = function () {\n    var hex = rgb2hex(this._rgb, 'rgb');\n    for (var i = 0, list = Object.keys(w3cx11); i < list.length; i += 1) {\n      var n = list[i];\n\n      if (w3cx11[n] === hex) {return n.toLowerCase();}\n    }\n    return hex;\n  };\n\n  input$5.format.named = function (name) {\n    name = name.toLowerCase();\n    if (w3cx11[name]) {return hex2rgb(w3cx11[name]);}\n    throw new Error('unknown color name: ' + name);\n  };\n\n  input$5.autodetect.push({\n    p: 5,\n    test: function (h) {\n      var rest = [],len = arguments.length - 1;\n      while (len-- > 0) rest[len] = arguments[len + 1];\n\n      if (!rest.length && type$c(h) === 'string' && w3cx11[h.toLowerCase()]) {\n        return 'named';\n      }\n    }\n  });\n\n  var unpack$8 = utils.unpack;\n\n  var rgb2num$1 = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    var ref = unpack$8(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    return (r << 16) + (g << 8) + b;\n  };\n\n  var rgb2num_1 = rgb2num$1;\n\n  var type$b = utils.type;\n\n  var num2rgb = function (num) {\n    if (type$b(num) == \"number\" && num >= 0 && num <= 0xFFFFFF) {\n      var r = num >> 16;\n      var g = num >> 8 & 0xFF;\n      var b = num & 0xFF;\n      return [r, g, b, 1];\n    }\n    throw new Error(\"unknown num color: \" + num);\n  };\n\n  var num2rgb_1 = num2rgb;\n\n  var chroma$9 = chroma_1;\n  var Color$r = Color_1;\n  var input$4 = input$h;\n  var type$a = utils.type;\n\n  var rgb2num = rgb2num_1;\n\n  Color$r.prototype.num = function () {\n    return rgb2num(this._rgb);\n  };\n\n  chroma$9.num = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color$r, [null].concat(args, ['num'])))();\n  };\n\n  input$4.format.num = num2rgb_1;\n\n  input$4.autodetect.push({\n    p: 5,\n    test: function () {\n      var args = [],len = arguments.length;\n      while (len--) args[len] = arguments[len];\n\n      if (args.length === 1 && type$a(args[0]) === 'number' && args[0] >= 0 && args[0] <= 0xFFFFFF) {\n        return 'num';\n      }\n    }\n  });\n\n  var chroma$8 = chroma_1;\n  var Color$q = Color_1;\n  var input$3 = input$h;\n  var unpack$7 = utils.unpack;\n  var type$9 = utils.type;\n  var round$1 = Math.round;\n\n  Color$q.prototype.rgb = function (rnd) {\n    if (rnd === void 0) rnd = true;\n\n    if (rnd === false) {return this._rgb.slice(0, 3);}\n    return this._rgb.slice(0, 3).map(round$1);\n  };\n\n  Color$q.prototype.rgba = function (rnd) {\n    if (rnd === void 0) rnd = true;\n\n    return this._rgb.slice(0, 4).map(function (v, i) {\n      return i < 3 ? rnd === false ? v : round$1(v) : v;\n    });\n  };\n\n  chroma$8.rgb = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color$q, [null].concat(args, ['rgb'])))();\n  };\n\n  input$3.format.rgb = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    var rgba = unpack$7(args, 'rgba');\n    if (rgba[3] === undefined) {rgba[3] = 1;}\n    return rgba;\n  };\n\n  input$3.autodetect.push({\n    p: 3,\n    test: function () {\n      var args = [],len = arguments.length;\n      while (len--) args[len] = arguments[len];\n\n      args = unpack$7(args, 'rgba');\n      if (type$9(args) === 'array' && (args.length === 3 ||\n      args.length === 4 && type$9(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1)) {\n        return 'rgb';\n      }\n    }\n  });\n\n  /*\n   * Based on implementation by Neil Bartlett\n   * https://github.com/neilbartlett/color-temperature\n   */\n\n  var log$1 = Math.log;\n\n  var temperature2rgb$1 = function (kelvin) {\n    var temp = kelvin / 100;\n    var r, g, b;\n    if (temp < 66) {\n      r = 255;\n      g = temp < 6 ? 0 : -155.25485562709179 - 0.44596950469579133 * (g = temp - 2) + 104.49216199393888 * log$1(g);\n      b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp - 10) + 115.67994401066147 * log$1(b);\n    } else {\n      r = 351.97690566805693 + 0.114206453784165 * (r = temp - 55) - 40.25366309332127 * log$1(r);\n      g = 325.4494125711974 + 0.07943456536662342 * (g = temp - 50) - 28.0852963507957 * log$1(g);\n      b = 255;\n    }\n    return [r, g, b, 1];\n  };\n\n  var temperature2rgb_1 = temperature2rgb$1;\n\n  /*\n   * Based on implementation by Neil Bartlett\n   * https://github.com/neilbartlett/color-temperature\n   **/\n\n  var temperature2rgb = temperature2rgb_1;\n  var unpack$6 = utils.unpack;\n  var round = Math.round;\n\n  var rgb2temperature$1 = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    var rgb = unpack$6(args, 'rgb');\n    var r = rgb[0],b = rgb[2];\n    var minTemp = 1000;\n    var maxTemp = 40000;\n    var eps = 0.4;\n    var temp;\n    while (maxTemp - minTemp > eps) {\n      temp = (maxTemp + minTemp) * 0.5;\n      var rgb$1 = temperature2rgb(temp);\n      if (rgb$1[2] / rgb$1[0] >= b / r) {\n        maxTemp = temp;\n      } else {\n        minTemp = temp;\n      }\n    }\n    return round(temp);\n  };\n\n  var rgb2temperature_1 = rgb2temperature$1;\n\n  var chroma$7 = chroma_1;\n  var Color$p = Color_1;\n  var input$2 = input$h;\n\n  var rgb2temperature = rgb2temperature_1;\n\n  Color$p.prototype.temp =\n  Color$p.prototype.kelvin =\n  Color$p.prototype.temperature = function () {\n    return rgb2temperature(this._rgb);\n  };\n\n  chroma$7.temp =\n  chroma$7.kelvin =\n  chroma$7.temperature = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color$p, [null].concat(args, ['temp'])))();\n  };\n\n  input$2.format.temp =\n  input$2.format.kelvin =\n  input$2.format.temperature = temperature2rgb_1;\n\n  var unpack$5 = utils.unpack;\n  var cbrt = Math.cbrt;\n  var pow$8 = Math.pow;\n  var sign$1 = Math.sign;\n\n  var rgb2oklab$2 = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    // OKLab color space implementation taken from\n    // https://bottosson.github.io/posts/oklab/\n    var ref = unpack$5(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    var ref$1 = [rgb2lrgb(r / 255), rgb2lrgb(g / 255), rgb2lrgb(b / 255)];\n    var lr = ref$1[0];\n    var lg = ref$1[1];\n    var lb = ref$1[2];\n    var l = cbrt(0.4122214708 * lr + 0.5363325363 * lg + 0.0514459929 * lb);\n    var m = cbrt(0.2119034982 * lr + 0.6806995451 * lg + 0.1073969566 * lb);\n    var s = cbrt(0.0883024619 * lr + 0.2817188376 * lg + 0.6299787005 * lb);\n\n    return [\n    0.2104542553 * l + 0.793617785 * m - 0.0040720468 * s,\n    1.9779984951 * l - 2.428592205 * m + 0.4505937099 * s,\n    0.0259040371 * l + 0.7827717662 * m - 0.808675766 * s];\n\n  };\n\n  var rgb2oklab_1 = rgb2oklab$2;\n\n  function rgb2lrgb(c) {\n    var abs = Math.abs(c);\n    if (abs < 0.04045) {\n      return c / 12.92;\n    }\n    return (sign$1(c) || 1) * pow$8((abs + 0.055) / 1.055, 2.4);\n  }\n\n  var unpack$4 = utils.unpack;\n  var pow$7 = Math.pow;\n  var sign = Math.sign;\n\n  /*\n   * L* [0..100]\n   * a [-100..100]\n   * b [-100..100]\n   */\n  var oklab2rgb$1 = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    args = unpack$4(args, 'lab');\n    var L = args[0];\n    var a = args[1];\n    var b = args[2];\n\n    var l = pow$7(L + 0.3963377774 * a + 0.2158037573 * b, 3);\n    var m = pow$7(L - 0.1055613458 * a - 0.0638541728 * b, 3);\n    var s = pow$7(L - 0.0894841775 * a - 1.291485548 * b, 3);\n\n    return [\n    255 * lrgb2rgb(+4.0767416621 * l - 3.3077115913 * m + 0.2309699292 * s),\n    255 * lrgb2rgb(-1.2684380046 * l + 2.6097574011 * m - 0.3413193965 * s),\n    255 * lrgb2rgb(-0.0041960863 * l - 0.7034186147 * m + 1.707614701 * s),\n    args.length > 3 ? args[3] : 1];\n\n  };\n\n  var oklab2rgb_1 = oklab2rgb$1;\n\n  function lrgb2rgb(c) {\n    var abs = Math.abs(c);\n    if (abs > 0.0031308) {\n      return (sign(c) || 1) * (1.055 * pow$7(abs, 1 / 2.4) - 0.055);\n    }\n    return c * 12.92;\n  }\n\n  var unpack$3 = utils.unpack;\n  var type$8 = utils.type;\n  var chroma$6 = chroma_1;\n  var Color$o = Color_1;\n  var input$1 = input$h;\n\n  var rgb2oklab$1 = rgb2oklab_1;\n\n  Color$o.prototype.oklab = function () {\n    return rgb2oklab$1(this._rgb);\n  };\n\n  chroma$6.oklab = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color$o, [null].concat(args, ['oklab'])))();\n  };\n\n  input$1.format.oklab = oklab2rgb_1;\n\n  input$1.autodetect.push({\n    p: 3,\n    test: function () {\n      var args = [],len = arguments.length;\n      while (len--) args[len] = arguments[len];\n\n      args = unpack$3(args, 'oklab');\n      if (type$8(args) === 'array' && args.length === 3) {\n        return 'oklab';\n      }\n    }\n  });\n\n  var unpack$2 = utils.unpack;\n  var rgb2oklab = rgb2oklab_1;\n  var lab2lch = lab2lch_1;\n\n  var rgb2oklch$1 = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    var ref = unpack$2(args, 'rgb');\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    var ref$1 = rgb2oklab(r, g, b);\n    var l = ref$1[0];\n    var a = ref$1[1];\n    var b_ = ref$1[2];\n    return lab2lch(l, a, b_);\n  };\n\n  var rgb2oklch_1 = rgb2oklch$1;\n\n  var unpack$1 = utils.unpack;\n  var lch2lab = lch2lab_1;\n  var oklab2rgb = oklab2rgb_1;\n\n  var oklch2rgb = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    args = unpack$1(args, 'lch');\n    var l = args[0];\n    var c = args[1];\n    var h = args[2];\n    var ref = lch2lab(l, c, h);\n    var L = ref[0];\n    var a = ref[1];\n    var b_ = ref[2];\n    var ref$1 = oklab2rgb(L, a, b_);\n    var r = ref$1[0];\n    var g = ref$1[1];\n    var b = ref$1[2];\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  var oklch2rgb_1 = oklch2rgb;\n\n  var unpack = utils.unpack;\n  var type$7 = utils.type;\n  var chroma$5 = chroma_1;\n  var Color$n = Color_1;\n  var input = input$h;\n\n  var rgb2oklch = rgb2oklch_1;\n\n  Color$n.prototype.oklch = function () {\n    return rgb2oklch(this._rgb);\n  };\n\n  chroma$5.oklch = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    return new (Function.prototype.bind.apply(Color$n, [null].concat(args, ['oklch'])))();\n  };\n\n  input.format.oklch = oklch2rgb_1;\n\n  input.autodetect.push({\n    p: 3,\n    test: function () {\n      var args = [],len = arguments.length;\n      while (len--) args[len] = arguments[len];\n\n      args = unpack(args, 'oklch');\n      if (type$7(args) === 'array' && args.length === 3) {\n        return 'oklch';\n      }\n    }\n  });\n\n  var Color$m = Color_1;\n  var type$6 = utils.type;\n\n  Color$m.prototype.alpha = function (a, mutate) {\n    if (mutate === void 0) mutate = false;\n\n    if (a !== undefined && type$6(a) === 'number') {\n      if (mutate) {\n        this._rgb[3] = a;\n        return this;\n      }\n      return new Color$m([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\n    }\n    return this._rgb[3];\n  };\n\n  var Color$l = Color_1;\n\n  Color$l.prototype.clipped = function () {\n    return this._rgb._clipped || false;\n  };\n\n  var Color$k = Color_1;\n  var LAB_CONSTANTS$1 = labConstants;\n\n  Color$k.prototype.darken = function (amount) {\n    if (amount === void 0) amount = 1;\n\n    var me = this;\n    var lab = me.lab();\n    lab[0] -= LAB_CONSTANTS$1.Kn * amount;\n    return new Color$k(lab, 'lab').alpha(me.alpha(), true);\n  };\n\n  Color$k.prototype.brighten = function (amount) {\n    if (amount === void 0) amount = 1;\n\n    return this.darken(-amount);\n  };\n\n  Color$k.prototype.darker = Color$k.prototype.darken;\n  Color$k.prototype.brighter = Color$k.prototype.brighten;\n\n  var Color$j = Color_1;\n\n  Color$j.prototype.get = function (mc) {\n    var ref = mc.split('.');\n    var mode = ref[0];\n    var channel = ref[1];\n    var src = this[mode]();\n    if (channel) {\n      var i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\n      if (i > -1) {return src[i];}\n      throw new Error(\"unknown channel \" + channel + \" in mode \" + mode);\n    } else {\n      return src;\n    }\n  };\n\n  var Color$i = Color_1;\n  var type$5 = utils.type;\n  var pow$6 = Math.pow;\n\n  var EPS = 1e-7;\n  var MAX_ITER = 20;\n\n  Color$i.prototype.luminance = function (lum) {\n    if (lum !== undefined && type$5(lum) === 'number') {\n      if (lum === 0) {\n        // return pure black\n        return new Color$i([0, 0, 0, this._rgb[3]], 'rgb');\n      }\n      if (lum === 1) {\n        // return pure white\n        return new Color$i([255, 255, 255, this._rgb[3]], 'rgb');\n      }\n      // compute new color using...\n      var cur_lum = this.luminance();\n      var mode = 'rgb';\n      var max_iter = MAX_ITER;\n\n      var test = function (low, high) {\n        var mid = low.interpolate(high, 0.5, mode);\n        var lm = mid.luminance();\n        if (Math.abs(lum - lm) < EPS || !max_iter--) {\n          // close enough\n          return mid;\n        }\n        return lm > lum ? test(low, mid) : test(mid, high);\n      };\n\n      var rgb = (cur_lum > lum ? test(new Color$i([0, 0, 0]), this) : test(this, new Color$i([255, 255, 255]))).rgb();\n      return new Color$i(rgb.concat([this._rgb[3]]));\n    }\n    return rgb2luminance.apply(void 0, this._rgb.slice(0, 3));\n  };\n\n\n  var rgb2luminance = function (r, g, b) {\n    // relative luminance\n    // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n    r = luminance_x(r);\n    g = luminance_x(g);\n    b = luminance_x(b);\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  };\n\n  var luminance_x = function (x) {\n    x /= 255;\n    return x <= 0.03928 ? x / 12.92 : pow$6((x + 0.055) / 1.055, 2.4);\n  };\n\n  var interpolator$1 = {};\n\n  var Color$h = Color_1;\n  var type$4 = utils.type;\n  var interpolator = interpolator$1;\n\n  var mix$1 = function (col1, col2, f) {\n    if (f === void 0) f = 0.5;\n    var rest = [],len = arguments.length - 3;\n    while (len-- > 0) rest[len] = arguments[len + 3];\n\n    var mode = rest[0] || 'lrgb';\n    if (!interpolator[mode] && !rest.length) {\n      // fall back to the first supported mode\n      mode = Object.keys(interpolator)[0];\n    }\n    if (!interpolator[mode]) {\n      throw new Error(\"interpolation mode \" + mode + \" is not defined\");\n    }\n    if (type$4(col1) !== 'object') {col1 = new Color$h(col1);}\n    if (type$4(col2) !== 'object') {col2 = new Color$h(col2);}\n    return interpolator[mode](col1, col2, f).\n    alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n  };\n\n  var Color$g = Color_1;\n  var mix = mix$1;\n\n  Color$g.prototype.mix =\n  Color$g.prototype.interpolate = function (col2, f) {\n    if (f === void 0) f = 0.5;\n    var rest = [],len = arguments.length - 2;\n    while (len-- > 0) rest[len] = arguments[len + 2];\n\n    return mix.apply(void 0, [this, col2, f].concat(rest));\n  };\n\n  var Color$f = Color_1;\n\n  Color$f.prototype.premultiply = function (mutate) {\n    if (mutate === void 0) mutate = false;\n\n    var rgb = this._rgb;\n    var a = rgb[3];\n    if (mutate) {\n      this._rgb = [rgb[0] * a, rgb[1] * a, rgb[2] * a, a];\n      return this;\n    } else {\n      return new Color$f([rgb[0] * a, rgb[1] * a, rgb[2] * a, a], 'rgb');\n    }\n  };\n\n  var Color$e = Color_1;\n  var LAB_CONSTANTS = labConstants;\n\n  Color$e.prototype.saturate = function (amount) {\n    if (amount === void 0) amount = 1;\n\n    var me = this;\n    var lch = me.lch();\n    lch[1] += LAB_CONSTANTS.Kn * amount;\n    if (lch[1] < 0) {lch[1] = 0;}\n    return new Color$e(lch, 'lch').alpha(me.alpha(), true);\n  };\n\n  Color$e.prototype.desaturate = function (amount) {\n    if (amount === void 0) amount = 1;\n\n    return this.saturate(-amount);\n  };\n\n  var Color$d = Color_1;\n  var type$3 = utils.type;\n\n  Color$d.prototype.set = function (mc, value, mutate) {\n    if (mutate === void 0) mutate = false;\n\n    var ref = mc.split('.');\n    var mode = ref[0];\n    var channel = ref[1];\n    var src = this[mode]();\n    if (channel) {\n      var i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\n      if (i > -1) {\n        if (type$3(value) == 'string') {\n          switch (value.charAt(0)) {\n            case '+':\n              src[i] += +value;\n              break;\n            case '-':\n              src[i] += +value;\n              break;\n            case '*':\n              src[i] *= +value.substr(1);\n              break;\n            case '/':\n              src[i] /= +value.substr(1);\n              break;\n            default:\n              src[i] = +value;\n          }\n        } else if (type$3(value) === 'number') {\n          src[i] = value;\n        } else {\n          throw new Error(\"unsupported value for Color.set\");\n        }\n        var out = new Color$d(src, mode);\n        if (mutate) {\n          this._rgb = out._rgb;\n          return this;\n        }\n        return out;\n      }\n      throw new Error(\"unknown channel \" + channel + \" in mode \" + mode);\n    } else {\n      return src;\n    }\n  };\n\n  var Color$c = Color_1;\n\n  var rgb = function (col1, col2, f) {\n    var xyz0 = col1._rgb;\n    var xyz1 = col2._rgb;\n    return new Color$c(\n      xyz0[0] + f * (xyz1[0] - xyz0[0]),\n      xyz0[1] + f * (xyz1[1] - xyz0[1]),\n      xyz0[2] + f * (xyz1[2] - xyz0[2]),\n      'rgb'\n    );\n  };\n\n  // register interpolator\n  interpolator$1.rgb = rgb;\n\n  var Color$b = Color_1;\n  var sqrt$2 = Math.sqrt;\n  var pow$5 = Math.pow;\n\n  var lrgb = function (col1, col2, f) {\n    var ref = col1._rgb;\n    var x1 = ref[0];\n    var y1 = ref[1];\n    var z1 = ref[2];\n    var ref$1 = col2._rgb;\n    var x2 = ref$1[0];\n    var y2 = ref$1[1];\n    var z2 = ref$1[2];\n    return new Color$b(\n      sqrt$2(pow$5(x1, 2) * (1 - f) + pow$5(x2, 2) * f),\n      sqrt$2(pow$5(y1, 2) * (1 - f) + pow$5(y2, 2) * f),\n      sqrt$2(pow$5(z1, 2) * (1 - f) + pow$5(z2, 2) * f),\n      'rgb'\n    );\n  };\n\n  // register interpolator\n  interpolator$1.lrgb = lrgb;\n\n  var Color$a = Color_1;\n\n  var lab = function (col1, col2, f) {\n    var xyz0 = col1.lab();\n    var xyz1 = col2.lab();\n    return new Color$a(\n      xyz0[0] + f * (xyz1[0] - xyz0[0]),\n      xyz0[1] + f * (xyz1[1] - xyz0[1]),\n      xyz0[2] + f * (xyz1[2] - xyz0[2]),\n      'lab'\n    );\n  };\n\n  // register interpolator\n  interpolator$1.lab = lab;\n\n  var Color$9 = Color_1;\n\n  var _hsx = function (col1, col2, f, m) {\n    var assign, assign$1;\n\n    var xyz0, xyz1;\n    if (m === 'hsl') {\n      xyz0 = col1.hsl();\n      xyz1 = col2.hsl();\n    } else if (m === 'hsv') {\n      xyz0 = col1.hsv();\n      xyz1 = col2.hsv();\n    } else if (m === 'hcg') {\n      xyz0 = col1.hcg();\n      xyz1 = col2.hcg();\n    } else if (m === 'hsi') {\n      xyz0 = col1.hsi();\n      xyz1 = col2.hsi();\n    } else if (m === 'lch' || m === 'hcl') {\n      m = 'hcl';\n      xyz0 = col1.hcl();\n      xyz1 = col2.hcl();\n    } else if (m === 'oklch') {\n      xyz0 = col1.oklch().reverse();\n      xyz1 = col2.oklch().reverse();\n    }\n\n    var hue0, hue1, sat0, sat1, lbv0, lbv1;\n    if (m.substr(0, 1) === 'h' || m === 'oklch') {\n      assign = xyz0, hue0 = assign[0], sat0 = assign[1], lbv0 = assign[2];\n      assign$1 = xyz1, hue1 = assign$1[0], sat1 = assign$1[1], lbv1 = assign$1[2];\n    }\n\n    var sat, hue, lbv, dh;\n\n    if (!isNaN(hue0) && !isNaN(hue1)) {\n      // both colors have hue\n      if (hue1 > hue0 && hue1 - hue0 > 180) {\n        dh = hue1 - (hue0 + 360);\n      } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n        dh = hue1 + 360 - hue0;\n      } else {\n        dh = hue1 - hue0;\n      }\n      hue = hue0 + f * dh;\n    } else if (!isNaN(hue0)) {\n      hue = hue0;\n      if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') {sat = sat0;}\n    } else if (!isNaN(hue1)) {\n      hue = hue1;\n      if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') {sat = sat1;}\n    } else {\n      hue = Number.NaN;\n    }\n\n    if (sat === undefined) {sat = sat0 + f * (sat1 - sat0);}\n    lbv = lbv0 + f * (lbv1 - lbv0);\n    return m === 'oklch' ? new Color$9([lbv, sat, hue], m) : new Color$9([hue, sat, lbv], m);\n  };\n\n  var interpolate_hsx$5 = _hsx;\n\n  var lch = function (col1, col2, f) {\n    return interpolate_hsx$5(col1, col2, f, 'lch');\n  };\n\n  // register interpolator\n  interpolator$1.lch = lch;\n  interpolator$1.hcl = lch;\n\n  var Color$8 = Color_1;\n\n  var num = function (col1, col2, f) {\n    var c1 = col1.num();\n    var c2 = col2.num();\n    return new Color$8(c1 + f * (c2 - c1), 'num');\n  };\n\n  // register interpolator\n  interpolator$1.num = num;\n\n  var interpolate_hsx$4 = _hsx;\n\n  var hcg = function (col1, col2, f) {\n    return interpolate_hsx$4(col1, col2, f, 'hcg');\n  };\n\n  // register interpolator\n  interpolator$1.hcg = hcg;\n\n  var interpolate_hsx$3 = _hsx;\n\n  var hsi = function (col1, col2, f) {\n    return interpolate_hsx$3(col1, col2, f, 'hsi');\n  };\n\n  // register interpolator\n  interpolator$1.hsi = hsi;\n\n  var interpolate_hsx$2 = _hsx;\n\n  var hsl = function (col1, col2, f) {\n    return interpolate_hsx$2(col1, col2, f, 'hsl');\n  };\n\n  // register interpolator\n  interpolator$1.hsl = hsl;\n\n  var interpolate_hsx$1 = _hsx;\n\n  var hsv = function (col1, col2, f) {\n    return interpolate_hsx$1(col1, col2, f, 'hsv');\n  };\n\n  // register interpolator\n  interpolator$1.hsv = hsv;\n\n  var Color$7 = Color_1;\n\n  var oklab = function (col1, col2, f) {\n    var xyz0 = col1.oklab();\n    var xyz1 = col2.oklab();\n    return new Color$7(\n      xyz0[0] + f * (xyz1[0] - xyz0[0]),\n      xyz0[1] + f * (xyz1[1] - xyz0[1]),\n      xyz0[2] + f * (xyz1[2] - xyz0[2]),\n      'oklab'\n    );\n  };\n\n  // register interpolator\n  interpolator$1.oklab = oklab;\n\n  var interpolate_hsx = _hsx;\n\n  var oklch = function (col1, col2, f) {\n    return interpolate_hsx(col1, col2, f, 'oklch');\n  };\n\n  // register interpolator\n  interpolator$1.oklch = oklch;\n\n  var Color$6 = Color_1;\n  var clip_rgb$1 = utils.clip_rgb;\n  var pow$4 = Math.pow;\n  var sqrt$1 = Math.sqrt;\n  var PI$1 = Math.PI;\n  var cos$2 = Math.cos;\n  var sin$2 = Math.sin;\n  var atan2$1 = Math.atan2;\n\n  var average = function (colors, mode, weights) {\n    if (mode === void 0) mode = 'lrgb';\n    if (weights === void 0) weights = null;\n\n    var l = colors.length;\n    if (!weights) {weights = Array.from(new Array(l)).map(function () {return 1;});}\n    // normalize weights\n    var k = l / weights.reduce(function (a, b) {return a + b;});\n    weights.forEach(function (w, i) {weights[i] *= k;});\n    // convert colors to Color objects\n    colors = colors.map(function (c) {return new Color$6(c);});\n    if (mode === 'lrgb') {\n      return _average_lrgb(colors, weights);\n    }\n    var first = colors.shift();\n    var xyz = first.get(mode);\n    var cnt = [];\n    var dx = 0;\n    var dy = 0;\n    // initial color\n    for (var i = 0; i < xyz.length; i++) {\n      xyz[i] = (xyz[i] || 0) * weights[0];\n      cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\n      if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n        var A = xyz[i] / 180 * PI$1;\n        dx += cos$2(A) * weights[0];\n        dy += sin$2(A) * weights[0];\n      }\n    }\n\n    var alpha = first.alpha() * weights[0];\n    colors.forEach(function (c, ci) {\n      var xyz2 = c.get(mode);\n      alpha += c.alpha() * weights[ci + 1];\n      for (var i = 0; i < xyz.length; i++) {\n        if (!isNaN(xyz2[i])) {\n          cnt[i] += weights[ci + 1];\n          if (mode.charAt(i) === 'h') {\n            var A = xyz2[i] / 180 * PI$1;\n            dx += cos$2(A) * weights[ci + 1];\n            dy += sin$2(A) * weights[ci + 1];\n          } else {\n            xyz[i] += xyz2[i] * weights[ci + 1];\n          }\n        }\n      }\n    });\n\n    for (var i$1 = 0; i$1 < xyz.length; i$1++) {\n      if (mode.charAt(i$1) === 'h') {\n        var A$1 = atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1 * 180;\n        while (A$1 < 0) {A$1 += 360;}\n        while (A$1 >= 360) {A$1 -= 360;}\n        xyz[i$1] = A$1;\n      } else {\n        xyz[i$1] = xyz[i$1] / cnt[i$1];\n      }\n    }\n    alpha /= l;\n    return new Color$6(xyz, mode).alpha(alpha > 0.99999 ? 1 : alpha, true);\n  };\n\n\n  var _average_lrgb = function (colors, weights) {\n    var l = colors.length;\n    var xyz = [0, 0, 0, 0];\n    for (var i = 0; i < colors.length; i++) {\n      var col = colors[i];\n      var f = weights[i] / l;\n      var rgb = col._rgb;\n      xyz[0] += pow$4(rgb[0], 2) * f;\n      xyz[1] += pow$4(rgb[1], 2) * f;\n      xyz[2] += pow$4(rgb[2], 2) * f;\n      xyz[3] += rgb[3] * f;\n    }\n    xyz[0] = sqrt$1(xyz[0]);\n    xyz[1] = sqrt$1(xyz[1]);\n    xyz[2] = sqrt$1(xyz[2]);\n    if (xyz[3] > 0.9999999) {xyz[3] = 1;}\n    return new Color$6(clip_rgb$1(xyz));\n  };\n\n  // minimal multi-purpose interface\n\n  // @requires utils color analyze\n\n  var chroma$4 = chroma_1;\n  var type$2 = utils.type;\n\n  var pow$3 = Math.pow;\n\n  var scale$2 = function (colors) {\n\n    // constructor\n    var _mode = 'rgb';\n    var _nacol = chroma$4('#ccc');\n    var _spread = 0;\n    // const _fixed = false;\n    var _domain = [0, 1];\n    var _pos = [];\n    var _padding = [0, 0];\n    var _classes = false;\n    var _colors = [];\n    var _out = false;\n    var _min = 0;\n    var _max = 1;\n    var _correctLightness = false;\n    var _colorCache = {};\n    var _useCache = true;\n    var _gamma = 1;\n\n    // private methods\n\n    var setColors = function (colors) {\n      colors = colors || ['#fff', '#000'];\n      if (colors && type$2(colors) === 'string' && chroma$4.brewer &&\n      chroma$4.brewer[colors.toLowerCase()]) {\n        colors = chroma$4.brewer[colors.toLowerCase()];\n      }\n      if (type$2(colors) === 'array') {\n        // handle single color\n        if (colors.length === 1) {\n          colors = [colors[0], colors[0]];\n        }\n        // make a copy of the colors\n        colors = colors.slice(0);\n        // convert to chroma classes\n        for (var c = 0; c < colors.length; c++) {\n          colors[c] = chroma$4(colors[c]);\n        }\n        // auto-fill color position\n        _pos.length = 0;\n        for (var c$1 = 0; c$1 < colors.length; c$1++) {\n          _pos.push(c$1 / (colors.length - 1));\n        }\n      }\n      resetCache();\n      return _colors = colors;\n    };\n\n    var getClass = function (value) {\n      if (_classes != null) {\n        var n = _classes.length - 1;\n        var i = 0;\n        while (i < n && value >= _classes[i]) {\n          i++;\n        }\n        return i - 1;\n      }\n      return 0;\n    };\n\n    var tMapLightness = function (t) {return t;};\n    var tMapDomain = function (t) {return t;};\n\n    // const classifyValue = function(value) {\n    //     let val = value;\n    //     if (_classes.length > 2) {\n    //         const n = _classes.length-1;\n    //         const i = getClass(value);\n    //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\n    //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\n    //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\n    //     }\n    //     return val;\n    // };\n\n    var getColor = function (val, bypassMap) {\n      var col, t;\n      if (bypassMap == null) {bypassMap = false;}\n      if (isNaN(val) || val === null) {return _nacol;}\n      if (!bypassMap) {\n        if (_classes && _classes.length > 2) {\n          // find the class\n          var c = getClass(val);\n          t = c / (_classes.length - 2);\n        } else if (_max !== _min) {\n          // just interpolate between min/max\n          t = (val - _min) / (_max - _min);\n        } else {\n          t = 1;\n        }\n      } else {\n        t = val;\n      }\n\n      // domain map\n      t = tMapDomain(t);\n\n      if (!bypassMap) {\n        t = tMapLightness(t); // lightness correction\n      }\n\n      if (_gamma !== 1) {t = pow$3(t, _gamma);}\n\n      t = _padding[0] + t * (1 - _padding[0] - _padding[1]);\n\n      t = Math.min(1, Math.max(0, t));\n\n      var k = Math.floor(t * 10000);\n\n      if (_useCache && _colorCache[k]) {\n        col = _colorCache[k];\n      } else {\n        if (type$2(_colors) === 'array') {\n          //for i in [0.._pos.length-1]\n          for (var i = 0; i < _pos.length; i++) {\n            var p = _pos[i];\n            if (t <= p) {\n              col = _colors[i];\n              break;\n            }\n            if (t >= p && i === _pos.length - 1) {\n              col = _colors[i];\n              break;\n            }\n            if (t > p && t < _pos[i + 1]) {\n              t = (t - p) / (_pos[i + 1] - p);\n              col = chroma$4.interpolate(_colors[i], _colors[i + 1], t, _mode);\n              break;\n            }\n          }\n        } else if (type$2(_colors) === 'function') {\n          col = _colors(t);\n        }\n        if (_useCache) {_colorCache[k] = col;}\n      }\n      return col;\n    };\n\n    var resetCache = function () {return _colorCache = {};};\n\n    setColors(colors);\n\n    // public interface\n\n    var f = function (v) {\n      var c = chroma$4(getColor(v));\n      if (_out && c[_out]) {return c[_out]();} else {return c;}\n    };\n\n    f.classes = function (classes) {\n      if (classes != null) {\n        if (type$2(classes) === 'array') {\n          _classes = classes;\n          _domain = [classes[0], classes[classes.length - 1]];\n        } else {\n          var d = chroma$4.analyze(_domain);\n          if (classes === 0) {\n            _classes = [d.min, d.max];\n          } else {\n            _classes = chroma$4.limits(d, 'e', classes);\n          }\n        }\n        return f;\n      }\n      return _classes;\n    };\n\n\n    f.domain = function (domain) {\n      if (!arguments.length) {\n        return _domain;\n      }\n      _min = domain[0];\n      _max = domain[domain.length - 1];\n      _pos = [];\n      var k = _colors.length;\n      if (domain.length === k && _min !== _max) {\n        // update positions\n        for (var i = 0, list = Array.from(domain); i < list.length; i += 1) {\n          var d = list[i];\n\n          _pos.push((d - _min) / (_max - _min));\n        }\n      } else {\n        for (var c = 0; c < k; c++) {\n          _pos.push(c / (k - 1));\n        }\n        if (domain.length > 2) {\n          // set domain map\n          var tOut = domain.map(function (d, i) {return i / (domain.length - 1);});\n          var tBreaks = domain.map(function (d) {return (d - _min) / (_max - _min);});\n          if (!tBreaks.every(function (val, i) {return tOut[i] === val;})) {\n            tMapDomain = function (t) {\n              if (t <= 0 || t >= 1) {return t;}\n              var i = 0;\n              while (t >= tBreaks[i + 1]) {i++;}\n              var f = (t - tBreaks[i]) / (tBreaks[i + 1] - tBreaks[i]);\n              var out = tOut[i] + f * (tOut[i + 1] - tOut[i]);\n              return out;\n            };\n          }\n\n        }\n      }\n      _domain = [_min, _max];\n      return f;\n    };\n\n    f.mode = function (_m) {\n      if (!arguments.length) {\n        return _mode;\n      }\n      _mode = _m;\n      resetCache();\n      return f;\n    };\n\n    f.range = function (colors, _pos) {\n      setColors(colors);\n      return f;\n    };\n\n    f.out = function (_o) {\n      _out = _o;\n      return f;\n    };\n\n    f.spread = function (val) {\n      if (!arguments.length) {\n        return _spread;\n      }\n      _spread = val;\n      return f;\n    };\n\n    f.correctLightness = function (v) {\n      if (v == null) {v = true;}\n      _correctLightness = v;\n      resetCache();\n      if (_correctLightness) {\n        tMapLightness = function (t) {\n          var L0 = getColor(0, true).lab()[0];\n          var L1 = getColor(1, true).lab()[0];\n          var pol = L0 > L1;\n          var L_actual = getColor(t, true).lab()[0];\n          var L_ideal = L0 + (L1 - L0) * t;\n          var L_diff = L_actual - L_ideal;\n          var t0 = 0;\n          var t1 = 1;\n          var max_iter = 20;\n          while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {\n            (function () {\n              if (pol) {L_diff *= -1;}\n              if (L_diff < 0) {\n                t0 = t;\n                t += (t1 - t) * 0.5;\n              } else {\n                t1 = t;\n                t += (t0 - t) * 0.5;\n              }\n              L_actual = getColor(t, true).lab()[0];\n              return L_diff = L_actual - L_ideal;\n            })();\n          }\n          return t;\n        };\n      } else {\n        tMapLightness = function (t) {return t;};\n      }\n      return f;\n    };\n\n    f.padding = function (p) {\n      if (p != null) {\n        if (type$2(p) === 'number') {\n          p = [p, p];\n        }\n        _padding = p;\n        return f;\n      } else {\n        return _padding;\n      }\n    };\n\n    f.colors = function (numColors, out) {\n      // If no arguments are given, return the original colors that were provided\n      if (arguments.length < 2) {out = 'hex';}\n      var result = [];\n\n      if (arguments.length === 0) {\n        result = _colors.slice(0);\n\n      } else if (numColors === 1) {\n        result = [f(0.5)];\n\n      } else if (numColors > 1) {\n        var dm = _domain[0];\n        var dd = _domain[1] - dm;\n        result = __range__(0, numColors, false).map(function (i) {return f(dm + i / (numColors - 1) * dd);});\n\n      } else {// returns all colors based on the defined classes\n        colors = [];\n        var samples = [];\n        if (_classes && _classes.length > 2) {\n          for (var i = 1, end = _classes.length, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n            samples.push((_classes[i - 1] + _classes[i]) * 0.5);\n          }\n        } else {\n          samples = _domain;\n        }\n        result = samples.map(function (v) {return f(v);});\n      }\n\n      if (chroma$4[out]) {\n        result = result.map(function (c) {return c[out]();});\n      }\n      return result;\n    };\n\n    f.cache = function (c) {\n      if (c != null) {\n        _useCache = c;\n        return f;\n      } else {\n        return _useCache;\n      }\n    };\n\n    f.gamma = function (g) {\n      if (g != null) {\n        _gamma = g;\n        return f;\n      } else {\n        return _gamma;\n      }\n    };\n\n    f.nodata = function (d) {\n      if (d != null) {\n        _nacol = chroma$4(d);\n        return f;\n      } else {\n        return _nacol;\n      }\n    };\n\n    return f;\n  };\n\n  function __range__(left, right, inclusive) {\n    var range = [];\n    var ascending = left < right;\n    var end = !inclusive ? right : ascending ? right + 1 : right - 1;\n    for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n      range.push(i);\n    }\n    return range;\n  }\n\n  //\n  // interpolates between a set of colors uzing a bezier spline\n  //\n\n  // @requires utils lab\n  var Color$5 = Color_1;\n\n  var scale$1 = scale$2;\n\n  // nth row of the pascal triangle\n  var binom_row = function (n) {\n    var row = [1, 1];\n    for (var i = 1; i < n; i++) {\n      var newrow = [1];\n      for (var j = 1; j <= row.length; j++) {\n        newrow[j] = (row[j] || 0) + row[j - 1];\n      }\n      row = newrow;\n    }\n    return row;\n  };\n\n  var bezier = function (colors) {\n    var assign, assign$1, assign$2;\n\n    var I, lab0, lab1, lab2;\n    colors = colors.map(function (c) {return new Color$5(c);});\n    if (colors.length === 2) {\n      // linear interpolation\n      assign = colors.map(function (c) {return c.lab();}), lab0 = assign[0], lab1 = assign[1];\n      I = function (t) {\n        var lab = [0, 1, 2].map(function (i) {return lab0[i] + t * (lab1[i] - lab0[i]);});\n        return new Color$5(lab, 'lab');\n      };\n    } else if (colors.length === 3) {\n      // quadratic bezier interpolation\n      assign$1 = colors.map(function (c) {return c.lab();}), lab0 = assign$1[0], lab1 = assign$1[1], lab2 = assign$1[2];\n      I = function (t) {\n        var lab = [0, 1, 2].map(function (i) {return (1 - t) * (1 - t) * lab0[i] + 2 * (1 - t) * t * lab1[i] + t * t * lab2[i];});\n        return new Color$5(lab, 'lab');\n      };\n    } else if (colors.length === 4) {\n      // cubic bezier interpolation\n      var lab3;\n      assign$2 = colors.map(function (c) {return c.lab();}), lab0 = assign$2[0], lab1 = assign$2[1], lab2 = assign$2[2], lab3 = assign$2[3];\n      I = function (t) {\n        var lab = [0, 1, 2].map(function (i) {return (1 - t) * (1 - t) * (1 - t) * lab0[i] + 3 * (1 - t) * (1 - t) * t * lab1[i] + 3 * (1 - t) * t * t * lab2[i] + t * t * t * lab3[i];});\n        return new Color$5(lab, 'lab');\n      };\n    } else if (colors.length >= 5) {\n      // general case (degree n bezier)\n      var labs, row, n;\n      labs = colors.map(function (c) {return c.lab();});\n      n = colors.length - 1;\n      row = binom_row(n);\n      I = function (t) {\n        var u = 1 - t;\n        var lab = [0, 1, 2].map(function (i) {return labs.reduce(function (sum, el, j) {return sum + row[j] * Math.pow(u, n - j) * Math.pow(t, j) * el[i];}, 0);});\n        return new Color$5(lab, 'lab');\n      };\n    } else {\n      throw new RangeError(\"No point in running bezier with only one color.\");\n    }\n    return I;\n  };\n\n  var bezier_1 = function (colors) {\n    var f = bezier(colors);\n    f.scale = function () {return scale$1(f);};\n    return f;\n  };\n\n  /*\n   * interpolates between a set of colors uzing a bezier spline\n   * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n   */\n\n  var chroma$3 = chroma_1;\n\n  var blend = function (bottom, top, mode) {\n    if (!blend[mode]) {\n      throw new Error('unknown blend mode ' + mode);\n    }\n    return blend[mode](bottom, top);\n  };\n\n  var blend_f = function (f) {return function (bottom, top) {\n      var c0 = chroma$3(top).rgb();\n      var c1 = chroma$3(bottom).rgb();\n      return chroma$3.rgb(f(c0, c1));\n    };};\n\n  var each = function (f) {return function (c0, c1) {\n      var out = [];\n      out[0] = f(c0[0], c1[0]);\n      out[1] = f(c0[1], c1[1]);\n      out[2] = f(c0[2], c1[2]);\n      return out;\n    };};\n\n  var normal = function (a) {return a;};\n  var multiply = function (a, b) {return a * b / 255;};\n  var darken = function (a, b) {return a > b ? b : a;};\n  var lighten = function (a, b) {return a > b ? a : b;};\n  var screen = function (a, b) {return 255 * (1 - (1 - a / 255) * (1 - b / 255));};\n  var overlay = function (a, b) {return b < 128 ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255));};\n  var burn = function (a, b) {return 255 * (1 - (1 - b / 255) / (a / 255));};\n  var dodge = function (a, b) {\n    if (a === 255) {return 255;}\n    a = 255 * (b / 255) / (1 - a / 255);\n    return a > 255 ? 255 : a;\n  };\n\n  // # add = (a,b) ->\n  // #     if (a + b > 255) then 255 else a + b\n\n  blend.normal = blend_f(each(normal));\n  blend.multiply = blend_f(each(multiply));\n  blend.screen = blend_f(each(screen));\n  blend.overlay = blend_f(each(overlay));\n  blend.darken = blend_f(each(darken));\n  blend.lighten = blend_f(each(lighten));\n  blend.dodge = blend_f(each(dodge));\n  blend.burn = blend_f(each(burn));\n  // blend.add = blend_f(each(add));\n\n  var blend_1 = blend;\n\n  // cubehelix interpolation\n  // based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\n  // http://astron-soc.in/bulletin/11June/289392011.pdf\n\n  var type$1 = utils.type;\n  var clip_rgb = utils.clip_rgb;\n  var TWOPI = utils.TWOPI;\n  var pow$2 = Math.pow;\n  var sin$1 = Math.sin;\n  var cos$1 = Math.cos;\n  var chroma$2 = chroma_1;\n\n  var cubehelix = function (start, rotations, hue, gamma, lightness) {\n    if (start === void 0) start = 300;\n    if (rotations === void 0) rotations = -1.5;\n    if (hue === void 0) hue = 1;\n    if (gamma === void 0) gamma = 1;\n    if (lightness === void 0) lightness = [0, 1];\n\n    var dh = 0,dl;\n    if (type$1(lightness) === 'array') {\n      dl = lightness[1] - lightness[0];\n    } else {\n      dl = 0;\n      lightness = [lightness, lightness];\n    }\n\n    var f = function (fract) {\n      var a = TWOPI * ((start + 120) / 360 + rotations * fract);\n      var l = pow$2(lightness[0] + dl * fract, gamma);\n      var h = dh !== 0 ? hue[0] + fract * dh : hue;\n      var amp = h * l * (1 - l) / 2;\n      var cos_a = cos$1(a);\n      var sin_a = sin$1(a);\n      var r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a);\n      var g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a);\n      var b = l + amp * (+1.97294 * cos_a);\n      return chroma$2(clip_rgb([r * 255, g * 255, b * 255, 1]));\n    };\n\n    f.start = function (s) {\n      if (s == null) {return start;}\n      start = s;\n      return f;\n    };\n\n    f.rotations = function (r) {\n      if (r == null) {return rotations;}\n      rotations = r;\n      return f;\n    };\n\n    f.gamma = function (g) {\n      if (g == null) {return gamma;}\n      gamma = g;\n      return f;\n    };\n\n    f.hue = function (h) {\n      if (h == null) {return hue;}\n      hue = h;\n      if (type$1(hue) === 'array') {\n        dh = hue[1] - hue[0];\n        if (dh === 0) {hue = hue[1];}\n      } else {\n        dh = 0;\n      }\n      return f;\n    };\n\n    f.lightness = function (h) {\n      if (h == null) {return lightness;}\n      if (type$1(h) === 'array') {\n        lightness = h;\n        dl = h[1] - h[0];\n      } else {\n        lightness = [h, h];\n        dl = 0;\n      }\n      return f;\n    };\n\n    f.scale = function () {return chroma$2.scale(f);};\n\n    f.hue(hue);\n\n    return f;\n  };\n\n  var Color$4 = Color_1;\n  var digits = '0123456789abcdef';\n\n  var floor$1 = Math.floor;\n  var random = Math.random;\n\n  var random_1 = function () {\n    var code = '#';\n    for (var i = 0; i < 6; i++) {\n      code += digits.charAt(floor$1(random() * 16));\n    }\n    return new Color$4(code, 'hex');\n  };\n\n  var type = type$p;\n  var log = Math.log;\n  var pow$1 = Math.pow;\n  var floor = Math.floor;\n  var abs$1 = Math.abs;\n\n\n  var analyze = function (data, key) {\n    if (key === void 0) key = null;\n\n    var r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n    if (type(data) === 'object') {\n      data = Object.values(data);\n    }\n    data.forEach(function (val) {\n      if (key && type(val) === 'object') {val = val[key];}\n      if (val !== undefined && val !== null && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n        if (val < r.min) {r.min = val;}\n        if (val > r.max) {r.max = val;}\n        r.count += 1;\n      }\n    });\n\n    r.domain = [r.min, r.max];\n\n    r.limits = function (mode, num) {return limits(r, mode, num);};\n\n    return r;\n  };\n\n\n  var limits = function (data, mode, num) {\n    if (mode === void 0) mode = 'equal';\n    if (num === void 0) num = 7;\n\n    if (type(data) == 'array') {\n      data = analyze(data);\n    }\n    var min = data.min;\n    var max = data.max;\n    var values = data.values.sort(function (a, b) {return a - b;});\n\n    if (num === 1) {return [min, max];}\n\n    var limits = [];\n\n    if (mode.substr(0, 1) === 'c') {// continuous\n      limits.push(min);\n      limits.push(max);\n    }\n\n    if (mode.substr(0, 1) === 'e') {// equal interval\n      limits.push(min);\n      for (var i = 1; i < num; i++) {\n        limits.push(min + i / num * (max - min));\n      }\n      limits.push(max);\n    } else\n\n    if (mode.substr(0, 1) === 'l') {// log scale\n      if (min <= 0) {\n        throw new Error('Logarithmic scales are only possible for values > 0');\n      }\n      var min_log = Math.LOG10E * log(min);\n      var max_log = Math.LOG10E * log(max);\n      limits.push(min);\n      for (var i$1 = 1; i$1 < num; i$1++) {\n        limits.push(pow$1(10, min_log + i$1 / num * (max_log - min_log)));\n      }\n      limits.push(max);\n    } else\n\n    if (mode.substr(0, 1) === 'q') {// quantile scale\n      limits.push(min);\n      for (var i$2 = 1; i$2 < num; i$2++) {\n        var p = (values.length - 1) * i$2 / num;\n        var pb = floor(p);\n        if (pb === p) {\n          limits.push(values[pb]);\n        } else {// p > pb\n          var pr = p - pb;\n          limits.push(values[pb] * (1 - pr) + values[pb + 1] * pr);\n        }\n      }\n      limits.push(max);\n\n    } else\n\n    if (mode.substr(0, 1) === 'k') {// k-means clustering\n      /*\n      implementation based on\n      http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n      simplified for 1-d input values\n      */\n      var cluster;\n      var n = values.length;\n      var assignments = new Array(n);\n      var clusterSizes = new Array(num);\n      var repeat = true;\n      var nb_iters = 0;\n      var centroids = null;\n\n      // get seed values\n      centroids = [];\n      centroids.push(min);\n      for (var i$3 = 1; i$3 < num; i$3++) {\n        centroids.push(min + i$3 / num * (max - min));\n      }\n      centroids.push(max);\n\n      while (repeat) {\n        // assignment step\n        for (var j = 0; j < num; j++) {\n          clusterSizes[j] = 0;\n        }\n        for (var i$4 = 0; i$4 < n; i$4++) {\n          var value = values[i$4];\n          var mindist = Number.MAX_VALUE;\n          var best = void 0;\n          for (var j$1 = 0; j$1 < num; j$1++) {\n            var dist = abs$1(centroids[j$1] - value);\n            if (dist < mindist) {\n              mindist = dist;\n              best = j$1;\n            }\n            clusterSizes[best]++;\n            assignments[i$4] = best;\n          }\n        }\n\n        // update centroids step\n        var newCentroids = new Array(num);\n        for (var j$2 = 0; j$2 < num; j$2++) {\n          newCentroids[j$2] = null;\n        }\n        for (var i$5 = 0; i$5 < n; i$5++) {\n          cluster = assignments[i$5];\n          if (newCentroids[cluster] === null) {\n            newCentroids[cluster] = values[i$5];\n          } else {\n            newCentroids[cluster] += values[i$5];\n          }\n        }\n        for (var j$3 = 0; j$3 < num; j$3++) {\n          newCentroids[j$3] *= 1 / clusterSizes[j$3];\n        }\n\n        // check convergence\n        repeat = false;\n        for (var j$4 = 0; j$4 < num; j$4++) {\n          if (newCentroids[j$4] !== centroids[j$4]) {\n            repeat = true;\n            break;\n          }\n        }\n\n        centroids = newCentroids;\n        nb_iters++;\n\n        if (nb_iters > 200) {\n          repeat = false;\n        }\n      }\n\n      // finished k-means clustering\n      // the next part is borrowed from gabrielflor.it\n      var kClusters = {};\n      for (var j$5 = 0; j$5 < num; j$5++) {\n        kClusters[j$5] = [];\n      }\n      for (var i$6 = 0; i$6 < n; i$6++) {\n        cluster = assignments[i$6];\n        kClusters[cluster].push(values[i$6]);\n      }\n      var tmpKMeansBreaks = [];\n      for (var j$6 = 0; j$6 < num; j$6++) {\n        tmpKMeansBreaks.push(kClusters[j$6][0]);\n        tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length - 1]);\n      }\n      tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a, b) {return a - b;});\n      limits.push(tmpKMeansBreaks[0]);\n      for (var i$7 = 1; i$7 < tmpKMeansBreaks.length; i$7 += 2) {\n        var v = tmpKMeansBreaks[i$7];\n        if (!isNaN(v) && limits.indexOf(v) === -1) {\n          limits.push(v);\n        }\n      }\n    }\n    return limits;\n  };\n\n  var analyze_1 = { analyze: analyze, limits: limits };\n\n  var Color$3 = Color_1;\n\n\n  var contrast = function (a, b) {\n    // WCAG contrast ratio\n    // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n    a = new Color$3(a);\n    b = new Color$3(b);\n    var l1 = a.luminance();\n    var l2 = b.luminance();\n    return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n  };\n\n  var Color$2 = Color_1;\n  var sqrt = Math.sqrt;\n  var pow = Math.pow;\n  var min = Math.min;\n  var max = Math.max;\n  var atan2 = Math.atan2;\n  var abs = Math.abs;\n  var cos = Math.cos;\n  var sin = Math.sin;\n  var exp = Math.exp;\n  var PI = Math.PI;\n\n  var deltaE = function (a, b, Kl, Kc, Kh) {\n    if (Kl === void 0) Kl = 1;\n    if (Kc === void 0) Kc = 1;\n    if (Kh === void 0) Kh = 1;\n\n    // Delta E (CIE 2000)\n    // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CIE2000.html\n    var rad2deg = function (rad) {\n      return 360 * rad / (2 * PI);\n    };\n    var deg2rad = function (deg) {\n      return 2 * PI * deg / 360;\n    };\n    a = new Color$2(a);\n    b = new Color$2(b);\n    var ref = Array.from(a.lab());\n    var L1 = ref[0];\n    var a1 = ref[1];\n    var b1 = ref[2];\n    var ref$1 = Array.from(b.lab());\n    var L2 = ref$1[0];\n    var a2 = ref$1[1];\n    var b2 = ref$1[2];\n    var avgL = (L1 + L2) / 2;\n    var C1 = sqrt(pow(a1, 2) + pow(b1, 2));\n    var C2 = sqrt(pow(a2, 2) + pow(b2, 2));\n    var avgC = (C1 + C2) / 2;\n    var G = 0.5 * (1 - sqrt(pow(avgC, 7) / (pow(avgC, 7) + pow(25, 7))));\n    var a1p = a1 * (1 + G);\n    var a2p = a2 * (1 + G);\n    var C1p = sqrt(pow(a1p, 2) + pow(b1, 2));\n    var C2p = sqrt(pow(a2p, 2) + pow(b2, 2));\n    var avgCp = (C1p + C2p) / 2;\n    var arctan1 = rad2deg(atan2(b1, a1p));\n    var arctan2 = rad2deg(atan2(b2, a2p));\n    var h1p = arctan1 >= 0 ? arctan1 : arctan1 + 360;\n    var h2p = arctan2 >= 0 ? arctan2 : arctan2 + 360;\n    var avgHp = abs(h1p - h2p) > 180 ? (h1p + h2p + 360) / 2 : (h1p + h2p) / 2;\n    var T = 1 - 0.17 * cos(deg2rad(avgHp - 30)) + 0.24 * cos(deg2rad(2 * avgHp)) + 0.32 * cos(deg2rad(3 * avgHp + 6)) - 0.2 * cos(deg2rad(4 * avgHp - 63));\n    var deltaHp = h2p - h1p;\n    deltaHp = abs(deltaHp) <= 180 ? deltaHp : h2p <= h1p ? deltaHp + 360 : deltaHp - 360;\n    deltaHp = 2 * sqrt(C1p * C2p) * sin(deg2rad(deltaHp) / 2);\n    var deltaL = L2 - L1;\n    var deltaCp = C2p - C1p;\n    var sl = 1 + 0.015 * pow(avgL - 50, 2) / sqrt(20 + pow(avgL - 50, 2));\n    var sc = 1 + 0.045 * avgCp;\n    var sh = 1 + 0.015 * avgCp * T;\n    var deltaTheta = 30 * exp(-pow((avgHp - 275) / 25, 2));\n    var Rc = 2 * sqrt(pow(avgCp, 7) / (pow(avgCp, 7) + pow(25, 7)));\n    var Rt = -Rc * sin(2 * deg2rad(deltaTheta));\n    var result = sqrt(pow(deltaL / (Kl * sl), 2) + pow(deltaCp / (Kc * sc), 2) + pow(deltaHp / (Kh * sh), 2) + Rt * (deltaCp / (Kc * sc)) * (deltaHp / (Kh * sh)));\n    return max(0, min(100, result));\n  };\n\n  var Color$1 = Color_1;\n\n  // simple Euclidean distance\n  var distance = function (a, b, mode) {\n    if (mode === void 0) mode = 'lab';\n\n    // Delta E (CIE 1976)\n    // see http://www.brucelindbloom.com/index.html?Equations.html\n    a = new Color$1(a);\n    b = new Color$1(b);\n    var l1 = a.get(mode);\n    var l2 = b.get(mode);\n    var sum_sq = 0;\n    for (var i in l1) {\n      var d = (l1[i] || 0) - (l2[i] || 0);\n      sum_sq += d * d;\n    }\n    return Math.sqrt(sum_sq);\n  };\n\n  var Color = Color_1;\n\n  var valid = function () {\n    var args = [],len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    try {\n      new (Function.prototype.bind.apply(Color, [null].concat(args)))();\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  // some pre-defined color scales:\n  var chroma$1 = chroma_1;\n\n  var scale = scale$2;\n\n  var scales = {\n    cool: function cool() {return scale([chroma$1.hsl(180, 1, .9), chroma$1.hsl(250, .7, .4)]);},\n    hot: function hot() {return scale(['#000', '#f00', '#ff0', '#fff']).mode('rgb');}\n  };\n\n  /**\n      ColorBrewer colors for chroma.js\n       Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\n      Pennsylvania State University.\n       Licensed under the Apache License, Version 2.0 (the \"License\");\n      you may not use this file except in compliance with the License.\n      You may obtain a copy of the License at\n      http://www.apache.org/licenses/LICENSE-2.0\n       Unless required by applicable law or agreed to in writing, software distributed\n      under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n      CONDITIONS OF ANY KIND, either express or implied. See the License for the\n      specific language governing permissions and limitations under the License.\n  */\n\n\n\n\n  var colorbrewer = {\n    // sequential\n    OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n    PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n    BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n    Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n    BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n    YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n    YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n    Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n    RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n    Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n    YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n    Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n    GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n    Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n    YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n    PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n    Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n    PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n    Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n\n    // diverging\n\n    Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n    RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n    RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n    PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n    PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n    RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n    BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n    RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n    PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n\n    // qualitative\n\n    Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n    Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n    Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n    Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n    Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n    Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n    Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n    Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2']\n  };\n\n  // add lowercase aliases for case-insensitive matches\n  for (var i = 0, list = Object.keys(colorbrewer); i < list.length; i += 1) {\n    var key = list[i];\n\n    colorbrewer[key.toLowerCase()] = colorbrewer[key];\n  }\n\n  var colorbrewer_1 = colorbrewer;\n\n  var chroma = chroma_1;\n\n  // feel free to comment out anything to rollup\n  // a smaller chroma.js built\n\n  // io --> convert colors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  // operators --> modify existing Colors\n\n\n\n\n\n\n\n\n\n\n  // interpolators\n\n\n\n\n\n\n\n\n\n\n\n\n  // generators -- > create new colors\n  chroma.average = average;\n  chroma.bezier = bezier_1;\n  chroma.blend = blend_1;\n  chroma.cubehelix = cubehelix;\n  chroma.mix = chroma.interpolate = mix$1;\n  chroma.random = random_1;\n  chroma.scale = scale$2;\n\n  // other utility methods\n  chroma.analyze = analyze_1.analyze;\n  chroma.contrast = contrast;\n  chroma.deltaE = deltaE;\n  chroma.distance = distance;\n  chroma.limits = analyze_1.limits;\n  chroma.valid = valid;\n\n  // scale\n  chroma.scales = scales;\n\n  // colors\n  chroma.colors = w3cx11_1;\n  chroma.brewer = colorbrewer_1;\n\n  var chroma_js = chroma;\n\n  return chroma_js;\n\n});", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\ColorSetting.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\ColorSetting.tsx\");\n  import.meta.hot.lastModified = \"1702296725194.044\";\n}\n// REMIX HMR END\n\nimport { ColorPicker, InlineStack, Popover, TextField } from \"@shopify/polaris\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport chroma from \"chroma-js\";\nconst ColorSetting = ({\n  title,\n  initialColor = \"#fff\",\n  onChange = () => {}\n}) => {\n  _s();\n  const [valueBackColor, setValueBackColor] = useState(initialColor);\n  const [hexColor, setHexColor] = useState();\n  const [showColorPicker, setShowColorPicker] = useState(false);\n  const [color, setColor] = useState({\n    hue: 120,\n    brightness: 1,\n    saturation: 1\n  });\n  const colorBack = useMemo(() => {\n    return chroma.hsv(color.hue, color.saturation, color.brightness).hex();\n  }, [color]);\n  useEffect(() => {\n    setValueBackColor(colorBack);\n  }, [colorBack]);\n  const togglePopoverActive = useCallback(() => setShowColorPicker(popoverActive => !popoverActive), []);\n  const isValidHexColor = value => {\n    if (value === \"\") {\n      return true; // Allow empty value\n    }\n\n    const hexColorRegex = /^#([0-9a-fA-F]{6})$/;\n    return hexColorRegex.test(value);\n  };\n  useEffect(() => {\n    if (isValidHexColor(valueBackColor)) {\n      setHexColor(valueBackColor);\n    }\n  }, [valueBackColor]);\n  const handleChangeBackColor = useCallback(newValue => setValueBackColor(newValue), []);\n  useEffect(() => {\n    setValueBackColor(initialColor);\n  }, [initialColor]);\n  useEffect(() => {\n    onChange(hexColor);\n  }, [hexColor]);\n  const activator = <div style={{\n    backgroundColor: valueBackColor,\n    border: \"1.5px solid\",\n    borderColor: \"rgba(138, 138, 138, 1)\",\n    width: \"45px\",\n    height: \"45px\",\n    borderRadius: \"25px\",\n    cursor: \"pointer\"\n  }} onClick={togglePopoverActive}>\r\n    </div>;\n  return <>\r\n            <InlineStack align={\"space-between\"} blockAlign={\"center\"}>\r\n                <TextField label={title} value={valueBackColor} onChange={handleChangeBackColor} error={!isValidHexColor(valueBackColor)} autoComplete=\"off\" />\r\n\r\n                <Popover active={showColorPicker} activator={activator} autofocusTarget=\"first-node\" onClose={togglePopoverActive}>\r\n                    <ColorPicker onChange={setColor} color={color} />\r\n                </Popover>\r\n            </InlineStack>\r\n        </>;\n};\n_s(ColorSetting, \"4KQz4vqKi1y8Y3Y/sepX5epmaqo=\");\n_c = ColorSetting;\nexport { ColorSetting };\nvar _c;\n$RefreshReg$(_c, \"ColorSetting\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app\\\\services\\\\converter.ts\"\n);\nimport.meta.hot.lastModified = \"1701939615639.7156\";\n}\n// REMIX HMR END\n\n\r\ntype Metafield={\r\n    node:{\r\n        key:string,\r\n        namespace:string\r\n        value:string\r\n    }\r\n}\r\n\r\n\r\nconst deepEqualObject=(obj1: any, obj2: any): boolean => {\r\n    if (obj1 === obj2) {\r\n        return true;\r\n    }\r\n\r\n    if (typeof obj1 !== 'object' || obj1 === null ||\r\n        typeof obj2 !== 'object' || obj2 === null) {\r\n        return false;\r\n    }\r\n\r\n    const keys1 = Object.keys(obj1);\r\n    const keys2 = Object.keys(obj2);\r\n\r\n    if (keys1.length !== keys2.length) {\r\n        return false;\r\n    }\r\n\r\n    for (const key of keys1) {\r\n        if (!deepEqualObject(obj1[key], obj2[key])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nconst arrayToObjectMetafield = (arrayMetafields:Metafield[]) : { [key: string]: string } =>{\r\n    let myObject:{ [key: string]: string } ={}\r\n\r\n    for(let item of arrayMetafields){\r\n        myObject[item.node.key] = item.node.value\r\n    }\r\n\r\n    return myObject\r\n}\r\n\r\nexport {arrayToObjectMetafield, deepEqualObject}", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app\\\\constants\\\\namespaces.ts\"\n);\nimport.meta.hot.lastModified = \"1702289525829.7693\";\n}\n// REMIX HMR END\n\nconst Metafields = {\r\n    ProductButton:\"productButton\",\r\n    FixedButton:\"fixedButton\",\r\n    Toolbar:\"toolbar\",\r\n    ProductsGridButton:\"productsGridButton\",\r\n    Table:\"table\"\r\n}\r\n\r\nexport {Metafields}", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app\\\\constants\\\\defaults.ts\"\n);\nimport.meta.hot.lastModified = \"1702558762567.0886\";\n}\n// REMIX HMR END\n\n\r\nconst defaultStylesForToolbar ={\r\n    showToolbar:\"true\",\r\n    showToolbarAfterClickOnProductPage:\"true\",\r\n    backgroundColor:\"#464545\",\r\n    textColor:\"#000000\",\r\n    viewCompareButtonBackColor:\"#0067dd\",\r\n    viewCompareButtonTextColor:\"#0067dd\",\r\n    closeButtonBackColor:\"#000000\",\r\n    closeButtonTextColor:\"#000000\",\r\n    cleanUpButtonBackColor:\"#fc893c\",\r\n    cleanUpButtonTextColor:\"#fc893c\"\r\n}\r\n\r\nconst defaultStylesForProductDetailPageButton = {\r\n    show:\"true\",\r\n    showIcon:\"true\",\r\n    showLabel:\"true\",\r\n    backColor:\"#ffffff\",\r\n    borderColor:\"#000000\",\r\n    addToCompareTextColor:\"#000000\",\r\n    removeFromCompareTextColor:\"#000000\"\r\n}\r\n\r\nconst defaultStylesForFixedButton = {\r\n    show: \"true\",\r\n    showLabel: \"true\",\r\n    backColor: \"#000000\",\r\n    textColor: \"#000000\"\r\n}\r\n\r\nconst defaultStylesForProductsGridButton = {\r\n    showCompareButton:\"false\",\r\n    showIcon:\"true\",\r\n    showLabel:\"true\",\r\n    backgroundColor:\"#ffffff\",\r\n    borderColor:\"#ffffff\",\r\n    addCompareButtonTextColor:\"#ffffff\",\r\n    removeCompareButtonTextColor:\"#ffffff\"\r\n}\r\n\r\nconst defaultStylesForTable = {\r\n    backColor:\"#ffffff\",\r\n    textColor:\"#000000\",\r\n    attributesBackColor:\"#ffffff\",\r\n    attributesTextColor:\"#000000\",\r\n    attributesGroupTextColor:\"#000000\",\r\n    attributesGroupBackColor:\"#ffffff\",\r\n    topbarBackColor:\"#ffffff\",\r\n    topbarTextColor:\"#000000\"\r\n}\r\n\r\n\r\nexport {\r\n    defaultStylesForToolbar,\r\n    defaultStylesForProductDetailPageButton,\r\n    defaultStylesForFixedButton,\r\n    defaultStylesForProductsGridButton,\r\n    defaultStylesForTable\r\n}", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app\\\\constants\\\\types.ts\"\n);\nimport.meta.hot.lastModified = \"1702556958685.2434\";\n}\n// REMIX HMR END\n\nconst MetafieldsType = {\r\n    Boolean:\"boolean\",\r\n    Color:\"color\"\r\n}\r\n\r\nexport {\r\n    MetafieldsType\r\n}", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app\\\\constants\\\\keys.ts\"\n);\nimport.meta.hot.lastModified = \"1702560995352.1587\";\n}\n// REMIX HMR END\n\n\r\nconst MetafieldsProductButtonKeys ={\r\n    Show:\"show\",\r\n    ShowLabel:\"showLabel\",\r\n    ShowIcon:\"showIcon\",\r\n    BackColor:\"backColor\",\r\n    BorderColor:\"borderColor\",\r\n    AddToCompareTextColor:\"addToCompareTextColor\",\r\n    RemoveFromCompareTextColor:\"removeFromCompareTextColor\"\r\n}\r\n\r\nconst MetafieldsFixedButtonKeys ={\r\n    Show:\"show\",\r\n    ShowLabel:\"showLabel\",\r\n    BackColor:\"backColor\",\r\n    TextColor:\"textColor\"\r\n}\r\n\r\nconst MetafieldsProductsGridButtonKeys ={\r\n    ShowCompareButton:\"showCompareButton\",\r\n    ShowIcon:\"showIcon\",\r\n    ShowLabel:\"showLabel\",\r\n    BackgroundColor:\"backgroundColor\",\r\n    BorderColor:\"borderColor\",\r\n    AddCompareButtonTextColor:\"addCompareButtonTextColor\",\r\n    RemoveCompareButtonTextColor:\"removeCompareButtonTextColor\"\r\n}\r\n\r\nconst MetafieldsTableKeys ={\r\n    BackColor:\"backColor\",\r\n    TextColor:\"textColor\",\r\n    AttributesBackColor:\"attributesBackColor\",\r\n    AttributesTextColor:\"attributesTextColor\",\r\n    AttributesGroupTextColor:\"attributesGroupTextColor\",\r\n    AttributesGroupBackColor:\"attributesGroupBackColor\",\r\n    TopbarBackColor:\"topbarBackColor\",\r\n    TopbarTextColor:\"topbarTextColor\"\r\n}\r\n\r\nconst MetafieldsToolbarKeys = {\r\n    ShowToolbar:\"showToolbar\",\r\n    ShowToolbarAfterClickOnProductPage:\"showToolbarAfterClickOnProductPage\",\r\n    BackgroundColor:\"backgroundColor\",\r\n    TextColor:\"textColor\",\r\n    ViewCompareButtonBackColor:\"viewCompareButtonBackColor\",\r\n    ViewCompareButtonTextColor:\"viewCompareButtonTextColor\",\r\n    CloseButtonBackColor:\"closeButtonBackColor\",\r\n    CloseButtonTextColor:\"closeButtonTextColor\",\r\n    CleanUpButtonBackColor:\"cleanUpButtonBackColor\",\r\n    CleanUpButtonTextColor:\"cleanUpButtonTextColor\"\r\n}\r\n\r\nexport {\r\n    MetafieldsToolbarKeys,\r\n    MetafieldsTableKeys,\r\n    MetafieldsProductsGridButtonKeys,\r\n    MetafieldsProductButtonKeys,\r\n    MetafieldsFixedButtonKeys\r\n}"],
  "mappings": "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",
  "names": ["min", "max", "rgb", "i", "Color", "list", "i$1", "hsl", "_c", "name", "num", "rnd", "abs", "lab", "lch", "A", "colors", "d", "f", "_pos", "key", "limits", "chroma", "chroma"]
}
