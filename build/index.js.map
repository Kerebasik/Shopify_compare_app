{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/shopify.server.ts", "../app/db.server.ts", "../app/root.tsx", "../app/routes/app.comparison.fixed-btn.tsx", "../app/components/BooleanSetting.tsx", "../app/components/ColorSetting.tsx", "../app/graphql/query.ts", "../app/graphql/mutation.ts", "../app/services/converter.ts", "../app/constants/namespaces.ts", "../app/constants/defaults.ts", "../app/components/PreviewFixedCompareButton/FixedCompareButton.tsx", "../app/constants/types.ts", "../app/constants/keys.ts", "../app/routes/app.comparison.toolbar.tsx", "../app/components/PreviewToolbar/PreviewToolbar.tsx", "../app/routes/app.comparison.table.tsx", "../app/components/PreviewTable/PreviewTable.tsx", "../app/routes/app.comparison.grid.tsx", "../app/routes/app.comparison.atc.tsx", "../app/components/PlusIcon.tsx", "../app/components/MinusIcon.tsx", "../app/components/PreviewProductDetailPageButton/PreviewProductDetailPageButton.tsx", "../app/routes/app.comparison.tsx", "../app/constants/buttons.ts", "../app/components/CustomNavListItem.tsx", "../app/routes/app._index.tsx", "../app/hooks/useToggle.tsx", "../app/constants/validation.ts", "../app/helpers/initialItems.ts", "../app/helpers/linkBuilder.ts", "../app/helpers/getCompareMeta.ts", "../app/helpers/addProductMeta.ts", "../app/helpers/addAndDelMetafield.ts", "../app/components/DraggableItem/DraggableItems.tsx", "../app/components/DraggableItem/DraggableItem.styled.tsx", "../app/components/MetafieldModal/MetafieldModal.tsx", "../app/components/MetafieldModalForm/MetafieldModalForm.tsx", "../app/hooks/useCreateMeta.tsx", "../app/components/MetafieldModalForm/MetafieldModalForm.styled.tsx", "../app/components/MetafieldModalForm/MetafieldModalCheckbox.tsx", "../app/components/MetafieldModal/MetafieldModal.styled.tsx", "../app/components/DraggableItem/DraggableItem.tsx", "../app/routes/auth.login/route.tsx", "../app/routes/auth.login/error.server.tsx", "../app/routes/webhooks.tsx", "../app/routes/auth.$.tsx", "../app/routes/_index/route.tsx", "../app/routes/app.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import { PassThrough } from \"stream\";\r\nimport { renderToPipeableStream } from \"react-dom/server\";\r\nimport { RemixServer } from \"@remix-run/react\";\r\nimport {\r\n  createReadableStreamFromReadable,\r\n  type EntryContext,\r\n} from \"@remix-run/node\";\r\nimport isbot from \"isbot\";\r\nimport { addDocumentResponseHeaders } from \"./shopify.server\";\r\n\r\nconst ABORT_DELAY = 5000;\r\n\r\nexport default async function handleRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n  addDocumentResponseHeaders(request, responseHeaders);\r\n  const callbackName = isbot(request.headers.get(\"user-agent\"))\r\n    ? \"onAllReady\"\r\n    : \"onShellReady\";\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const { pipe, abort } = renderToPipeableStream(\r\n      <RemixServer\r\n        context={remixContext}\r\n        url={request.url}\r\n        abortDelay={ABORT_DELAY}\r\n      />,\r\n      {\r\n        [callbackName]: () => {\r\n          const body = new PassThrough();\r\n          const stream = createReadableStreamFromReadable(body);\r\n\r\n          responseHeaders.set(\"Content-Type\", \"text/html\");\r\n          resolve(\r\n            new Response(stream, {\r\n              headers: responseHeaders,\r\n              status: responseStatusCode,\r\n            })\r\n          );\r\n          pipe(body);\r\n        },\r\n        onShellError(error) {\r\n          reject(error);\r\n        },\r\n        onError(error) {\r\n          responseStatusCode = 500;\r\n          console.error(error);\r\n        },\r\n      }\r\n    );\r\n\r\n    setTimeout(abort, ABORT_DELAY);\r\n  });\r\n}\r\n", "import \"@shopify/shopify-app-remix/adapters/node\";\r\nimport {\r\n  AppDistribution,\r\n  DeliveryMethod,\r\n  shopifyApp,\r\n  LATEST_API_VERSION,\r\n} from \"@shopify/shopify-app-remix/server\";\r\nimport { PrismaSessionStorage } from \"@shopify/shopify-app-session-storage-prisma\";\r\nimport { restResources } from \"@shopify/shopify-api/rest/admin/2023-10\";\r\nimport prisma from \"./db.server\";\r\n\r\nconst shopify = shopifyApp({\r\n  apiKey: process.env.SHOPIFY_API_KEY,\r\n  apiSecretKey: process.env.SHOPIFY_API_SECRET || \"\",\r\n  apiVersion: LATEST_API_VERSION,\r\n  scopes: process.env.SCOPES?.split(\",\"),\r\n  appUrl: process.env.SHOPIFY_APP_URL || \"\",\r\n  authPathPrefix: \"/auth\",\r\n  sessionStorage: new PrismaSessionStorage(prisma),\r\n  distribution: AppDistribution.AppStore,\r\n  restResources,\r\n  webhooks: {\r\n    APP_UNINSTALLED: {\r\n      deliveryMethod: DeliveryMethod.Http,\r\n      callbackUrl: \"/webhooks\",\r\n    },\r\n  },\r\n  hooks: {\r\n    afterAuth: async ({ session }) => {\r\n      shopify.registerWebhooks({ session });\r\n    },\r\n  },\r\n  future: {\r\n    v3_webhookAdminContext: true,\r\n    v3_authenticatePublic: true,\r\n  },\r\n  ...(process.env.SHOP_CUSTOM_DOMAIN\r\n    ? { customShopDomains: [process.env.SHOP_CUSTOM_DOMAIN] }\r\n    : {}),\r\n});\r\n\r\nexport default shopify;\r\nexport const apiVersion = LATEST_API_VERSION;\r\nexport const addDocumentResponseHeaders = shopify.addDocumentResponseHeaders;\r\nexport const authenticate = shopify.authenticate;\r\nexport const unauthenticated = shopify.unauthenticated;\r\nexport const login = shopify.login;\r\nexport const registerWebhooks = shopify.registerWebhooks;\r\nexport const sessionStorage = shopify.sessionStorage;\r\n", "import { PrismaClient } from \"@prisma/client\";\r\n\r\ndeclare global {\r\n  var prisma: PrismaClient;\r\n}\r\n\r\nconst prisma: PrismaClient = global.prisma || new PrismaClient();\r\n\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  if (!global.prisma) {\r\n    global.prisma = new PrismaClient();\r\n  }\r\n}\r\n\r\nexport default prisma;\r\n", "import {\r\n  Links,\r\n  LiveReload,\r\n  Meta,\r\n  Outlet,\r\n  Scripts,\r\n  ScrollRestoration,\r\n} from \"@remix-run/react\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <html>\r\n      <head>\r\n        <meta charSet=\"utf-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\r\n        <Meta />\r\n        <Links />\r\n      </head>\r\n      <body>\r\n        <Outlet />\r\n        <ScrollRestoration />\r\n        <LiveReload />\r\n        <Scripts />\r\n      </body>\r\n    </html>\r\n  );\r\n}\r\n", "import {\r\n    BlockStack,\r\n    Box,\r\n    ContextualSaveBar,\r\n    Divider, Frame,\r\n    InlineStack,\r\n    Page,\r\n    Text\r\n} from \"@shopify/polaris\";\r\nimport {BooleanSetting} from \"~/components/BooleanSetting\";\r\nimport {useEffect, useMemo, useState} from \"react\";\r\nimport {ColorSetting} from \"~/components/ColorSetting\";\r\nimport {ActionFunctionArgs, json, LoaderFunctionArgs} from \"@remix-run/node\";\r\nimport {authenticate} from \"~/shopify.server\";\r\nimport {GET_APP_METAFIELDS, GET_CURRENT_APP_ID} from \"~/graphql/query\";\r\nimport {useLoaderData, useSubmit} from \"@remix-run/react\";\r\nimport {SET_METAFIELDS} from \"~/graphql/mutation\";\r\nimport {arrayToObjectMetafield, deepEqualObject} from \"~/services/converter\";\r\nimport {Metafields} from \"~/constants/namespaces\";\r\nimport {defaultStylesForFixedButton} from \"~/constants/defaults\";\r\nimport {PreviewFixedCompareButton} from \"~/components/PreviewFixedCompareButton/FixedCompareButton\";\r\nimport {MetafieldsType} from \"~/constants/types\";\r\nimport {MetafieldsFixedButtonKeys} from \"~/constants/keys\";\r\n\r\n\r\nexport const loader = async ({request}: LoaderFunctionArgs) => {\r\n    const {admin} = await authenticate.admin(request)\r\n\r\n    const appId = await admin.graphql(GET_CURRENT_APP_ID)\r\n\r\n    const appIdJson = await appId.json()\r\n\r\n    const id = appIdJson.data.currentAppInstallation.id\r\n\r\n    const metafields = await admin.graphql(GET_APP_METAFIELDS, {\r\n        variables: {\r\n            ownerId: id,\r\n            namespace: Metafields.FixedButton\r\n        }\r\n    })\r\n\r\n    const metafieldsJSON = await metafields.json()\r\n\r\n    const arrayMetafields = metafieldsJSON.data.appInstallation.metafields.edges\r\n\r\n    let fixedButton: object\r\n\r\n    if (arrayMetafields.length === 0) {\r\n        fixedButton = defaultStylesForFixedButton\r\n    } else {\r\n        fixedButton = arrayToObjectMetafield(arrayMetafields)\r\n    }\r\n\r\n    return json({\r\n        fixedButton\r\n    })\r\n}\r\n\r\ntype FormDataInput = {\r\n    fixedButton: {\r\n        show: boolean,\r\n        showLabel: boolean,\r\n        backColor: string,\r\n        textColor: string\r\n    }\r\n}\r\n\r\nexport const action = async ({request}: ActionFunctionArgs) => {\r\n    const {admin} = await authenticate.admin(request)\r\n    const formData = await request.formData()\r\n    const objectFD = Object.fromEntries(formData);\r\n    const dataFormData: FormDataInput = await JSON.parse(String(objectFD.data))\r\n\r\n    const appId = await admin.graphql(GET_CURRENT_APP_ID)\r\n    const appIdJson = await appId.json()\r\n    const id = appIdJson.data.currentAppInstallation.id\r\n\r\n    await admin.graphql(SET_METAFIELDS,\r\n        {\r\n            variables: {\r\n                metafields: [\r\n                    {\r\n                        namespace: Metafields.FixedButton,\r\n                        type: MetafieldsType.Boolean,\r\n                        key: MetafieldsFixedButtonKeys.Show,\r\n                        value: String(dataFormData.fixedButton.show),\r\n                        ownerId: id\r\n                    },\r\n                    {\r\n                        namespace: Metafields.FixedButton,\r\n                        type: MetafieldsType.Boolean,\r\n                        key: MetafieldsFixedButtonKeys.ShowLabel,\r\n                        value: String(dataFormData.fixedButton.showLabel),\r\n                        ownerId: id\r\n                    },\r\n                    {\r\n                        namespace: Metafields.FixedButton,\r\n                        type: MetafieldsType.Color,\r\n                        key: MetafieldsFixedButtonKeys.BackColor,\r\n                        value: String(dataFormData.fixedButton.backColor),\r\n                        ownerId: id\r\n                    },\r\n                    {\r\n                        namespace: Metafields.FixedButton,\r\n                        type: MetafieldsType.Color,\r\n                        key: MetafieldsFixedButtonKeys.TextColor,\r\n                        value: String(dataFormData.fixedButton.textColor),\r\n                        ownerId: id\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    )\r\n\r\n    return null\r\n}\r\n\r\ntype loaderData = {\r\n    fixedButton: {\r\n        show: string,\r\n        backColor: string,\r\n        showLabel: string,\r\n        textColor: string,\r\n    }\r\n}\r\n\r\nexport default function StickyFixedButtonSettings() {\r\n    const {fixedButton}: loaderData = useLoaderData()\r\n    const submit = useSubmit()\r\n    const [showStickyButton, setShowStickyButton] = useState<boolean>(fixedButton.show === \"true\")\r\n    const [showLabel, setShowLabel] = useState<boolean>(fixedButton.showLabel === \"true\")\r\n    const [backColor, setBackColor] = useState<string>(fixedButton.backColor)\r\n    const [textColor, setTextColor] = useState<string>(fixedButton.textColor)\r\n    const [actualData, setActualData] = useState<boolean>(true)\r\n    const [loadedData, setLoadedData] = useState<boolean>(false)\r\n\r\n\r\n    const handleShowStickyButtonOnChange = () => {\r\n        setShowStickyButton(!showStickyButton)\r\n    }\r\n\r\n    const handleShowLabelOnChange = () => {\r\n        setShowLabel(!showLabel)\r\n    }\r\n\r\n\r\n    const handleBackColorOnChange = (color: string) => {\r\n        setBackColor(color)\r\n    }\r\n\r\n    const handleTextColorOnChange = (color: string) => {\r\n        setTextColor(color)\r\n    }\r\n\r\n    const handleDiscardActionOnClick = () => {\r\n        setShowStickyButton(fixedButton.show === \"true\")\r\n        setShowLabel(fixedButton.showLabel === \"true\")\r\n        setBackColor(fixedButton.backColor)\r\n        setTextColor(fixedButton.textColor)\r\n    }\r\n\r\n    const currentDataInClientObject = useMemo(() => {\r\n        return {\r\n            show: String(showStickyButton),\r\n            showLabel: String(showLabel),\r\n            backColor: backColor,\r\n            textColor: textColor\r\n        }\r\n    }, [showStickyButton, showLabel, backColor, textColor])\r\n\r\n    useEffect(() => {\r\n        setActualData(deepEqualObject(currentDataInClientObject, fixedButton))\r\n        setLoadedData(false)\r\n    }, [fixedButton, currentDataInClientObject]);\r\n\r\n\r\n    const handleSaveOnClick = () => {\r\n        const data = JSON.stringify({\r\n            fixedButton: {\r\n                show: showStickyButton,\r\n                showLabel: showLabel,\r\n                backColor: backColor,\r\n                textColor: textColor\r\n            }\r\n        })\r\n\r\n        submit({data}, {method: \"POST\"})\r\n        setLoadedData(true)\r\n        return\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Frame>\r\n                <InlineStack gap=\"200\" wrap={false}>\r\n                    <Box background={\"bg-fill\"}\r\n                         width={\"400px\"}\r\n                         borderColor={\"border\"}\r\n                         minHeight={\"100vh\"}\r\n                         borderWidth={\"050\"}\r\n                    >\r\n                        <Page>\r\n                            <BlockStack gap={\"300\"}>\r\n                                {\r\n                                    !actualData &&\r\n                                    <>\r\n                                        <ContextualSaveBar\r\n                                            alignContentFlush\r\n                                            message=\"Unsaved changes\"\r\n                                            saveAction={{\r\n                                                onAction: handleSaveOnClick,\r\n                                                loading: loadedData\r\n                                            }}\r\n                                            discardAction={{\r\n                                                onAction: handleDiscardActionOnClick,\r\n                                            }}\r\n                                        />\r\n                                    </>\r\n                                }\r\n\r\n                                <Text as={\"h4\"} variant={\"headingMd\"}>Sticky Fixed Button</Text>\r\n\r\n                                <Divider borderColor={\"border\"}/>\r\n\r\n                                <BooleanSetting title={\"Show sticky fixed button\"} value={showStickyButton}\r\n                                                valueOnChange={handleShowStickyButtonOnChange}/>\r\n\r\n                                <Divider borderColor={\"border\"}/>\r\n\r\n                                <Text as={\"h4\"} variant={\"headingSm\"}>Sticky Fixed Button</Text>\r\n\r\n                                <BooleanSetting title={\"Show Label\"} value={showLabel}\r\n                                                valueOnChange={handleShowLabelOnChange}/>\r\n\r\n                                <Divider borderColor={\"border\"}/>\r\n\r\n                                <Text as={\"h4\"} variant={\"headingSm\"}>Style</Text>\r\n\r\n                                <ColorSetting title={\"Background Color\"}\r\n                                              initialColor={backColor}\r\n                                              onChange={handleBackColorOnChange}\r\n                                />\r\n\r\n                                <ColorSetting title={\"Text Color\"}\r\n                                              initialColor={textColor}\r\n                                              onChange={handleTextColorOnChange}\r\n\r\n                                />\r\n                            </BlockStack>\r\n                        </Page>\r\n                    </Box>\r\n                    <Box background={\"bg-fill-tertiary-active\"} minHeight={\"100%\"}>\r\n                        <div style={{\r\n                            width: \"1000px\",\r\n                            height: \"100%\",\r\n                            border: \"1px solid black\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\"\r\n                        }}>\r\n                            <PreviewFixedCompareButton showLabel={showLabel} backColor={backColor}\r\n                                                       textColor={textColor}/>\r\n                        </div>\r\n                    </Box>\r\n                </InlineStack>\r\n            </Frame>\r\n        </>\r\n\r\n    )\r\n}", "import {Box, Button, InlineStack, Text} from \"@shopify/polaris\";\r\n\r\ntype BooleanSettingProps = {\r\n    title:string,\r\n    value:boolean,\r\n    valueOnChange:()=>void\r\n}\r\n\r\nconst BooleanSetting = ({title, value, valueOnChange}:BooleanSettingProps)=>{\r\n    return(\r\n        <>\r\n            <InlineStack align={\"space-between\"} blockAlign={\"center\"}>\r\n                <Text as={\"p\"} variant={\"bodySm\"}>{title}</Text>\r\n                <Box as={\"span\"} background={value ? \"bg-surface-success\" : \"bg-fill-transparent-secondary\"} borderRadius={\"150\"} paddingInlineStart={\"200\"} paddingInlineEnd={\"200\"}>{ value ? \"On\" : \"Off\" }</Box>\r\n                <Button onClick={valueOnChange}>Turn { value ? \"Off\" : \"On\" }</Button>\r\n            </InlineStack>\r\n        </>\r\n    )\r\n}\r\n\r\nexport {BooleanSetting}", "import {ColorPicker, InlineStack, Popover, TextField} from \"@shopify/polaris\";\r\nimport {useCallback, useEffect, useMemo, useState} from \"react\";\r\nimport chroma from \"chroma-js\";\r\n\r\ntype ColorSettingProps = {\r\n    title:string\r\n    initialColor?:string,\r\n    onChange?:(color:string)=>void\r\n}\r\n\r\nconst ColorSetting = ({title, initialColor=\"#fff\", onChange=()=>{}}:ColorSettingProps)=>{\r\n    const [valueBackColor, setValueBackColor] = useState<string>(initialColor)\r\n    const [hexColor, setHexColor] = useState<string>()\r\n\r\n    const [showColorPicker, setShowColorPicker] = useState<boolean>(false)\r\n    const [color, setColor] = useState<{\r\n        hue:number,\r\n        brightness:number\r\n        saturation:number\r\n    }>({\r\n        hue: 120,\r\n        brightness: 1,\r\n        saturation: 1,\r\n    });\r\n\r\n    const colorBack = useMemo(()=>{\r\n        return chroma.hsv(color.hue, color.saturation, color.brightness).hex()\r\n    },[color])\r\n\r\n    useEffect(() => {\r\n        setValueBackColor(colorBack)\r\n    }, [colorBack]);\r\n\r\n    const togglePopoverActive = useCallback(\r\n        () => setShowColorPicker((popoverActive) => !popoverActive),\r\n        [],\r\n    );\r\n\r\n\r\n    const isValidHexColor = (value: string) => {\r\n        if (value === \"\") {\r\n            return true; // Allow empty value\r\n        }\r\n        const hexColorRegex = /^#([0-9a-fA-F]{6})$/;\r\n        return hexColorRegex.test(value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isValidHexColor(valueBackColor)) {\r\n            setHexColor(valueBackColor);\r\n        }\r\n    }, [valueBackColor]);\r\n\r\n    const handleChangeBackColor = useCallback(\r\n        (newValue: string) => setValueBackColor(newValue),\r\n        []\r\n    );\r\n\r\n    useEffect(() => {\r\n        setValueBackColor(initialColor)\r\n    }, [initialColor]);\r\n\r\n    useEffect(() => {\r\n        onChange(hexColor)\r\n    }, [hexColor]);\r\n\r\n    const activator = <div style={{\r\n        backgroundColor:valueBackColor,\r\n        border:\"1.5px solid\",\r\n        borderColor:\"rgba(138, 138, 138, 1)\",\r\n        width:\"45px\",\r\n        height:\"45px\",\r\n        borderRadius:\"25px\",\r\n        cursor:\"pointer\"\r\n    }} onClick={togglePopoverActive}\r\n    >\r\n    </div>\r\n\r\n    return(\r\n        <>\r\n            <InlineStack align={\"space-between\"} blockAlign={\"center\"}>\r\n                <TextField\r\n                    label={title}\r\n                    value={valueBackColor}\r\n                    onChange={handleChangeBackColor}\r\n                    error={!isValidHexColor(valueBackColor)}\r\n                    autoComplete=\"off\"\r\n                />\r\n\r\n                <Popover\r\n                    active={showColorPicker}\r\n                    activator={activator}\r\n                    autofocusTarget=\"first-node\"\r\n                    onClose={togglePopoverActive}\r\n                >\r\n                    <ColorPicker onChange={setColor} color={color} />\r\n                </Popover>\r\n            </InlineStack>\r\n        </>\r\n    )\r\n}\r\n\r\nexport {ColorSetting}", "const GET_CURRENT_APP_ID = `\r\n    query {\r\n        currentAppInstallation {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\nconst GET_APP_METAFIELDS = `\r\n    query AppInstallationMetafields($ownerId: ID!, $namespace:String!) {\r\n      appInstallation(id: $ownerId) {\r\n        metafields(first: 250, namespace:$namespace) {\r\n          edges {\r\n            node {\r\n              id\r\n              namespace\r\n              key\r\n              value\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n`;\r\n\r\nconst GET_ALL_APP_METAFIELDS = `\r\n    query AppInstallationMetafields($ownerId: ID!) {\r\n      appInstallation(id: $ownerId) {\r\n        metafields(first: 10) {\r\n          edges {\r\n            node {\r\n              id\r\n              namespace\r\n              key\r\n              value\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n`;\r\n\r\nconst GET_ALL_PRODUCTS = `#graphql\r\n  query {\r\n    products(first: 250, reverse: true) {\r\n      edges {\r\n        node {\r\n          id\r\n          title\r\n          handle\r\n          resourcePublicationOnCurrentPublication {\r\n            publication {\r\n              name\r\n              id\r\n            }\r\n            publishDate\r\n            isPublished\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }`;\r\n\r\nexport {\r\n  GET_CURRENT_APP_ID,\r\n  GET_APP_METAFIELDS,\r\n  GET_ALL_APP_METAFIELDS,\r\n  GET_ALL_PRODUCTS,\r\n};\r\n", "const SET_METAFIELDS = `\r\n    mutation metafieldsSet($metafields: [MetafieldsSetInput!]!) {\r\n      metafieldsSet(metafields: $metafields) {\r\n        metafields {\r\n          id\r\n          namespace\r\n          key\r\n        }\r\n        userErrors {\r\n          field\r\n          message\r\n        }\r\n      }\r\n}\r\n`;\r\n\r\nconst DEL_METAFIELD = `\r\nmutation metafieldDelete($input: MetafieldDeleteInput!) {\r\n  metafieldDelete(input: $input) {\r\n    deletedId\r\n    userErrors {\r\n      field\r\n      message\r\n    }\r\n  }\r\n}`;\r\n\r\nexport { SET_METAFIELDS, DEL_METAFIELD };\r\n", "\r\ntype Metafield={\r\n    node:{\r\n        key:string,\r\n        namespace:string\r\n        value:string\r\n    }\r\n}\r\n\r\n\r\nconst deepEqualObject=(obj1: any, obj2: any): boolean => {\r\n    if (obj1 === obj2) {\r\n        return true;\r\n    }\r\n\r\n    if (typeof obj1 !== 'object' || obj1 === null ||\r\n        typeof obj2 !== 'object' || obj2 === null) {\r\n        return false;\r\n    }\r\n\r\n    const keys1 = Object.keys(obj1);\r\n    const keys2 = Object.keys(obj2);\r\n\r\n    if (keys1.length !== keys2.length) {\r\n        return false;\r\n    }\r\n\r\n    for (const key of keys1) {\r\n        if (!deepEqualObject(obj1[key], obj2[key])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nconst arrayToObjectMetafield = (arrayMetafields:Metafield[]) : { [key: string]: string } =>{\r\n    let myObject:{ [key: string]: string } ={}\r\n\r\n    for(let item of arrayMetafields){\r\n        myObject[item.node.key] = item.node.value\r\n    }\r\n\r\n    return myObject\r\n}\r\n\r\nexport {arrayToObjectMetafield, deepEqualObject}", "const Metafields = {\r\n    ProductButton:\"productButton\",\r\n    FixedButton:\"fixedButton\",\r\n    Toolbar:\"toolbar\",\r\n    ProductsGridButton:\"productsGridButton\",\r\n    Table:\"table\"\r\n}\r\n\r\nexport {Metafields}", "\r\nconst defaultStylesForToolbar ={\r\n    showToolbar:\"true\",\r\n    showToolbarAfterClickOnProductPage:\"true\",\r\n    backgroundColor:\"#464545\",\r\n    textColor:\"#000000\",\r\n    viewCompareButtonBackColor:\"#0067dd\",\r\n    viewCompareButtonTextColor:\"#0067dd\",\r\n    closeButtonBackColor:\"#000000\",\r\n    closeButtonTextColor:\"#000000\",\r\n    cleanUpButtonBackColor:\"#fc893c\",\r\n    cleanUpButtonTextColor:\"#fc893c\"\r\n}\r\n\r\nconst defaultStylesForProductDetailPageButton = {\r\n    show:\"true\",\r\n    showIcon:\"true\",\r\n    showLabel:\"true\",\r\n    backColor:\"#ffffff\",\r\n    borderColor:\"#000000\",\r\n    addToCompareTextColor:\"#000000\",\r\n    removeFromCompareTextColor:\"#000000\"\r\n}\r\n\r\nconst defaultStylesForFixedButton = {\r\n    show: \"true\",\r\n    showLabel: \"true\",\r\n    backColor: \"#000000\",\r\n    textColor: \"#000000\"\r\n}\r\n\r\nconst defaultStylesForProductsGridButton = {\r\n    showCompareButton:\"false\",\r\n    showIcon:\"true\",\r\n    showLabel:\"true\",\r\n    backgroundColor:\"#ffffff\",\r\n    borderColor:\"#ffffff\",\r\n    addCompareButtonTextColor:\"#ffffff\",\r\n    removeCompareButtonTextColor:\"#ffffff\"\r\n}\r\n\r\nconst defaultStylesForTable = {\r\n    backColor:\"#ffffff\",\r\n    textColor:\"#000000\",\r\n    attributesBackColor:\"#ffffff\",\r\n    attributesTextColor:\"#000000\",\r\n    attributesGroupTextColor:\"#000000\",\r\n    attributesGroupBackColor:\"#ffffff\",\r\n    topbarBackColor:\"#ffffff\",\r\n    topbarTextColor:\"#000000\"\r\n}\r\n\r\n\r\nexport {\r\n    defaultStylesForToolbar,\r\n    defaultStylesForProductDetailPageButton,\r\n    defaultStylesForFixedButton,\r\n    defaultStylesForProductsGridButton,\r\n    defaultStylesForTable\r\n}", "\r\ntype PreviewFixedCompareButtonProps = {\r\n    textColor:string\r\n    backColor:string\r\n    showLabel:boolean\r\n}\r\n\r\nconst PreviewFixedCompareButton = ({showLabel, textColor, backColor}:PreviewFixedCompareButtonProps)=>{\r\n    return(\r\n        <>\r\n            <div style={{\r\n                display:\"flex\",\r\n                backgroundColor:\"#ffffff\",\r\n                color:`${textColor}`,\r\n                justifyContent:\"center\",\r\n                alignItems:\"center\",\r\n                fontWeight: 600,\r\n                fontSize: \"18px\",\r\n                width:\"130px\",\r\n                height:\"55px\",\r\n                border:`2px solid ${backColor}`,\r\n                boxShadow:`${backColor} 4px 4px 0 0`,\r\n                borderRadius: \"10px\"\r\n            }}>\r\n                {\r\n                    showLabel &&\r\n                    \"Compare\"\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport {\r\n    PreviewFixedCompareButton\r\n}", "const MetafieldsType = {\r\n    Boolean:\"boolean\",\r\n    Color:\"color\"\r\n}\r\n\r\nexport {\r\n    MetafieldsType\r\n}", "\r\nconst MetafieldsProductButtonKeys ={\r\n    Show:\"show\",\r\n    ShowLabel:\"showLabel\",\r\n    ShowIcon:\"showIcon\",\r\n    BackColor:\"backColor\",\r\n    BorderColor:\"borderColor\",\r\n    AddToCompareTextColor:\"addToCompareTextColor\",\r\n    RemoveFromCompareTextColor:\"removeFromCompareTextColor\"\r\n}\r\n\r\nconst MetafieldsFixedButtonKeys ={\r\n    Show:\"show\",\r\n    ShowLabel:\"showLabel\",\r\n    BackColor:\"backColor\",\r\n    TextColor:\"textColor\"\r\n}\r\n\r\nconst MetafieldsProductsGridButtonKeys ={\r\n    ShowCompareButton:\"showCompareButton\",\r\n    ShowIcon:\"showIcon\",\r\n    ShowLabel:\"showLabel\",\r\n    BackgroundColor:\"backgroundColor\",\r\n    BorderColor:\"borderColor\",\r\n    AddCompareButtonTextColor:\"addCompareButtonTextColor\",\r\n    RemoveCompareButtonTextColor:\"removeCompareButtonTextColor\"\r\n}\r\n\r\nconst MetafieldsTableKeys ={\r\n    BackColor:\"backColor\",\r\n    TextColor:\"textColor\",\r\n    AttributesBackColor:\"attributesBackColor\",\r\n    AttributesTextColor:\"attributesTextColor\",\r\n    AttributesGroupTextColor:\"attributesGroupTextColor\",\r\n    AttributesGroupBackColor:\"attributesGroupBackColor\",\r\n    TopbarBackColor:\"topbarBackColor\",\r\n    TopbarTextColor:\"topbarTextColor\"\r\n}\r\n\r\nconst MetafieldsToolbarKeys = {\r\n    ShowToolbar:\"showToolbar\",\r\n    ShowToolbarAfterClickOnProductPage:\"showToolbarAfterClickOnProductPage\",\r\n    BackgroundColor:\"backgroundColor\",\r\n    TextColor:\"textColor\",\r\n    ViewCompareButtonBackColor:\"viewCompareButtonBackColor\",\r\n    ViewCompareButtonTextColor:\"viewCompareButtonTextColor\",\r\n    CloseButtonBackColor:\"closeButtonBackColor\",\r\n    CloseButtonTextColor:\"closeButtonTextColor\",\r\n    CleanUpButtonBackColor:\"cleanUpButtonBackColor\",\r\n    CleanUpButtonTextColor:\"cleanUpButtonTextColor\"\r\n}\r\n\r\nexport {\r\n    MetafieldsToolbarKeys,\r\n    MetafieldsTableKeys,\r\n    MetafieldsProductsGridButtonKeys,\r\n    MetafieldsProductButtonKeys,\r\n    MetafieldsFixedButtonKeys\r\n}", "import {BlockStack, Box, ContextualSaveBar, Divider, Frame, InlineStack, Page, Text} from \"@shopify/polaris\";\r\nimport {BooleanSetting} from \"~/components/BooleanSetting\";\r\nimport {useEffect, useMemo, useState} from \"react\";\r\nimport {ColorSetting} from \"~/components/ColorSetting\";\r\nimport {arrayToObjectMetafield, deepEqualObject} from \"~/services/converter\";\r\nimport {authenticate} from \"~/shopify.server\";\r\nimport {ActionFunctionArgs, json, LoaderFunctionArgs} from \"@remix-run/node\";\r\nimport {GET_APP_METAFIELDS, GET_CURRENT_APP_ID} from \"~/graphql/query\";\r\nimport {Metafields} from \"~/constants/namespaces\";\r\nimport { useLoaderData, useSubmit} from \"@remix-run/react\";\r\nimport {SET_METAFIELDS} from \"~/graphql/mutation\";\r\nimport {defaultStylesForToolbar} from \"~/constants/defaults\";\r\nimport {PreviewToolbar} from \"~/components/PreviewToolbar/PreviewToolbar\";\r\nimport {MetafieldsType} from \"~/constants/types\";\r\nimport {MetafieldsToolbarKeys} from \"~/constants/keys\";\r\n\r\n\r\n\r\ntype loaderData ={\r\n    toolbar :{\r\n        showToolbar:string\r\n        showToolbarAfterClickOnProductPage:string\r\n        backgroundColor:string\r\n        textColor:string\r\n        viewCompareButtonBackColor:string\r\n        viewCompareButtonTextColor:string\r\n        closeButtonBackColor:string\r\n        closeButtonTextColor:string\r\n        cleanUpButtonBackColor:string\r\n        cleanUpButtonTextColor:string\r\n    }\r\n}\r\n\r\ntype FormDataInput = {\r\n    toolbar: {\r\n        showToolbar:boolean\r\n        showToolbarAfterClickOnProductPage:boolean\r\n        backgroundColor:string\r\n        textColor:string\r\n        viewCompareButtonBackColor:string\r\n        viewCompareButtonTextColor:string\r\n        closeButtonBackColor:string\r\n        closeButtonTextColor:string\r\n        cleanUpButtonBackColor:string\r\n        cleanUpButtonTextColor:string\r\n    }\r\n}\r\n\r\nexport const loader = async ({request}:LoaderFunctionArgs) =>{\r\n    const { admin } = await authenticate.admin(request)\r\n\r\n    const appId = await admin.graphql(GET_CURRENT_APP_ID)\r\n\r\n    const appIdJson = await appId.json()\r\n\r\n    const id = appIdJson.data.currentAppInstallation.id\r\n\r\n    const metafields = await admin.graphql(GET_APP_METAFIELDS,{\r\n        variables:{\r\n            ownerId:id,\r\n            namespace:Metafields.Toolbar\r\n        }\r\n    })\r\n\r\n    const metafieldsJSON = await metafields.json()\r\n\r\n    const arrayMetafields = metafieldsJSON.data.appInstallation.metafields.edges\r\n\r\n    let toolbar:object\r\n\r\n    if(arrayMetafields.length === 0){\r\n        toolbar = defaultStylesForToolbar\r\n    } else {\r\n        toolbar = arrayToObjectMetafield(arrayMetafields)\r\n    }\r\n\r\n    return json({\r\n        toolbar,\r\n    })\r\n}\r\n\r\nexport const action = async ({request}:ActionFunctionArgs)=>{\r\n    const { admin } = await authenticate.admin(request)\r\n    const formData = await request.formData()\r\n    const objectFD =  Object.fromEntries(formData);\r\n    const dataFormData:FormDataInput = await JSON.parse(String(objectFD.data))\r\n\r\n    const appId = await admin.graphql(GET_CURRENT_APP_ID)\r\n    const appIdJson = await appId.json()\r\n    const id = appIdJson.data.currentAppInstallation.id\r\n\r\n    await admin.graphql(SET_METAFIELDS,\r\n        {\r\n            variables:{\r\n                metafields:[\r\n                    {\r\n                        namespace: Metafields.Toolbar,\r\n                        type: MetafieldsType.Boolean,\r\n                        key:MetafieldsToolbarKeys.ShowToolbar,\r\n                        value: String(dataFormData.toolbar.showToolbar),\r\n                        ownerId: id\r\n                    },\r\n                    {\r\n                        namespace: Metafields.Toolbar,\r\n                        type: MetafieldsType.Boolean,\r\n                        key:MetafieldsToolbarKeys.ShowToolbarAfterClickOnProductPage,\r\n                        value: String(dataFormData.toolbar.showToolbarAfterClickOnProductPage),\r\n                        ownerId: id\r\n                    },\r\n                    {\r\n                        namespace: Metafields.Toolbar,\r\n                        type: MetafieldsType.Color,\r\n                        key:MetafieldsToolbarKeys.BackgroundColor,\r\n                        value: String(dataFormData.toolbar.backgroundColor),\r\n                        ownerId: id\r\n                    },\r\n                    {\r\n                        namespace: Metafields.Toolbar,\r\n                        type: MetafieldsType.Color,\r\n                        key:MetafieldsToolbarKeys.TextColor,\r\n                        value: String(dataFormData.toolbar.textColor),\r\n                        ownerId: id\r\n                    },\r\n                    {\r\n                        namespace: Metafields.Toolbar,\r\n                        type: MetafieldsType.Color,\r\n                        key:MetafieldsToolbarKeys.ViewCompareButtonBackColor,\r\n                        value: String(dataFormData.toolbar.viewCompareButtonBackColor),\r\n                        ownerId: id\r\n                    },\r\n                    {\r\n                        namespace: Metafields.Toolbar,\r\n                        type: MetafieldsType.Color,\r\n                        key:MetafieldsToolbarKeys.ViewCompareButtonTextColor,\r\n                        value: String(dataFormData.toolbar.viewCompareButtonTextColor),\r\n                        ownerId: id\r\n                    },\r\n                    {\r\n                        namespace: Metafields.Toolbar,\r\n                        type: MetafieldsType.Color,\r\n                        key:MetafieldsToolbarKeys.CloseButtonBackColor,\r\n                        value: String(dataFormData.toolbar.closeButtonBackColor),\r\n                        ownerId: id\r\n                    },\r\n                    {\r\n                        namespace: Metafields.Toolbar,\r\n                        type: MetafieldsType.Color,\r\n                        key:MetafieldsToolbarKeys.CloseButtonTextColor,\r\n                        value: String(dataFormData.toolbar.closeButtonTextColor),\r\n                        ownerId: id\r\n                    },\r\n                    {\r\n                        namespace: Metafields.Toolbar,\r\n                        type: MetafieldsType.Color,\r\n                        key:MetafieldsToolbarKeys.CleanUpButtonBackColor,\r\n                        value: String(dataFormData.toolbar.cleanUpButtonBackColor),\r\n                        ownerId: id\r\n                    },\r\n                    {\r\n                        namespace: Metafields.Toolbar,\r\n                        type: MetafieldsType.Color,\r\n                        key:MetafieldsToolbarKeys.CleanUpButtonTextColor,\r\n                        value: String(dataFormData.toolbar.cleanUpButtonTextColor),\r\n                        ownerId: id\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    )\r\n\r\n    return null\r\n}\r\n\r\n\r\n\r\nexport default function ToolbarSettings(){\r\n    const {toolbar}:loaderData = useLoaderData()\r\n    const submit = useSubmit()\r\n    const [showToolbar, setShowToolbar] = useState<boolean>(toolbar.showToolbar === \"true\")\r\n    const [showToolbarAfterClickOnProductPage, setShowToolbarAfterClickOnProductPage] = useState<boolean>( toolbar.showToolbarAfterClickOnProductPage === \"true\")\r\n    const [backgroundColor, setBackgroundColor] = useState<string>(toolbar.backgroundColor)\r\n    const [textColor, setTextColor] = useState<string>(toolbar.textColor)\r\n    const [viewCompareButtonBackColor, setViewCompareButtonBackColor] = useState<string>(toolbar.viewCompareButtonBackColor)\r\n    const [viewCompareButtonTextColor, setViewCompareButtonTextColor ] = useState<string>(toolbar.viewCompareButtonTextColor)\r\n    const [closeButtonBackColor, setCloseButtonBackColor] = useState<string>(toolbar.closeButtonBackColor)\r\n    const [closeButtonTextColor, setCloseButtonTextColor] = useState<string>(toolbar.closeButtonTextColor)\r\n    const [cleanUpButtonBackColor, setCleanUpButtonBackColor] = useState<string>(toolbar.cleanUpButtonBackColor)\r\n    const [cleanUpButtonTextColor, setCleanUpButtonTextColor] = useState<string>(toolbar.cleanUpButtonTextColor)\r\n\r\n    const [actualData, setActualData] = useState<boolean>(true)\r\n    const [loadedData, setLoadedData] = useState<boolean>(false)\r\n\r\n    const handleShowToolbarOnChange = ()=>{\r\n        setShowToolbar(!showToolbar)\r\n    }\r\n\r\n    const handleShowToolbarAfterOnChange = ()=>{\r\n        setShowToolbarAfterClickOnProductPage(!showToolbarAfterClickOnProductPage)\r\n    }\r\n\r\n    const handleBackgroundColorOnChange = (color:string)=>{\r\n        setBackgroundColor(color)\r\n    }\r\n\r\n    const handleViewCompareButtonBackColorOnChange = (color:string)=>{\r\n        setViewCompareButtonBackColor(color)\r\n    }\r\n\r\n    const handleTextColorOnChange = (color:string)=>{\r\n        setTextColor(color)\r\n    }\r\n\r\n    const handleViewCompareButtonTextColorOnChange = (color:string)=>{\r\n        setViewCompareButtonTextColor(color)\r\n    }\r\n\r\n    const handleCloseButtonBackColorOnChange = (color:string)=>{\r\n        setCloseButtonBackColor(color)\r\n    }\r\n\r\n    const handleCloseButtonTextColorOnChange = (color:string)=>{\r\n        setCloseButtonTextColor(color)\r\n    }\r\n\r\n    const handleCleanUpButtonBackColorOnChange = (color:string)=>{\r\n        setCleanUpButtonBackColor(color)\r\n    }\r\n\r\n    const handleCleanUpButtonTextColorOnChange = (color:string)=>{\r\n        setCleanUpButtonTextColor(color)\r\n    }\r\n\r\n    const handleSaveOnClick = ()=> {\r\n        const data = JSON.stringify({\r\n                toolbar: {\r\n                    showToolbar:showToolbar,\r\n                    showToolbarAfterClickOnProductPage:showToolbarAfterClickOnProductPage,\r\n                    backgroundColor:backgroundColor,\r\n                    textColor:textColor,\r\n                    viewCompareButtonBackColor:viewCompareButtonBackColor,\r\n                    viewCompareButtonTextColor:viewCompareButtonTextColor,\r\n                    closeButtonBackColor:closeButtonBackColor,\r\n                    closeButtonTextColor:closeButtonTextColor,\r\n                    cleanUpButtonBackColor:cleanUpButtonBackColor,\r\n                    cleanUpButtonTextColor:cleanUpButtonTextColor\r\n                }\r\n            }\r\n        )\r\n\r\n        submit({ data }, {method: \"POST\"})\r\n        setLoadedData(true)\r\n        return\r\n    }\r\n\r\n    const handleDiscardActionOnClick = ()=>{\r\n        setShowToolbar(toolbar.showToolbar === \"true\")\r\n        setShowToolbarAfterClickOnProductPage(toolbar.showToolbarAfterClickOnProductPage === \"true\")\r\n        setBackgroundColor(toolbar.backgroundColor)\r\n        setTextColor(toolbar.textColor)\r\n        setViewCompareButtonBackColor(toolbar.viewCompareButtonBackColor)\r\n        setViewCompareButtonTextColor(toolbar.viewCompareButtonTextColor)\r\n        setCloseButtonBackColor(toolbar.closeButtonBackColor)\r\n        setCloseButtonTextColor(toolbar.closeButtonTextColor)\r\n        setCleanUpButtonBackColor(toolbar.cleanUpButtonBackColor)\r\n        setCleanUpButtonTextColor(toolbar.cleanUpButtonTextColor)\r\n    }\r\n\r\n    const currentDataInClientObject = useMemo(()=>{\r\n        return {\r\n            showToolbar:String(showToolbar),\r\n            showToolbarAfterClickOnProductPage:String(showToolbarAfterClickOnProductPage),\r\n            backgroundColor:backgroundColor,\r\n            textColor:textColor,\r\n            viewCompareButtonBackColor:viewCompareButtonBackColor,\r\n            viewCompareButtonTextColor:viewCompareButtonTextColor,\r\n            closeButtonBackColor:closeButtonBackColor,\r\n            closeButtonTextColor:closeButtonTextColor,\r\n            cleanUpButtonBackColor:cleanUpButtonBackColor,\r\n            cleanUpButtonTextColor:cleanUpButtonTextColor\r\n        }\r\n    }, [showToolbar, showToolbarAfterClickOnProductPage, backgroundColor, textColor, viewCompareButtonBackColor, viewCompareButtonTextColor, closeButtonBackColor, closeButtonTextColor, cleanUpButtonBackColor, cleanUpButtonTextColor])\r\n\r\n\r\n    useEffect(() => {\r\n        setActualData(deepEqualObject(currentDataInClientObject, toolbar))\r\n        setLoadedData(false)\r\n    }, [toolbar, currentDataInClientObject]);\r\n\r\n    return(\r\n        <Frame>\r\n            <InlineStack gap=\"200\" wrap={false}>\r\n                    <Box background={\"bg-fill\"}\r\n                         width={\"400px\"}\r\n                         borderColor={\"border\"}\r\n                         borderWidth={\"050\"}\r\n                         minHeight={\"150vh\"}\r\n                    >\r\n                        <Page>\r\n                            <BlockStack gap={\"300\"}>\r\n                                {\r\n                                    !actualData &&\r\n                                    <>\r\n                                        <ContextualSaveBar\r\n                                            alignContentFlush\r\n                                            message=\"Unsaved changes\"\r\n                                            saveAction={{\r\n                                                onAction: handleSaveOnClick,\r\n                                                loading: loadedData\r\n                                            }}\r\n                                            discardAction={{\r\n                                                onAction: handleDiscardActionOnClick,\r\n                                            }}\r\n                                        />\r\n                                    </>\r\n                                }\r\n\r\n                                <Text as={\"p\"} variant={\"headingMd\"}>Comparison Toolbar</Text>\r\n                                <Divider borderColor={\"border\"} />\r\n                                <Text as={\"p\"} variant={\"headingSm\"}>Toolbar</Text>\r\n                                <BooleanSetting value={showToolbar} valueOnChange={handleShowToolbarOnChange} title={\"Show toolbar after click fixed button\"}/>\r\n                                <BooleanSetting title={\"Show toolbar after product added to compare\"}\r\n                                                valueOnChange={handleShowToolbarAfterOnChange}\r\n                                                value={showToolbarAfterClickOnProductPage}/>\r\n\r\n                                <ColorSetting title={\"Background Color\"}\r\n                                              initialColor={backgroundColor}\r\n                                              onChange={handleBackgroundColorOnChange}\r\n                                />\r\n\r\n                                <ColorSetting title={\"Text Color\"}\r\n                                              initialColor={textColor}\r\n                                              onChange={handleTextColorOnChange}\r\n                                />\r\n\r\n                                <Divider borderColor={\"border\"}/>\r\n\r\n                                <Text as={\"p\"} variant={\"headingSm\"}>View Compare Button</Text>\r\n                                <ColorSetting title={\"Background Color\"}\r\n                                              initialColor={viewCompareButtonBackColor}\r\n                                              onChange={handleViewCompareButtonBackColorOnChange}\r\n                                />\r\n                                <ColorSetting title={\"Text Color\"}\r\n                                              initialColor={viewCompareButtonTextColor}\r\n                                              onChange={handleViewCompareButtonTextColorOnChange}\r\n                                />\r\n                                <Divider borderColor={\"border\"}/>\r\n                                <Text as={\"p\"} variant={\"headingSm\"}>Close Button</Text>\r\n                                <ColorSetting title={\"Background Color\"}\r\n                                              initialColor={closeButtonBackColor}\r\n                                              onChange={handleCloseButtonBackColorOnChange}\r\n                                />\r\n                                <ColorSetting title={\"Text Color\"}\r\n                                              initialColor={closeButtonTextColor}\r\n                                              onChange={handleCloseButtonTextColorOnChange}\r\n\r\n                                />\r\n                                <Divider borderColor={\"border\"}/>\r\n                                <Text as={\"p\"} variant={\"headingSm\"}>Clean up Button</Text>\r\n                                <ColorSetting title={\"Background Color\"}\r\n                                              initialColor={cleanUpButtonBackColor}\r\n                                              onChange={handleCleanUpButtonBackColorOnChange}\r\n                                />\r\n                                <ColorSetting title={\"Text Color\"}\r\n                                              initialColor={cleanUpButtonTextColor}\r\n                                              onChange={handleCleanUpButtonTextColorOnChange}\r\n                                />\r\n                            </BlockStack>\r\n                        </Page>\r\n                    </Box>\r\n                <Box background={\"bg-fill-tertiary-active\"} minHeight={\"100%\"}>\r\n                    <div style={{\r\n                        width:\"1000px\",\r\n                        height:\"100%\",\r\n                        border:\"1px solid black\",\r\n                        display:\"flex\",\r\n                        justifyContent:\"center\",\r\n                        alignItems:\"center\"\r\n                    }}>\r\n                        <PreviewToolbar\r\n                            backgroundColor={backgroundColor}\r\n                            textColor={textColor}\r\n                            viewCompareButtonTextColor={viewCompareButtonTextColor}\r\n                            viewCompareButtonBackColor={viewCompareButtonBackColor}\r\n                            cleanUpButtonTextColor={cleanUpButtonTextColor}\r\n                            cleanUpButtonBackColor={cleanUpButtonBackColor}\r\n                            closeButtonTextColor={closeButtonTextColor}\r\n                            closeButtonBackColor={closeButtonBackColor}\r\n                        />\r\n                    </div>\r\n                </Box>\r\n            </InlineStack>\r\n        </Frame>\r\n    )\r\n}", "\r\n\r\ntype PreviewToolbarProps = {\r\n    backgroundColor:string\r\n    textColor:string\r\n    viewCompareButtonTextColor:string\r\n    viewCompareButtonBackColor:string\r\n    cleanUpButtonTextColor:string\r\n    cleanUpButtonBackColor:string\r\n    closeButtonTextColor:string\r\n    closeButtonBackColor:string\r\n}\r\n\r\nconst PreviewToolbar = ({backgroundColor, closeButtonBackColor, closeButtonTextColor, cleanUpButtonBackColor, cleanUpButtonTextColor, textColor, viewCompareButtonTextColor, viewCompareButtonBackColor}:PreviewToolbarProps)=>{\r\n    return(\r\n        <>\r\n\r\n            <div style={{\r\n                backgroundColor:`${backgroundColor}`,\r\n                width:\"950px\",\r\n                height:\"250px\",\r\n                position:\"fixed\",\r\n                bottom:0,\r\n                display:\"flex\",\r\n                flexDirection:\"row\",\r\n                alignItems:\"center\",\r\n                justifyContent:\"end\",\r\n                padding:\"20px\"\r\n            }}>\r\n                <div style={{\r\n                    flex:\"0 0 75%\",\r\n                    display:\"flex\",\r\n                    alignItems:\"center\",\r\n                    justifyContent:\"end\",\r\n                }}>\r\n                    <div style={{\r\n                        maxWidth: \"200px\",\r\n                        maxHeight:\"200px\",\r\n                        minHeight:\"150px\",\r\n                        minWidth: \"200px\",\r\n                        display:\"flex\",\r\n                        flexDirection:\"column\",\r\n                        justifyContent:\"space-around\",\r\n                        alignItems:\"center\"\r\n                    }}>\r\n                        <div style={{\r\n                            width:\"100px\",\r\n                            height:\"100px\",\r\n                            display:\"flex\",\r\n                            justifyContent:\"center\",\r\n                            alignItems:\"center\",\r\n                            backgroundColor:\"white\",\r\n                            borderRadius:\"10px\"\r\n                        }}>\r\n                            Product img\r\n                        </div>\r\n                        <div style={{\r\n                            fontWeight:600,\r\n                            color:`${textColor}`\r\n                        }}>\r\n                            Product name\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{\r\n                    display:\"flex\",\r\n                    flexWrap:\"wrap\",\r\n                    maxWidth: \"200px\",\r\n                    maxHeight:\"200px\",\r\n                    minWidth: \"200px\",\r\n                    padding: \"10px\",\r\n                    flex:\"0 0 25%\",\r\n                    gap:\"10px\"\r\n                }}>\r\n                    <div style={{\r\n                        width:\"100%\",\r\n                        color: `${viewCompareButtonTextColor}`,\r\n                        border:\"2px solid\",\r\n                        borderColor:`${viewCompareButtonBackColor}`,\r\n                        backgroundColor: \"#fbeee0\",\r\n                        borderRadius: \"10px\",\r\n                        display:\"flex\",\r\n                        justifyContent:\"center\",\r\n                        alignItems:\"center\",\r\n                        fontWeight: 600,\r\n                        fontSize: \"14px\",\r\n                        lineHeight: \"30px\",\r\n                        height:\"53px\",\r\n                        boxShadow:`${viewCompareButtonBackColor} 4px 4px 0px 0px`\r\n                    }}\r\n                    >Compare</div>\r\n                    <div style={{\r\n                        width:\"47%\",\r\n                        color: `${cleanUpButtonTextColor}`,\r\n                        padding:\"10px\",\r\n                        border:\"2px solid\",\r\n                        borderColor:`${cleanUpButtonBackColor}`,\r\n                        backgroundColor: \"#fbeee0\",\r\n                        borderRadius: \"10px\",\r\n                        display:\"flex\",\r\n                        justifyContent:\"center\",\r\n                        alignItems:\"center\",\r\n                        fontWeight: 600,\r\n                        fontSize: \"14px\",\r\n                        lineHeight: \"30px\",\r\n                        height:\"53px\",\r\n                        boxShadow:`${cleanUpButtonBackColor} 4px 4px 0px 0px`\r\n                    }}\r\n                    >Clean up</div>\r\n                    <div style={{\r\n                        width:\"47%\",\r\n                        color: `${closeButtonTextColor}`,\r\n                        padding:\"10px\",\r\n                        border:\"2px solid\",\r\n                        borderColor:`${closeButtonBackColor}`,\r\n                        backgroundColor: \"#fbeee0\",\r\n                        borderRadius: \"10px\",\r\n                        display:\"flex\",\r\n                        justifyContent:\"center\",\r\n                        alignItems:\"center\",\r\n                        fontWeight: 600,\r\n                        fontSize: \"14px\",\r\n                        lineHeight: \"30px\",\r\n                        height:\"53px\",\r\n                        boxShadow:`${closeButtonBackColor} 4px 4px 0px 0px`,\r\n                    }}\r\n                    >Close</div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport {\r\n    PreviewToolbar\r\n}", "import {BlockStack, Box, ContextualSaveBar, Divider, Frame, InlineStack, Page, Text} from \"@shopify/polaris\";\r\nimport {ColorSetting} from \"~/components/ColorSetting\";\r\nimport {useEffect, useMemo, useState} from \"react\";\r\nimport {authenticate} from \"~/shopify.server\";\r\nimport {ActionFunctionArgs, json, LoaderFunctionArgs} from \"@remix-run/node\";\r\nimport {GET_APP_METAFIELDS, GET_CURRENT_APP_ID} from \"~/graphql/query\";\r\nimport {Metafields} from \"~/constants/namespaces\";\r\nimport {defaultStylesForTable} from \"~/constants/defaults\";\r\nimport {arrayToObjectMetafield, deepEqualObject} from \"~/services/converter\";\r\nimport {useLoaderData, useSubmit} from \"@remix-run/react\";\r\nimport {SET_METAFIELDS} from \"~/graphql/mutation\";\r\nimport {PreviewTable} from \"~/components/PreviewTable/PreviewTable\";\r\nimport {MetafieldsType} from \"~/constants/types\";\r\nimport {MetafieldsTableKeys} from \"~/constants/keys\";\r\n\r\ntype loaderData ={\r\n    table :{\r\n        backColor:string,\r\n        textColor:string,\r\n        attributesBackColor:string,\r\n        attributesTextColor:string,\r\n        attributesGroupTextColor:string\r\n        attributesGroupBackColor:string,\r\n        topbarBackColor:string,\r\n        topbarTextColor:string\r\n    }\r\n}\r\n\r\ntype FormDataInput = {\r\n    table: {\r\n        backColor:string,\r\n        textColor:string,\r\n        attributesBackColor:string,\r\n        attributesTextColor:string,\r\n        attributesGroupTextColor:string\r\n        attributesGroupBackColor:string,\r\n        topbarBackColor:string,\r\n        topbarTextColor:string\r\n    }\r\n}\r\n\r\nexport const loader = async ({request}:LoaderFunctionArgs)=> {\r\n    const { admin } = await authenticate.admin(request)\r\n\r\n    const appId = await admin.graphql(GET_CURRENT_APP_ID)\r\n\r\n    const appIdJson = await appId.json()\r\n\r\n    const id = appIdJson.data.currentAppInstallation.id\r\n\r\n    const metafields = await admin.graphql(GET_APP_METAFIELDS,{\r\n        variables:{\r\n            ownerId:id,\r\n            namespace:Metafields.Table\r\n        }\r\n    })\r\n\r\n    const metafieldsJSON = await metafields.json()\r\n\r\n    const arrayMetafields = metafieldsJSON.data.appInstallation.metafields.edges\r\n\r\n    let table:object\r\n\r\n    if(arrayMetafields.length === 0){\r\n        table = defaultStylesForTable\r\n    } else {\r\n        table = arrayToObjectMetafield(arrayMetafields)\r\n    }\r\n\r\n    return json({\r\n        table\r\n    })\r\n}\r\n\r\nexport const action = async ({request}:ActionFunctionArgs)=>{\r\n    const { admin } = await authenticate.admin(request)\r\n    const formData = await request.formData()\r\n    const objectFD =  Object.fromEntries(formData);\r\n    const dataFormData:FormDataInput = await JSON.parse(String(objectFD.data))\r\n\r\n    const appId = await admin.graphql(GET_CURRENT_APP_ID)\r\n    const appIdJson = await appId.json()\r\n    const id = appIdJson.data.currentAppInstallation.id\r\n\r\n    await admin.graphql(SET_METAFIELDS,\r\n        {\r\n            variables:{\r\n                metafields:[\r\n                    {\r\n                        namespace: Metafields.Table,\r\n                        type: MetafieldsType.Color,\r\n                        key:MetafieldsTableKeys.BackColor,\r\n                        value: String(dataFormData.table.backColor),\r\n                        ownerId: id\r\n                    },\r\n                    {\r\n                        namespace: Metafields.Table,\r\n                        type: MetafieldsType.Color,\r\n                        key:MetafieldsTableKeys.TextColor,\r\n                        value: String(dataFormData.table.textColor),\r\n                        ownerId: id\r\n                    },\r\n                    {\r\n                        namespace: Metafields.Table,\r\n                        type: MetafieldsType.Color,\r\n                        key:MetafieldsTableKeys.AttributesBackColor,\r\n                        value: String(dataFormData.table.attributesBackColor),\r\n                        ownerId: id\r\n                    },\r\n                    {\r\n                        namespace: Metafields.Table,\r\n                        type: MetafieldsType.Color,\r\n                        key:MetafieldsTableKeys.AttributesTextColor,\r\n                        value: String(dataFormData.table.attributesTextColor),\r\n                        ownerId: id\r\n                    },\r\n                    {\r\n                        namespace: Metafields.Table,\r\n                        type: MetafieldsType.Color,\r\n                        key:MetafieldsTableKeys.AttributesGroupTextColor,\r\n                        value: String(dataFormData.table.attributesGroupTextColor),\r\n                        ownerId: id\r\n                    },\r\n                    {\r\n                        namespace: Metafields.Table,\r\n                        type: MetafieldsType.Color,\r\n                        key:MetafieldsTableKeys.AttributesGroupBackColor,\r\n                        value: String(dataFormData.table.attributesGroupBackColor),\r\n                        ownerId: id\r\n                    },\r\n                    {\r\n                        namespace: Metafields.Table,\r\n                        type: MetafieldsType.Color,\r\n                        key:MetafieldsTableKeys.TopbarBackColor,\r\n                        value: String(dataFormData.table.topbarBackColor),\r\n                        ownerId: id\r\n                    },\r\n                    {\r\n                        namespace: Metafields.Table,\r\n                        type: MetafieldsType.Color,\r\n                        key:MetafieldsTableKeys.TopbarTextColor,\r\n                        value: String(dataFormData.table.topbarTextColor),\r\n                        ownerId: id\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    )\r\n\r\n    return null\r\n}\r\n\r\n\r\nexport default function ComparisonTableSettings(){\r\n    const {table}:loaderData = useLoaderData()\r\n    const submit = useSubmit()\r\n\r\n    const [backColor, setBackColor] = useState<string>(table.backColor)\r\n    const [textColor, setTextColor] = useState<string>(table.textColor)\r\n    const [attributesBackColor, setAttributesBackColor] = useState<string>(table.attributesBackColor)\r\n    const [attributesTextColor, setAttributesTextColor] = useState<string>(table.attributesTextColor)\r\n    const [attributesGroupTextColor, setAttributesGroupTextColor ] = useState<string>(table.attributesGroupTextColor)\r\n    const [attributesGroupBackColor, setAttributesGroupBackColor ] = useState<string>(table.attributesGroupBackColor)\r\n    const [topbarBackColor, setTopbarBackColor] = useState<string>(table.topbarBackColor)\r\n    const [topbarTextColor, setTopbarTextColor] = useState<string>(table.topbarTextColor)\r\n\r\n    const [actualData, setActualData] = useState<boolean>(true)\r\n    const [loadedData, setLoadedData] = useState<boolean>(false)\r\n\r\n    const handleBackColorOnChange = (color:string)=>{\r\n        setBackColor(color)\r\n    }\r\n\r\n    const handleTextColorOnChange = (color:string)=>{\r\n        setTextColor(color)\r\n    }\r\n\r\n    const handleAttributesGroupBackColorOnChange = (color:string)=>{\r\n        setAttributesGroupBackColor(color)\r\n    }\r\n\r\n    const handleAttributesGroupTextColorOnChange = (color:string)=>{\r\n        setAttributesGroupTextColor(color)\r\n    }\r\n\r\n    const handleAttributesTextColorOnChange = (color:string)=>{\r\n        setAttributesTextColor(color)\r\n    }\r\n\r\n    const handleAttributesBackColorOnChange = (color:string)=> {\r\n        setAttributesBackColor(color)\r\n    }\r\n\r\n    const handleTopbarBackColor = (color:string)=>{\r\n        setTopbarBackColor(color)\r\n    }\r\n\r\n    const handleTopbarTextColor = (color:string)=>{\r\n        setTopbarTextColor(color)\r\n    }\r\n\r\n    const handleDiscardActionOnClick = ()=>{\r\n        setBackColor(table.backColor)\r\n        setTextColor(table.textColor)\r\n        setAttributesBackColor(table.attributesBackColor)\r\n        setAttributesTextColor(table.attributesTextColor)\r\n        setAttributesGroupTextColor(table.attributesGroupTextColor)\r\n        setAttributesGroupBackColor(table.attributesGroupBackColor)\r\n        setTopbarBackColor(table.topbarBackColor)\r\n        setTopbarTextColor(table.topbarTextColor)\r\n    }\r\n\r\n    const currentDataInClientObject = useMemo(()=>{\r\n        return {\r\n            backColor:backColor,\r\n            textColor:textColor,\r\n            attributesBackColor:attributesBackColor,\r\n            attributesTextColor:attributesTextColor,\r\n            attributesGroupTextColor:attributesGroupTextColor,\r\n            attributesGroupBackColor:attributesGroupBackColor,\r\n            topbarBackColor:topbarBackColor,\r\n            topbarTextColor:topbarTextColor\r\n        }\r\n    }, [backColor, textColor, attributesBackColor, attributesTextColor, attributesGroupTextColor, attributesGroupBackColor, topbarBackColor, topbarTextColor])\r\n\r\n\r\n    useEffect(() => {\r\n        setActualData(deepEqualObject(currentDataInClientObject, table))\r\n        setLoadedData(false)\r\n    }, [table, currentDataInClientObject]);\r\n\r\n    const handleSaveOnClick = ()=> {\r\n        const data = JSON.stringify({table: {\r\n                backColor:backColor,\r\n                textColor:textColor,\r\n                attributesBackColor:attributesBackColor,\r\n                attributesTextColor:attributesTextColor,\r\n                attributesGroupTextColor:attributesGroupTextColor,\r\n                attributesGroupBackColor:attributesGroupBackColor,\r\n                topbarBackColor:topbarBackColor,\r\n                topbarTextColor:topbarTextColor\r\n            }})\r\n\r\n        submit({ data }, {method: \"POST\"})\r\n        setLoadedData(true)\r\n        return\r\n    }\r\n\r\n    return(\r\n        <Frame>\r\n            <InlineStack gap=\"200\" wrap={false}>\r\n                <Box background={\"bg-fill\"}\r\n                     width={\"400px\"}\r\n                     borderColor={\"border\"}\r\n                     minHeight={\"100vh\"}\r\n                     borderWidth={\"050\"}\r\n                >\r\n                        <Page>\r\n                            <BlockStack gap={\"200\"}>\r\n                            {\r\n                                !actualData &&\r\n                                <>\r\n                                    <ContextualSaveBar\r\n                                        alignContentFlush\r\n                                        message=\"Unsaved changes\"\r\n                                        saveAction={{\r\n                                            onAction: handleSaveOnClick,\r\n                                            loading: loadedData\r\n                                        }}\r\n                                        discardAction={{\r\n                                            onAction: handleDiscardActionOnClick,\r\n                                        }}\r\n                                    />\r\n                                </>\r\n                            }\r\n\r\n                            <Text as={\"p\"} variant={\"headingMd\"}>Table Style</Text>\r\n                            <Divider borderColor={\"border\"} />\r\n\r\n                            <ColorSetting title={\"Background Color\"}\r\n                                          initialColor={backColor}\r\n                                          onChange={handleBackColorOnChange}\r\n                            />\r\n                            <ColorSetting title={\"Text Color\"}\r\n                                          onChange={handleTextColorOnChange}\r\n                                          initialColor={textColor}\r\n                            />\r\n                            <ColorSetting title={\"Attributes Background Color\"}\r\n                                          initialColor={attributesBackColor}\r\n                                          onChange={handleAttributesBackColorOnChange}\r\n                            />\r\n                            <ColorSetting title={\"Attributes Text Color\"}\r\n                                          initialColor={attributesTextColor}\r\n                                          onChange={handleAttributesTextColorOnChange}\r\n                            />\r\n                            <ColorSetting title={\"Attributes Group Background Color\"}\r\n                                          initialColor={attributesGroupBackColor}\r\n                                          onChange={handleAttributesGroupBackColorOnChange}\r\n                            />\r\n                            <ColorSetting title={\"Attributes Group Text Color\"}\r\n                                          initialColor={attributesGroupTextColor}\r\n                                          onChange={handleAttributesGroupTextColorOnChange}\r\n                            />\r\n                            <Divider borderColor={\"border\"}/>\r\n\r\n                            <Text as={\"p\"} variant={\"headingSm\"}>Topbar Action Style</Text>\r\n\r\n                            <ColorSetting title={\"Background Color\"}\r\n                                          initialColor={topbarBackColor}\r\n                                          onChange={handleTopbarBackColor}\r\n                            />\r\n                            <ColorSetting title={\"Text Color\"}\r\n                                          initialColor={topbarTextColor}\r\n                                          onChange={handleTopbarTextColor}\r\n                            />\r\n                        </BlockStack>\r\n                        </Page>\r\n                    </Box>\r\n                <Box background={\"bg-fill-tertiary-active\"} minHeight={\"100%\"}>\r\n                    <div style={{\r\n                        width:\"1000px\",\r\n                        height:\"100%\",\r\n                        border:\"1px solid black\",\r\n                        display:\"flex\",\r\n                        justifyContent:\"center\",\r\n                        alignItems:\"center\"\r\n                    }}>\r\n                        <PreviewTable backColor={backColor}\r\n                                      textColor={textColor}\r\n                                      attributesGroupBackColor={attributesGroupBackColor}\r\n                                      attributesGroupTextColor={attributesGroupTextColor}\r\n                                      attributesBackColor={attributesBackColor}\r\n                                      attributesTextColor={attributesTextColor}\r\n                                      topbarBackColor={topbarBackColor}\r\n                                      topbarTextColor={topbarTextColor}\r\n                        />\r\n                    </div>\r\n                </Box>\r\n            </InlineStack>\r\n        </Frame>\r\n    )\r\n}", "type PreviewTableProps = {\r\n  backColor: string;\r\n  textColor: string;\r\n  attributesGroupBackColor: string;\r\n  attributesGroupTextColor: string;\r\n  attributesBackColor: string;\r\n  attributesTextColor: string;\r\n  topbarTextColor: string;\r\n  topbarBackColor: string;\r\n};\r\n\r\nconst PreviewTable = ({\r\n  backColor,\r\n  textColor,\r\n  attributesGroupBackColor,\r\n  topbarBackColor,\r\n  topbarTextColor,\r\n  attributesGroupTextColor,\r\n  attributesBackColor,\r\n  attributesTextColor,\r\n}: PreviewTableProps) => {\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          width: \"515px\",\r\n          height: \"430px\",\r\n          borderRadius: \"22px\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          backgroundColor: \"rgba(255,255,255,0.38)\",\r\n          padding: \"20px\",\r\n          position: \"relative\",\r\n        }}\r\n      >\r\n        <button\r\n          style={{\r\n            position: \"absolute\",\r\n            right: \"7px\",\r\n            top: \"5px\",\r\n            width: \"20px\",\r\n            height: \"20px\",\r\n            fontWeight: 700,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            color: `${topbarTextColor}`,\r\n            alignItems: \"center\",\r\n            borderRadius: \"50%\",\r\n            borderColor: `${topbarBackColor}`,\r\n            boxShadow: `${topbarBackColor} 2px 2px 0px 0px`,\r\n          }}\r\n        >\r\n          X\r\n        </button>\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            borderRadius: \"10px\",\r\n            border: \"1px solid\",\r\n            borderColor: \"rgba(204, 204, 204, 1)\",\r\n          }}\r\n        >\r\n          <table\r\n            style={{\r\n              height: \"100%\",\r\n              width: \"100%\",\r\n              backgroundColor: \"#ffffff\",\r\n              borderRadius: \"10px\",\r\n              borderCollapse: \"collapse\",\r\n            }}\r\n          >\r\n            <tbody>\r\n              <tr\r\n                style={{\r\n                  height: \"200px\",\r\n                }}\r\n              >\r\n                <th\r\n                  style={{\r\n                    backgroundColor: `${attributesGroupBackColor}`,\r\n                    borderRadius: \"10px 0 0 0\",\r\n                    borderRight: \"1px solid\",\r\n                    borderBottom: \"1px solid\",\r\n                    color: `${attributesGroupTextColor}`,\r\n                    borderColor: \"rgba(204, 204, 204, 1)\",\r\n                  }}\r\n                >\r\n                  Products\r\n                </th>\r\n                <th\r\n                  style={{\r\n                    borderBottom: \"1px solid\",\r\n                    borderColor: \"rgba(204, 204, 204, 1)\",\r\n                    borderRadius: \"0 10px 0 0\",\r\n                    backgroundColor: `${backColor}`,\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      gap: \"10px\",\r\n                      flexDirection: \"column\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        width: \"50px\",\r\n                        fontSize: \"18px\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      Product Icon\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        backgroundColor: \"#ffffff\",\r\n                        color: `${attributesTextColor}`,\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        fontWeight: 600,\r\n                        fontSize: \"14px\",\r\n                        width: \"97px\",\r\n                        height: \"33px\",\r\n                        border: `2px solid ${attributesBackColor}`,\r\n                        boxShadow: `${attributesBackColor} 4px 4px 0 0`,\r\n                        borderRadius: \"10px\",\r\n                      }}\r\n                    >\r\n                      Add to cart\r\n                    </div>\r\n                    <div>Learn more</div>\r\n                  </div>\r\n                </th>\r\n              </tr>\r\n              <tr>\r\n                <th\r\n                  style={{\r\n                    borderRight: \"1px solid\",\r\n                    borderBottom: \"1px solid\",\r\n                    borderColor: \"rgba(204, 204, 204, 1)\",\r\n                    color: `${attributesGroupTextColor}`,\r\n                    backgroundColor: `${attributesGroupBackColor}`,\r\n                  }}\r\n                >\r\n                  Variant Title\r\n                </th>\r\n                <td\r\n                  style={{\r\n                    borderBottom: \"1px solid\",\r\n                    borderColor: \"rgba(204, 204, 204, 1)\",\r\n                    backgroundColor: `${backColor}`,\r\n                    color: `${textColor}`,\r\n                  }}\r\n                >\r\n                  <p style={{ textAlign: \"center\" }}>Default Title</p>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th\r\n                  style={{\r\n                    backgroundColor: `${attributesGroupBackColor}`,\r\n                    color: `${attributesGroupTextColor}`,\r\n                    borderRight: \"1px solid\",\r\n                    borderBottom: \"1px solid\",\r\n                    borderTop: \"1px solid\",\r\n                    borderColor: \"rgba(204, 204, 204, 1)\",\r\n                  }}\r\n                >\r\n                  Price\r\n                </th>\r\n                <td\r\n                  style={{\r\n                    borderBottom: \"1px solid\",\r\n                    borderColor: \"rgba(204, 204, 204, 1)\",\r\n                    backgroundColor: `${backColor}`,\r\n                    color: `${textColor}`,\r\n                  }}\r\n                >\r\n                  <p style={{ textAlign: \"center\" }}>\u20B4,600.00 UAH</p>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th\r\n                  style={{\r\n                    backgroundColor: `${attributesGroupBackColor}`,\r\n                    color: `${attributesGroupTextColor}`,\r\n                    borderRight: \"1px solid\",\r\n                    borderBottom: \"1px solid\",\r\n                    borderColor: \"rgba(204, 204, 204, 1)\",\r\n                  }}\r\n                >\r\n                  Vendor\r\n                </th>\r\n                <td\r\n                  style={{\r\n                    borderBottom: \"1px solid\",\r\n                    borderColor: \"rgba(204, 204, 204, 1)\",\r\n                    backgroundColor: `${backColor}`,\r\n                    color: `${textColor}`,\r\n                  }}\r\n                >\r\n                  <p style={{ textAlign: \"center\" }}>Hydrogen Vendor</p>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th\r\n                  style={{\r\n                    backgroundColor: `${attributesGroupBackColor}`,\r\n                    color: `${attributesGroupTextColor}`,\r\n                    borderRight: \"1px solid\",\r\n                    borderRadius: \"0 0 0 10px\",\r\n                    borderColor: \"rgba(204, 204, 204, 1)\",\r\n                  }}\r\n                >\r\n                  Available\r\n                </th>\r\n                <td\r\n                  style={{\r\n                    backgroundColor: `${backColor}`,\r\n                    color: `${textColor}`,\r\n                    borderRadius: \"0 0 10px 0\",\r\n                  }}\r\n                >\r\n                  <p style={{ textAlign: \"center\" }}>true</p>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { PreviewTable };\r\n", "import {\r\n    BlockStack,\r\n    Box,\r\n    ContextualSaveBar,\r\n    Divider,\r\n    ExceptionList,\r\n    Frame,\r\n    InlineStack,\r\n    Page,\r\n    Text\r\n} from \"@shopify/polaris\";\r\nimport {BooleanSetting} from \"~/components/BooleanSetting\";\r\nimport {NoteMinor} from \"@shopify/polaris-icons\";\r\nimport {useEffect, useMemo, useState} from \"react\";\r\nimport {ColorSetting} from \"~/components/ColorSetting\";\r\nimport {authenticate} from \"~/shopify.server\";\r\nimport {ActionFunctionArgs, json, LoaderFunctionArgs} from \"@remix-run/node\";\r\nimport {GET_APP_METAFIELDS, GET_CURRENT_APP_ID} from \"~/graphql/query\";\r\nimport {Metafields} from \"~/constants/namespaces\";\r\nimport {defaultStylesForProductsGridButton} from \"~/constants/defaults\";\r\nimport {arrayToObjectMetafield, deepEqualObject} from \"~/services/converter\";\r\nimport {useLoaderData, useSubmit} from \"@remix-run/react\";\r\nimport {SET_METAFIELDS} from \"~/graphql/mutation\";\r\nimport {MetafieldsType} from \"~/constants/types\";\r\nimport {MetafieldsProductsGridButtonKeys} from \"~/constants/keys\";\r\n\r\ntype FormDataInput = {\r\n    productsGridButton: {\r\n        showCompareButton:boolean,\r\n        showIcon:boolean\r\n        showLabel:boolean,\r\n        backgroundColor:string,\r\n        borderColor:string,\r\n        addCompareButtonTextColor:string,\r\n        removeCompareButtonTextColor:string\r\n    }\r\n}\r\n\r\nexport const loader = async ({request}:LoaderFunctionArgs)=> {\r\n    const { admin } = await authenticate.admin(request)\r\n\r\n    const appId = await admin.graphql(GET_CURRENT_APP_ID)\r\n\r\n    const appIdJson = await appId.json()\r\n\r\n    const id = appIdJson.data.currentAppInstallation.id\r\n\r\n    const metafields = await admin.graphql(GET_APP_METAFIELDS,{\r\n        variables:{\r\n            ownerId:id,\r\n            namespace:Metafields.ProductsGridButton\r\n        }\r\n    })\r\n\r\n    const metafieldsJSON = await metafields.json()\r\n\r\n    const arrayMetafields = metafieldsJSON.data.appInstallation.metafields.edges\r\n\r\n    let productsGridButton:object\r\n\r\n    if(arrayMetafields.length === 0){\r\n        productsGridButton = defaultStylesForProductsGridButton\r\n    } else {\r\n        productsGridButton = arrayToObjectMetafield(arrayMetafields)\r\n    }\r\n\r\n    return json({\r\n        productsGridButton\r\n    })\r\n}\r\n\r\nexport const action = async ({request}:ActionFunctionArgs)=> {\r\n    const { admin } = await authenticate.admin(request)\r\n    const formData = await request.formData()\r\n    const objectFD =  Object.fromEntries(formData);\r\n    const dataFormData:FormDataInput = await JSON.parse(String(objectFD.data))\r\n\r\n    const appId = await admin.graphql(GET_CURRENT_APP_ID)\r\n    const appIdJson = await appId.json()\r\n    const id = appIdJson.data.currentAppInstallation.id\r\n\r\n    await admin.graphql(SET_METAFIELDS,\r\n        {\r\n            variables:{\r\n                metafields:[\r\n                    {\r\n                        namespace: Metafields.ProductsGridButton,\r\n                        type: MetafieldsType.Boolean,\r\n                        key:MetafieldsProductsGridButtonKeys.ShowCompareButton,\r\n                        value: String(dataFormData.productsGridButton.showCompareButton),\r\n                        ownerId: id\r\n                    },\r\n                    {\r\n                        namespace: Metafields.ProductsGridButton,\r\n                        type: MetafieldsType.Boolean,\r\n                        key:MetafieldsProductsGridButtonKeys.ShowIcon,\r\n                        value: String(dataFormData.productsGridButton.showIcon),\r\n                        ownerId: id\r\n                    },\r\n                    {\r\n                        namespace: Metafields.ProductsGridButton,\r\n                        type: MetafieldsType.Boolean,\r\n                        key:MetafieldsProductsGridButtonKeys.ShowLabel,\r\n                        value: String(dataFormData.productsGridButton.showLabel),\r\n                        ownerId: id\r\n                    },\r\n                    {\r\n                        namespace: Metafields.ProductsGridButton,\r\n                        type: MetafieldsType.Color,\r\n                        key:MetafieldsProductsGridButtonKeys.BackgroundColor,\r\n                        value: String(dataFormData.productsGridButton.backgroundColor),\r\n                        ownerId: id\r\n                    },\r\n                    {\r\n                        namespace: Metafields.ProductsGridButton,\r\n                        type: MetafieldsType.Color,\r\n                        key:MetafieldsProductsGridButtonKeys.BorderColor,\r\n                        value: String(dataFormData.productsGridButton.borderColor),\r\n                        ownerId: id\r\n                    },\r\n                    {\r\n                        namespace: Metafields.ProductsGridButton,\r\n                        type: MetafieldsType.Color,\r\n                        key:MetafieldsProductsGridButtonKeys.AddCompareButtonTextColor,\r\n                        value: String(dataFormData.productsGridButton.addCompareButtonTextColor),\r\n                        ownerId: id\r\n                    },\r\n                    {\r\n                        namespace: Metafields.ProductsGridButton,\r\n                        type: MetafieldsType.Color,\r\n                        key:MetafieldsProductsGridButtonKeys.RemoveCompareButtonTextColor,\r\n                        value: String(dataFormData.productsGridButton.removeCompareButtonTextColor),\r\n                        ownerId: id\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    )\r\n\r\n    return null\r\n}\r\n\r\ntype LoaderData ={\r\n    productsGridButton: {\r\n        showCompareButton:string,\r\n        showIcon:string\r\n        showLabel:string,\r\n        backgroundColor:string,\r\n        borderColor:string,\r\n        addCompareButtonTextColor:string,\r\n        removeCompareButtonTextColor:string\r\n    }\r\n}\r\n\r\nexport default function ProductGridPage() {\r\n    const submit = useSubmit()\r\n\r\n    const {productsGridButton}:LoaderData= useLoaderData()\r\n    const [showCompareButton, setShowCompareButton] = useState<boolean>(productsGridButton.showCompareButton === \"true\" )\r\n    const [showIcon, setShowIcon] = useState<boolean>(productsGridButton.showIcon === \"true\")\r\n    const [showLabel, setShowLabel] = useState<boolean>(productsGridButton.showLabel === \"true\")\r\n    const [backgroundColor, setBackgroundColor] = useState<string>(productsGridButton.backgroundColor)\r\n    const [borderColor, setBorderColor] = useState<string>(productsGridButton.borderColor)\r\n    const [addCompareButtonTextColor, setAddCompareButtonTextColor] = useState<string>(productsGridButton.addCompareButtonTextColor)\r\n    const [removeCompareButtonTextColor, setRemoveCompareButtonTextColor] = useState<string>(productsGridButton.removeCompareButtonTextColor)\r\n\r\n    const [actualData, setActualData] = useState<boolean>(true)\r\n    const [loadedData, setLoadedData] = useState<boolean>(false)\r\n\r\n    const handleShowCompareButtonOnChange = ()=>{\r\n        setShowCompareButton(!showCompareButton)\r\n    }\r\n    const handleShowLabelOnChange = ()=>{\r\n        setShowLabel(!showLabel)\r\n    }\r\n    const handleShowIconOnChange = ()=>{\r\n        setShowIcon(!showIcon)\r\n    }\r\n\r\n    const handleBackgroundColorOnChange = (color:string)=>{\r\n        setBackgroundColor(color)\r\n    }\r\n\r\n    const handleBorderColorOnChange = (color:string)=>{\r\n        setBorderColor(color)\r\n    }\r\n\r\n    const handleAddCompareButtonTextColorOnChange = (color:string)=>{\r\n        setAddCompareButtonTextColor(color)\r\n    }\r\n\r\n    const handleRemoveCompareButtonTextColorOnChange = (color:string) =>{\r\n        setRemoveCompareButtonTextColor(color)\r\n    }\r\n\r\n    const currentDataInClientObject = useMemo(()=>{\r\n        return {\r\n            showCompareButton:String(showCompareButton),\r\n            showIcon:String(showIcon),\r\n            showLabel:String(showLabel),\r\n            backgroundColor:backgroundColor,\r\n            borderColor:borderColor,\r\n            addCompareButtonTextColor:addCompareButtonTextColor,\r\n            removeCompareButtonTextColor:removeCompareButtonTextColor\r\n        }\r\n    }, [showCompareButton, showIcon, showLabel, backgroundColor, borderColor, addCompareButtonTextColor, removeCompareButtonTextColor ])\r\n\r\n\r\n    const handleSaveOnClick = ()=> {\r\n        const data = JSON.stringify({\r\n            productsGridButton: {\r\n                showCompareButton:showCompareButton,\r\n                showIcon:showCompareButton,\r\n                showLabel:showCompareButton,\r\n                backgroundColor:showCompareButton,\r\n                borderColor:showCompareButton,\r\n                addCompareButtonTextColor:showCompareButton,\r\n                removeCompareButtonTextColor:showCompareButton\r\n            }\r\n        })\r\n        submit({ data }, {method: \"POST\"})\r\n        setLoadedData(true)\r\n        return\r\n    }\r\n\r\n    const handleDiscardActionOnClick = ()=>{\r\n        setShowCompareButton(productsGridButton.showCompareButton === \"true\")\r\n        setShowIcon(productsGridButton.showIcon === \"true\")\r\n        setShowLabel(productsGridButton.showLabel === \"true\")\r\n        setBackgroundColor(productsGridButton.backgroundColor)\r\n        setBorderColor(productsGridButton.borderColor)\r\n        setAddCompareButtonTextColor(productsGridButton.addCompareButtonTextColor)\r\n        setRemoveCompareButtonTextColor(productsGridButton.removeCompareButtonTextColor)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setActualData(deepEqualObject(currentDataInClientObject, productsGridButton))\r\n        setLoadedData(false)\r\n    }, [productsGridButton, currentDataInClientObject]);\r\n\r\n    return(\r\n        <Frame>\r\n            <InlineStack gap=\"200\" wrap={false}>\r\n                    <Box background={\"bg-fill\"}\r\n                         width={\"400px\"}\r\n                         borderColor={\"border\"}\r\n                         minHeight={\"100vh\"}\r\n                         borderWidth={\"050\"}\r\n                    >\r\n                    <Page>\r\n                        <BlockStack gap={\"300\"}>\r\n                            {\r\n                                !actualData &&\r\n                                <>\r\n                                    <ContextualSaveBar\r\n                                        alignContentFlush\r\n                                        message=\"Unsaved changes\"\r\n                                        saveAction={{\r\n                                            onAction: handleSaveOnClick,\r\n                                            loading: loadedData\r\n                                        }}\r\n                                        discardAction={{\r\n                                            onAction: handleDiscardActionOnClick,\r\n                                        }}\r\n                                    />\r\n                                </>\r\n                            }\r\n\r\n                            <Text as={\"h4\"} variant={\"headingMd\"}>Product Grid Page</Text>\r\n\r\n                            <Divider borderColor={\"border\"} />\r\n\r\n                            <ExceptionList\r\n                                items={[\r\n                                    {\r\n                                        icon: NoteMinor,\r\n                                        description:\r\n                                            'If our app does not work with your theme after turn on widget. Please chat with us to be integrated with your theme quickly.',\r\n                                    },\r\n                                ]}\r\n                            />\r\n\r\n                            <BooleanSetting title={\"Show Add To Compare button\"} valueOnChange={handleShowCompareButtonOnChange} value={showCompareButton}/>\r\n\r\n                            <BooleanSetting title={\"Show Icon\"} value={showIcon} valueOnChange={handleShowIconOnChange} />\r\n\r\n                            <BooleanSetting title={\"Show Label\"} value={showLabel} valueOnChange={handleShowLabelOnChange}/>\r\n\r\n                            <Divider borderColor={\"border\"} />\r\n\r\n                            <Text as={\"h4\"} variant={\"headingSm\"}>Style</Text>\r\n\r\n                            <ColorSetting title={\"Background Color\"}\r\n                                          initialColor={backgroundColor}\r\n                                          onChange={handleBackgroundColorOnChange}\r\n                            />\r\n\r\n                            <ColorSetting title={\"Border Color\"}\r\n                                          initialColor={borderColor}\r\n                                          onChange={handleBorderColorOnChange}\r\n                            />\r\n\r\n                            <ColorSetting title={\"Add To Compare Text Color\"}\r\n                                          initialColor={addCompareButtonTextColor}\r\n                                          onChange={handleAddCompareButtonTextColorOnChange}\r\n                            />\r\n\r\n                            <ColorSetting title={\"Remove From Compare Text Color\"}\r\n                                          initialColor={removeCompareButtonTextColor}\r\n                                          onChange={handleRemoveCompareButtonTextColorOnChange}\r\n                            />\r\n                        </BlockStack>\r\n                    </Page>\r\n                </Box>\r\n                <Box>\r\n                    Iframe Our Button\r\n                </Box>\r\n\r\n            </InlineStack>\r\n        </Frame>\r\n    )\r\n}", "import {\r\n    BlockStack,\r\n    Box, ContextualSaveBar,\r\n    Divider, Frame,\r\n    InlineStack,\r\n    Page,\r\n    Text,\r\n} from \"@shopify/polaris\";\r\nimport {useEffect, useMemo, useState} from \"react\";\r\nimport {BooleanSetting} from \"~/components/BooleanSetting\";\r\nimport {ColorSetting} from \"~/components/ColorSetting\";\r\nimport {ActionFunctionArgs, json, LoaderFunctionArgs} from \"@remix-run/node\";\r\nimport {authenticate} from \"~/shopify.server\";\r\nimport {GET_APP_METAFIELDS, GET_CURRENT_APP_ID} from \"~/graphql/query\";\r\nimport {arrayToObjectMetafield, deepEqualObject} from \"~/services/converter\";\r\nimport {useLoaderData, useSubmit} from \"@remix-run/react\";\r\nimport {SET_METAFIELDS} from \"~/graphql/mutation\";\r\nimport {Metafields} from \"~/constants/namespaces\";\r\nimport {defaultStylesForProductDetailPageButton} from \"~/constants/defaults\";\r\nimport {\r\n    PreviewProductDetailPageButton\r\n} from \"~/components/PreviewProductDetailPageButton/PreviewProductDetailPageButton\";\r\nimport {MetafieldsType} from \"~/constants/types\";\r\nimport {MetafieldsProductButtonKeys} from \"~/constants/keys\";\r\n\r\n\r\nexport const loader = async ({request}: LoaderFunctionArgs) => {\r\n    const {admin} = await authenticate.admin(request)\r\n\r\n    const appId = await admin.graphql(GET_CURRENT_APP_ID)\r\n\r\n    const appIdJson = await appId.json()\r\n\r\n    const id = appIdJson.data.currentAppInstallation.id\r\n\r\n    const metafields = await admin.graphql(GET_APP_METAFIELDS, {\r\n        variables: {\r\n            ownerId: id,\r\n            namespace: Metafields.ProductButton\r\n        }\r\n    })\r\n\r\n    const metafieldsJSON = await metafields.json()\r\n\r\n    const arrayMetafields = metafieldsJSON.data.appInstallation.metafields.edges\r\n\r\n    let productButton: object\r\n\r\n    if (arrayMetafields.length === 0) {\r\n        productButton = defaultStylesForProductDetailPageButton\r\n    } else {\r\n        productButton = arrayToObjectMetafield(arrayMetafields)\r\n    }\r\n\r\n    return json({\r\n        productButton\r\n    })\r\n}\r\n\r\ntype FormDataInput = {\r\n    productButton: {\r\n        show: boolean,\r\n        showIcon: boolean\r\n        showLabel: boolean,\r\n        backColor: string,\r\n        borderColor: string,\r\n        addToCompareTextColor: string,\r\n        removeFromCompareTextColor: string\r\n    }\r\n}\r\n\r\nexport const action = async ({request}: ActionFunctionArgs) => {\r\n    const {admin} = await authenticate.admin(request)\r\n    const formData = await request.formData()\r\n    const objectFD = Object.fromEntries(formData);\r\n    const dataFormData: FormDataInput = await JSON.parse(String(objectFD.data))\r\n\r\n    const appId = await admin.graphql(GET_CURRENT_APP_ID)\r\n    const appIdJson = await appId.json()\r\n    const id = appIdJson.data.currentAppInstallation.id\r\n\r\n    await admin.graphql(SET_METAFIELDS,\r\n        {\r\n            variables: {\r\n                metafields: [\r\n                    {\r\n                        namespace: Metafields.ProductButton,\r\n                        type: MetafieldsType.Boolean,\r\n                        key: MetafieldsProductButtonKeys.Show,\r\n                        value: String(dataFormData.productButton.show),\r\n                        ownerId: id\r\n                    },\r\n                    {\r\n                        namespace: Metafields.ProductButton,\r\n                        type: MetafieldsType.Boolean,\r\n                        key: MetafieldsProductButtonKeys.ShowLabel,\r\n                        value: String(dataFormData.productButton.showLabel),\r\n                        ownerId: id\r\n                    },\r\n                    {\r\n                        namespace: Metafields.ProductButton,\r\n                        type: MetafieldsType.Boolean,\r\n                        key: MetafieldsProductButtonKeys.ShowIcon,\r\n                        value: String(dataFormData.productButton.showIcon),\r\n                        ownerId: id\r\n                    },\r\n                    {\r\n                        namespace: Metafields.ProductButton,\r\n                        type: MetafieldsType.Color,\r\n                        key: MetafieldsProductButtonKeys.BackColor,\r\n                        value: String(dataFormData.productButton.backColor),\r\n                        ownerId: id\r\n                    },\r\n                    {\r\n                        namespace: Metafields.ProductButton,\r\n                        type: MetafieldsType.Color,\r\n                        key: MetafieldsProductButtonKeys.BorderColor,\r\n                        value: String(dataFormData.productButton.borderColor),\r\n                        ownerId: id\r\n                    },\r\n                    {\r\n                        namespace: Metafields.ProductButton,\r\n                        type: MetafieldsType.Color,\r\n                        key: MetafieldsProductButtonKeys.AddToCompareTextColor,\r\n                        value: String(dataFormData.productButton.addToCompareTextColor),\r\n                        ownerId: id\r\n                    },\r\n                    {\r\n                        namespace: Metafields.ProductButton,\r\n                        type: MetafieldsType.Color,\r\n                        key: MetafieldsProductButtonKeys.RemoveFromCompareTextColor,\r\n                        value: String(dataFormData.productButton.removeFromCompareTextColor),\r\n                        ownerId: id\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    )\r\n\r\n    return null\r\n}\r\n\r\ntype LoaderData = {\r\n    productButton: {\r\n        show: string,\r\n        showIcon: string\r\n        showLabel: string,\r\n        backColor: string,\r\n        borderColor: string,\r\n        addToCompareTextColor: string,\r\n        removeFromCompareTextColor: string\r\n    }\r\n}\r\n\r\nexport default function ProductDetailSettings() {\r\n    const submit = useSubmit()\r\n    const {productButton}: LoaderData = useLoaderData()\r\n    const [showCompareButton, setShowCompareButton] = useState<boolean>(productButton?.show === \"true\")\r\n    const [showIcon, setShowIcon] = useState<boolean>(productButton?.showIcon === \"true\")\r\n    const [showLabel, setShowLabel] = useState<boolean>(productButton?.showLabel === \"true\")\r\n    const [backColor, setBackColor] = useState<string>(productButton?.backColor)\r\n    const [borderColor, setBorderColor] = useState<string>(productButton?.borderColor)\r\n    const [addToCompareTextColor, setAddToCompareTextColor] = useState<string>(productButton?.addToCompareTextColor)\r\n    const [removeFromCompareTextColor, setRemoveFromCompareTextColor] = useState<string>(productButton?.removeFromCompareTextColor)\r\n    const [actualData, setActualData] = useState<boolean>(true)\r\n    const [loadedData, setLoadedData] = useState<boolean>(false)\r\n\r\n    const handleShowCompareButtonOnChange = () => {\r\n        setShowCompareButton(!showCompareButton)\r\n    }\r\n\r\n    const handleShowIconOnChange = () => {\r\n        setShowIcon(!showIcon)\r\n    }\r\n\r\n    const handleShowLabelOnChange = () => {\r\n        setShowLabel(!showLabel)\r\n    }\r\n\r\n    const handleBackColorOnChange = (color: string) => {\r\n        setBackColor(color)\r\n    }\r\n\r\n    const handleAddToCompareTextColorOnChange = (color: string) => {\r\n        setAddToCompareTextColor(color)\r\n    }\r\n\r\n    const handleBorderColorOnChange = (color: string) => {\r\n        setBorderColor(color)\r\n    }\r\n\r\n    const handleRemoveFromCompareTextColorOnChange = (color: string) => {\r\n        setRemoveFromCompareTextColor(color)\r\n    }\r\n\r\n    const handleSaveOnClick = () => {\r\n        const data = JSON.stringify({\r\n                productButton: {\r\n                    show: showCompareButton,\r\n                    showIcon: showIcon,\r\n                    showLabel: showLabel,\r\n                    backColor: backColor,\r\n                    borderColor: borderColor,\r\n                    addToCompareTextColor: addToCompareTextColor,\r\n                    removeFromCompareTextColor: removeFromCompareTextColor\r\n                }\r\n            }\r\n        )\r\n\r\n        submit({data}, {method: \"POST\"})\r\n        setLoadedData(true)\r\n        return\r\n    }\r\n\r\n    const currentDataInClientObject = useMemo(() => {\r\n        return {\r\n            show: String(showCompareButton),\r\n            showIcon: String(showIcon),\r\n            showLabel: String(showLabel),\r\n            backColor: backColor,\r\n            borderColor: borderColor,\r\n            addToCompareTextColor: addToCompareTextColor,\r\n            removeFromCompareTextColor: removeFromCompareTextColor\r\n        }\r\n    }, [showCompareButton, showIcon, showLabel, backColor, borderColor, addToCompareTextColor, removeFromCompareTextColor])\r\n\r\n    useEffect(() => {\r\n        setActualData(deepEqualObject(currentDataInClientObject, productButton))\r\n        setLoadedData(false)\r\n    }, [productButton, currentDataInClientObject]);\r\n\r\n    const handleDiscardActionOnClick = () => {\r\n        setShowCompareButton(productButton?.show === \"true\")\r\n        setShowIcon(productButton?.showIcon === \"true\")\r\n        setShowLabel(productButton?.showLabel === \"true\")\r\n        setBackColor(productButton?.backColor)\r\n        setBorderColor(productButton?.borderColor)\r\n        setAddToCompareTextColor(productButton?.addToCompareTextColor)\r\n        setRemoveFromCompareTextColor(productButton?.removeFromCompareTextColor)\r\n    }\r\n\r\n    return (\r\n        <Frame>\r\n            <InlineStack gap=\"200\" wrap={false}>\r\n                <Box background={\"bg-fill\"}\r\n                     width={\"400px\"}\r\n                     borderColor={\"border\"}\r\n                     minHeight={\"100vh\"}\r\n                     borderWidth={\"050\"}\r\n                     minWidth={\"400px\"}\r\n                >\r\n                    <Page fullWidth>\r\n                        <BlockStack gap={\"300\"}>\r\n                            {\r\n                                !actualData &&\r\n                                <>\r\n                                    <ContextualSaveBar\r\n                                        alignContentFlush\r\n                                        message=\"Unsaved changes\"\r\n                                        saveAction={{\r\n                                            onAction: handleSaveOnClick,\r\n                                            loading: loadedData\r\n                                        }}\r\n                                        discardAction={{\r\n                                            onAction: handleDiscardActionOnClick,\r\n                                        }}\r\n                                    />\r\n                                </>\r\n                            }\r\n\r\n                            <Text as={\"h4\"} variant={\"headingMd\"}>Product Detail Page</Text>\r\n\r\n                            <Divider borderColor={\"border\"}/>\r\n\r\n                            <BooleanSetting title={\"Show Add To Compare button\"}\r\n                                            value={showCompareButton}\r\n                                            valueOnChange={handleShowCompareButtonOnChange}\r\n                            />\r\n\r\n                            <BooleanSetting title={\"Show Icon\"}\r\n                                            value={showIcon}\r\n                                            valueOnChange={handleShowIconOnChange}\r\n                            />\r\n\r\n                            <BooleanSetting title={\"Show Label\"}\r\n                                            value={showLabel}\r\n                                            valueOnChange={handleShowLabelOnChange}\r\n                            />\r\n\r\n                            <Divider borderColor={\"border\"}/>\r\n\r\n                            <Text as={\"p\"} variant={\"headingSm\"}>Style</Text>\r\n\r\n                            <ColorSetting title={\"Background Color\"}\r\n                                          initialColor={backColor}\r\n                                          onChange={handleBackColorOnChange}\r\n                            />\r\n\r\n                            <ColorSetting title={\"Border Color\"}\r\n                                          initialColor={borderColor}\r\n                                          onChange={handleBorderColorOnChange}\r\n                            />\r\n\r\n                            <ColorSetting title={\"Add To Compare Text Color\"}\r\n                                          initialColor={addToCompareTextColor}\r\n                                          onChange={handleAddToCompareTextColorOnChange}\r\n                            />\r\n\r\n                            <ColorSetting title={\"Remove From Compare Text Color\"}\r\n                                          initialColor={removeFromCompareTextColor}\r\n                                          onChange={handleRemoveFromCompareTextColorOnChange}\r\n                            />\r\n                        </BlockStack>\r\n                    </Page>\r\n                </Box>\r\n                <Box background={\"bg-fill-tertiary-active\"} minHeight={\"100%\"}>\r\n                    <div style={{\r\n                        width: \"1000px\",\r\n                        height: \"100%\",\r\n                        border: \"1px solid black\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\"\r\n                    }}>\r\n                        <PreviewProductDetailPageButton\r\n                            showLabel={showLabel}\r\n                            showIcon={showIcon}\r\n                            backColor={backColor}\r\n                            borderColor={borderColor}\r\n                            addToCompareTextColor={addToCompareTextColor}\r\n                            removeFromCompareTextColor={removeFromCompareTextColor}\r\n                        />\r\n                    </div>\r\n                </Box>\r\n            </InlineStack>\r\n        </Frame>\r\n    )\r\n}\r\n", "\r\n\r\nconst PlusIcon = ()=>{\r\n    return(\r\n        <>\r\n            <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"10\" viewBox=\"0 0 32 32\">\r\n                <title>plus</title>\r\n                <path d=\"M31 12h-11v-11c0-0.552-0.448-1-1-1h-6c-0.552 0-1 0.448-1 1v11h-11c-0.552 0-1 0.448-1 1v6c0 0.552 0.448 1 1 1h11v11c0 0.552 0.448 1 1 1h6c0.552 0 1-0.448 1-1v-11h11c0.552 0 1-0.448 1-1v-6c0-0.552-0.448-1-1-1z\"></path>\r\n            </svg>\r\n        </>\r\n    )\r\n}\r\n\r\nexport {\r\n    PlusIcon\r\n}", "const MinusIcon = ()=>{\r\n    return(\r\n        <>\r\n            <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"10\" viewBox=\"0 0 32 32\">\r\n                <title>minus</title>\r\n                <path d=\"M0 13v6c0 0.552 0.448 1 1 1h30c0.552 0 1-0.448 1-1v-6c0-0.552-0.448-1-1-1h-30c-0.552 0-1 0.448-1 1z\"></path>\r\n            </svg>\r\n        </>\r\n    )\r\n}\r\n\r\nexport {\r\n    MinusIcon\r\n}", "import {PlusIcon} from \"~/components/PlusIcon\";\r\nimport {MinusIcon} from \"~/components/MinusIcon\";\r\n\r\ntype PreviewProductDetailPageButtonProps = {\r\n    addToCompareTextColor:string,\r\n    backColor:string,\r\n    borderColor:string,\r\n    removeFromCompareTextColor:string\r\n    showIcon:boolean\r\n    showLabel:boolean\r\n}\r\n\r\nconst PreviewProductDetailPageButton = ({showLabel, showIcon, addToCompareTextColor, backColor, borderColor, removeFromCompareTextColor}:PreviewProductDetailPageButtonProps)=>{\r\n    return(\r\n        <>\r\n            <div style={{\r\n                display:\"flex\",\r\n                gap:\"10px\",\r\n                flexDirection:\"column\"\r\n            }}>\r\n                <div style={{\r\n                    width:\"355px\",\r\n                    display:\"flex\",\r\n                    color:`${addToCompareTextColor}`,\r\n                    justifyContent:\"center\",\r\n                    alignItems:\"center\",\r\n                    backgroundColor:`${backColor}`,\r\n                    padding:\"1em 2em\",\r\n                    border:\"1px solid\",\r\n                    borderColor:`${borderColor}`,\r\n                    gap:\"10px\",\r\n                    lineHeight:\"1.15\"\r\n                }}>\r\n                    {\r\n                        showIcon &&\r\n                        <PlusIcon/>\r\n                    }\r\n                    {\r\n                        showLabel &&\r\n                        \"Add to compare\"\r\n                    }\r\n                </div>\r\n                <div style={{\r\n                    width:\"355px\",\r\n                    display:\"flex\",\r\n                    color:`${removeFromCompareTextColor}`,\r\n                    justifyContent:\"center\",\r\n                    backgroundColor:`${backColor}`,\r\n                    alignItems:\"center\",\r\n                    padding:\"1em 2em\",\r\n                    border:\"1px solid\",\r\n                    borderColor:`${borderColor}`,\r\n                    gap:\"10px\",\r\n                    lineHeight:\"1.15\"\r\n                }}>\r\n                    {\r\n                        showIcon &&\r\n                        <MinusIcon/>\r\n                    }\r\n                    {\r\n                        showLabel &&\r\n                        \"Remove from compare\"\r\n                    }\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport {PreviewProductDetailPageButton}", "import {\r\n    BlockStack, Box, InlineStack, FullscreenBar,\r\n} from \"@shopify/polaris\";\r\nimport {NavLink, Outlet, useNavigate} from \"@remix-run/react\";\r\nimport {Routes} from \"~/constants/routes\"\r\nimport {useEffect} from \"react\";\r\nimport {SettingsLinkList} from \"~/constants/buttons\";\r\nimport {CustomNavListItem} from \"~/components/CustomNavListItem\";\r\nimport {useAppBridge} from \"@shopify/app-bridge-react\";\r\nimport {Fullscreen} from \"@shopify/app-bridge/actions\";\r\n\r\nexport default function ComparisonPage() {\r\n    const navigate = useNavigate()\r\n    const app = useAppBridge();\r\n    const fullscreen = Fullscreen.create(app);\r\n\r\n\r\n    useEffect(() => {\r\n        fullscreen.dispatch(Fullscreen.Action.ENTER);\r\n        navigate(Routes.ADD_TO_COMPARE)\r\n        return ()=>{\r\n            fullscreen.dispatch(Fullscreen.Action.EXIT);\r\n        }\r\n    }, []);\r\n\r\n    const handleFullscreenExit = () => {\r\n        navigate(Routes.ROOT)\r\n    }\r\n\r\n\r\n    return (\r\n      <>\r\n          <FullscreenBar onAction={handleFullscreenExit}/>\r\n          <div style={{display:\"flex\", flexDirection:\"row\"}}>\r\n              <div>\r\n                  <Box background={\"bg-fill\"} minHeight={\"100%\"} width={\"70px\"}>\r\n                      <BlockStack align={\"center\"} inlineAlign={\"center\"} gap={\"200\"}>\r\n                          {SettingsLinkList.map((item, index)=>(\r\n                              <NavLink key={Date.now()+index} style={{textDecoration:\"none\", color: \"#000\"}} to={item.path}>\r\n                                  {({isActive})=>(\r\n                                      <CustomNavListItem icon={item.icon} isActive={isActive} title={item.title} key={Date.now()+index} />\r\n                                  )}\r\n                              </NavLink>\r\n                          ))}\r\n                      </BlockStack>\r\n                  </Box>\r\n              </div>\r\n              <div>\r\n                  <InlineStack wrap={false}>\r\n                      <Box>\r\n                          <Outlet/>\r\n                      </Box>\r\n                  </InlineStack>\r\n              </div>\r\n          </div>\r\n      </>\r\n  );\r\n}\r\n", "import {Routes} from \"~/constants/routes\";\r\nimport {SettingLink} from \"~/types/buttons\";\r\n\r\nconst SettingsLinkList:SettingLink[] =[\r\n    {\r\n        path:Routes.ADD_TO_COMPARE,\r\n        title:\"Product Detail Page\",\r\n        icon:\"detailPage\"\r\n    },\r\n    {\r\n        path:Routes.STICKY_FIXED,\r\n        title:\"Sticky Fixed Button\",\r\n        icon:\"fixedButton\"\r\n    },\r\n    {\r\n        path:Routes.COMPARISON_TOOLBAR,\r\n        title:\"Comparison Toolbar\",\r\n        icon:\"toolbar\"\r\n    },\r\n    {\r\n        path:Routes.COMPARISON_TABLE,\r\n        title:\"Comparison Table\",\r\n        icon:\"table\"\r\n    }\r\n]\r\n\r\nexport {SettingsLinkList}", "import {CustomNavLinkProps} from \"~/types/props\";\r\nimport {Icon, Tooltip, Text} from \"@shopify/polaris\";\r\nimport {\r\n    ToolsMajor, AnalyticsTableMinor, TextBlockMajor, DetailedPopUpMajor, ButtonMinor\r\n} from '@shopify/polaris-icons';\r\n\r\nconst switchIcon = {\r\n    \"detailPage\": ()=> <Icon source={DetailedPopUpMajor}/>,\r\n    \"gridPage\": ()=> <Icon source={TextBlockMajor}/>,\r\n    \"fixedButton\": ()=> <Icon source={ButtonMinor}/>,\r\n    \"toolbar\": ()=> <Icon source={ToolsMajor}/>,\r\n    \"table\":()=> <Icon source={AnalyticsTableMinor}/>\r\n}\r\n\r\nconst CustomNavListItem = ({isActive, title,icon}:CustomNavLinkProps) => {\r\n    const SelectedComponent = switchIcon[icon] || (() => <div>\u041D\u0435\u0442 \u0442\u0430\u043A\u043E\u0433\u043E \u043A\u043E\u043C\u043F\u043E\u043D\u0435\u043D\u0442\u0430</div>);\r\n\r\n    return(\r\n        <div style={{\r\n            margin:2,\r\n            width:50,\r\n            height:50,\r\n            borderRadius:5,\r\n            display:\"flex\",\r\n            justifyContent:\"center\",\r\n            alignItems:\"center\",\r\n            backgroundColor : isActive ? \"rgba(200, 200, 200, 0.4)\": \"none\"\r\n        }}>\r\n            <div style={{padding: '75px 0'}}>\r\n                <Tooltip content={title}>\r\n                    <Text fontWeight=\"bold\" as=\"span\">\r\n                        <SelectedComponent/>\r\n                    </Text>\r\n                </Tooltip>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {CustomNavListItem}", "import { useEffect, useMemo } from \"react\";\r\nimport type { ActionFunctionArgs, LoaderFunctionArgs } from \"@remix-run/node\";\r\nimport { json } from \"@remix-run/node\";\r\nimport {\r\n  Page,\r\n  Text,\r\n  Card,\r\n  Button,\r\n  BlockStack,\r\n  Box,\r\n  Banner,\r\n  Modal,\r\n  TextField,\r\n  Divider,\r\n  Frame,\r\n} from \"@shopify/polaris\";\r\nimport { authenticate } from \"~/shopify.server\";\r\nimport { useActionData, useLoaderData, useSubmit } from \"@remix-run/react\";\r\nimport { useToggle } from \"~/hooks/useToggle\";\r\nimport { Controller, SubmitHandler, useForm } from \"react-hook-form\";\r\nimport { DescriptionInput, FeatureNameInput } from \"~/constants/validation\";\r\nimport { RequestFeatureFormInput } from \"~/types/props\";\r\nimport { createApp } from \"@shopify/app-bridge\";\r\nimport { Redirect } from \"@shopify/app-bridge/actions\";\r\nimport { GET_CURRENT_APP_ID } from \"~/graphql/query\";\r\nimport { JSON_INITIAL_ITEMS } from \"~/helpers/initialItems\";\r\nimport { redirectEditorLink } from \"~/helpers/linkBuilder\";\r\nimport { getCompareMeta } from \"~/helpers/getCompareMeta\";\r\nimport { addAndDelMetafield } from \"~/helpers/addAndDelMetafield\";\r\nimport { DraggableItems } from \"~/components/DraggableItem/DraggableItems\";\r\n\r\nexport const loader = async ({ request }: LoaderFunctionArgs) => {\r\n  const { admin, session } = await authenticate.admin(request);\r\n  const themes = await admin.rest.resources.Theme.all({\r\n    session: session,\r\n  });\r\n  const currentTheme = themes.data.find((item) => item.role === \"main\");\r\n  const appId = await admin.graphql(GET_CURRENT_APP_ID);\r\n  const id = await appId.json();\r\n  const shopName = session.shop.split(\".\")[0];\r\n\r\n  const response = await admin.rest.resources.Asset.all({\r\n    session: session,\r\n    theme_id: currentTheme!.id,\r\n    asset: { key: \"config/settings_data.json\" },\r\n  });\r\n\r\n  const { meta, defaultMeta } = await getCompareMeta(\r\n    admin,\r\n    id.data.currentAppInstallation.id\r\n  );\r\n\r\n  const data = JSON.parse(String(response.data[0].value));\r\n  const themeId = process.env.SHOPIFY_THEME_EXTENSION_ID;\r\n  return json({\r\n    data,\r\n    currentTheme,\r\n    shopName,\r\n    themeId,\r\n    id,\r\n    meta,\r\n    defaultMeta,\r\n  });\r\n};\r\n\r\nexport const action = async ({ request }: ActionFunctionArgs) => {\r\n  const { admin } = await authenticate.admin(request);\r\n  const formData = await request.formData();\r\n\r\n  await addAndDelMetafield(admin, formData, request);\r\n  const { meta, defaultMeta } = await getCompareMeta(admin, formData.get(\"id\"));\r\n\r\n  return json({\r\n    meta,\r\n    defaultMeta,\r\n  });\r\n};\r\n\r\nexport default function Index() {\r\n  const loaderData: any = useLoaderData();\r\n  const actionData: any = useActionData();\r\n  const submit = useSubmit();\r\n  const app = createApp(shopify.config);\r\n  const redirect = Redirect.create(app);\r\n  const [value, toggle] = useToggle(false);\r\n  const { handleSubmit, control, reset, watch } =\r\n    useForm<RequestFeatureFormInput>({\r\n      defaultValues: {\r\n        feature: \"\",\r\n        description: \"\",\r\n      },\r\n    });\r\n\r\n  useEffect(() => {\r\n    if (loaderData.defaultMeta.length) {\r\n      return;\r\n    }\r\n    submit(\r\n      {\r\n        key: \"product_comparison\",\r\n        value: JSON_INITIAL_ITEMS,\r\n        id: loaderData.id.data.currentAppInstallation.id,\r\n        namespace: \"default_product_meta\",\r\n        type: \"json\",\r\n      },\r\n      { replace: true, method: \"POST\" }\r\n    );\r\n  }, [submit]);\r\n\r\n  const showAlert = useMemo(() => {\r\n    if (loaderData?.data?.current?.blocks) {\r\n      return loaderData?.data?.current?.blocks[\"2396933968462544605\"]\r\n        ?.disabled;\r\n    }\r\n    return true;\r\n  }, [loaderData]);\r\n\r\n  const handleActivateClick = () => {\r\n    redirect.dispatch(\r\n      Redirect.Action.REMOTE,\r\n      redirectEditorLink(loaderData.shopName, loaderData.themeId)\r\n    );\r\n  };\r\n\r\n  const handleSubmitFeedbackForm: SubmitHandler<\r\n    RequestFeatureFormInput\r\n  > = () => {\r\n    const featureName = watch(\"feature\");\r\n    const description = watch(\"description\");\r\n    new Promise((resolve) => {\r\n      resolve({ featureName, description });\r\n    }).finally(() => {\r\n      reset();\r\n      toggle();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Frame>\r\n      <Page>\r\n        <BlockStack gap=\"400\">\r\n          <Text variant={\"headingXl\"} as={\"h1\"}>\r\n            Dashboard\r\n          </Text>\r\n          {showAlert && (\r\n            <Banner title=\"Active our app on your theme\">\r\n              <BlockStack gap=\"200\">\r\n                <Text as={\"p\"}>\r\n                  Our application is still disabled in your theme. It is\r\n                  required to be enabled to start storefront integration.\r\n                </Text>\r\n\r\n                <Box>\r\n                  <Button onClick={handleActivateClick} variant={\"primary\"}>\r\n                    Activate App\r\n                  </Button>\r\n                </Box>\r\n              </BlockStack>\r\n            </Banner>\r\n          )}\r\n\r\n          <Card>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Text as={\"p\"}>\r\n                We hope our App will be suitable for your business\uD83D\uDE0A\r\n                <br />\r\n                If you want to customize the app to better suit your business,\r\n                submit a request and we'll consider making it happen!\r\n              </Text>\r\n              <Button onClick={toggle}>Request a feature</Button>\r\n            </div>\r\n            <Modal open={value} onClose={toggle} title=\"Request new feature\">\r\n              <Modal.Section>\r\n                <form onSubmit={handleSubmit(handleSubmitFeedbackForm)}>\r\n                  <BlockStack gap={\"200\"}>\r\n                    <Controller\r\n                      name={\"feature\"}\r\n                      control={control}\r\n                      rules={FeatureNameInput}\r\n                      render={({ field, fieldState }) => {\r\n                        return (\r\n                          <TextField\r\n                            label={\"Feature Name\"}\r\n                            autoComplete=\"off\"\r\n                            value={field.value}\r\n                            error={fieldState.error?.message}\r\n                            onChange={field.onChange}\r\n                            placeholder={\"e.g. Translate store front texts\"}\r\n                          />\r\n                        );\r\n                      }}\r\n                    />\r\n\r\n                    <Controller\r\n                      name={\"description\"}\r\n                      control={control}\r\n                      rules={DescriptionInput}\r\n                      render={({ field, fieldState }) => {\r\n                        return (\r\n                          <TextField\r\n                            label={\"Description\"}\r\n                            onChange={field.onChange}\r\n                            value={field.value}\r\n                            error={fieldState.error?.message}\r\n                            placeholder={\"Explain more about your feature\"}\r\n                            multiline={5}\r\n                            autoComplete=\"off\"\r\n                          />\r\n                        );\r\n                      }}\r\n                    />\r\n                    <Divider borderColor=\"border\" />\r\n                    <div style={{ textAlign: \"right\" }}>\r\n                      <Button variant={\"primary\"} submit>\r\n                        Send\r\n                      </Button>\r\n                    </div>\r\n                  </BlockStack>\r\n                </form>\r\n              </Modal.Section>\r\n            </Modal>\r\n          </Card>\r\n          <Text variant={\"headingLg\"} as={\"h2\"}>\r\n            Comparison Fields Setting\r\n          </Text>\r\n          <Card>\r\n            {Boolean(loaderData.defaultMeta.length) && (\r\n              <DraggableItems\r\n                appId={loaderData.id.data.currentAppInstallation.id}\r\n                meta={actionData ? actionData?.meta : loaderData.meta}\r\n                defaultMeta={\r\n                  actionData ? actionData?.defaultMeta : loaderData.defaultMeta\r\n                }\r\n              />\r\n            )}\r\n          </Card>\r\n        </BlockStack>\r\n      </Page>\r\n    </Frame>\r\n  );\r\n}\r\n", "import {Dispatch, SetStateAction, useCallback, useState} from \"react\";\r\n\r\n\r\nconst useToggle = (defaultValue?:boolean):[boolean, ()=>void, Dispatch<SetStateAction<boolean>>]=> {\r\n    const [value, setValue] = useState(!!defaultValue)\r\n\r\n    const toggle = useCallback(()=>setValue(x=> !x),[])\r\n\r\n    return [value, toggle, setValue]\r\n}\r\n\r\nexport {useToggle}", "const FeatureNameInput = {\r\n    required: {\r\n        value: true,\r\n        message: \"Feature name is required\"\r\n    }\r\n}\r\n\r\nconst DescriptionInput = {\r\n    required: {\r\n        value:true,\r\n        message:\"Description is required\"\r\n    }\r\n}\r\n\r\nexport {FeatureNameInput, DescriptionInput}", "export const INITIAL_ITEMS = [\r\n  {\r\n    id: \"item-1\",\r\n    content: \"Variant Title\",\r\n    description: \"Product Variants Name\",\r\n    active: true,\r\n    value: \"variantsTitle\",\r\n  },\r\n  {\r\n    id: \"item-2\",\r\n    content: \"Price\",\r\n    description: \"Product Price\",\r\n    active: true,\r\n    value: \"price\",\r\n  },\r\n  {\r\n    id: \"item-9\",\r\n    content: \"Compared At Price\",\r\n    description: \"Product Compared At Price\",\r\n    active: false,\r\n    value: \"comparedAtPrice\",\r\n  },\r\n  {\r\n    id: \"item-3\",\r\n    content: \"SKU\",\r\n    description: \"Variant SKU\",\r\n    active: false,\r\n    value: \"sku\",\r\n  },\r\n  {\r\n    id: \"item-4\",\r\n    content: \"Barcode\",\r\n    description: \"Variant Barcode\",\r\n    active: false,\r\n    value: \"barcode\",\r\n  },\r\n  {\r\n    id: \"item-5\",\r\n    content: \"Type\",\r\n    description: \"Product Type\",\r\n    active: false,\r\n    value: \"type\",\r\n  },\r\n  {\r\n    id: \"item-6\",\r\n    content: \"Vendor\",\r\n    description: \"Product Vendor\",\r\n    active: true,\r\n    value: \"vendor\",\r\n  },\r\n  {\r\n    id: \"item-7\",\r\n    content: \"Available\",\r\n    description: \"Product In Stock or Not\",\r\n    active: true,\r\n    value: \"available\",\r\n  },\r\n  {\r\n    id: \"item-8\",\r\n    content: \"Description\",\r\n    description: \"Product Description\",\r\n    active: false,\r\n    value: \"description\",\r\n  },\r\n\r\n  {\r\n    id: \"item-10\",\r\n    content: \"Tags\",\r\n    description: \"Product Tags\",\r\n    active: false,\r\n    value: \"tags\",\r\n  },\r\n];\r\n\r\nexport const JSON_INITIAL_ITEMS = JSON.stringify(INITIAL_ITEMS);\r\n", "\r\n\r\nconst redirectEditorLink = (shopName:string, themeId:string) =>{\r\n    return `https://admin.shopify.com/store/${shopName}/themes/current/editor?context=apps&template=product&activateAppId=${themeId}/product_compare`\r\n}\r\n\r\nexport {\r\n    redirectEditorLink\r\n}", "import { GET_APP_METAFIELDS } from \"~/graphql/query\";\r\n\r\nexport const getCompareMeta = async (admin, id) => {\r\n  const metafields = await admin.graphql(GET_APP_METAFIELDS, {\r\n    variables: {\r\n      ownerId: id,\r\n      namespace: \"product_meta\",\r\n    },\r\n  });\r\n\r\n  const defaultMetafields = await admin.graphql(GET_APP_METAFIELDS, {\r\n    variables: {\r\n      ownerId: id,\r\n      namespace: \"default_product_meta\",\r\n    },\r\n  });\r\n\r\n  const metafieldsJSON = await metafields.json();\r\n  const defaultMetafieldsJSON = await defaultMetafields.json();\r\n\r\n  return {\r\n    meta: metafieldsJSON.data.appInstallation.metafields.edges,\r\n    defaultMeta: defaultMetafieldsJSON.data.appInstallation.metafields.edges,\r\n  };\r\n};\r\n", "import { SET_METAFIELDS } from \"~/graphql/mutation\";\r\nimport { authenticate } from \"~/shopify.server\";\r\n\r\nexport const addProductMeta = async (request: any, data: any) => {\r\n  const { admin } = await authenticate.admin(request);\r\n  const id = data.get(\"id\");\r\n  const namespace = data.get(\"namespace\");\r\n  const key = data.get(\"key\");\r\n  const value = data.get(\"value\");\r\n  const type = data.get(\"type\");\r\n\r\n  const response = await admin.graphql(SET_METAFIELDS, {\r\n    variables: {\r\n      metafields: [\r\n        {\r\n          namespace,\r\n          key,\r\n          type,\r\n          value,\r\n          ownerId: id,\r\n        },\r\n      ],\r\n    },\r\n  });\r\n\r\n  return response;\r\n};\r\n", "import { DEL_METAFIELD } from \"~/graphql/mutation\";\r\nimport { addProductMeta } from \"./addProductMeta\";\r\n\r\nexport const addAndDelMetafield = async (admin, formData, request) => {\r\n  if (formData.get(\"action\") === \"del\") {\r\n    await admin.graphql(DEL_METAFIELD, {\r\n      variables: {\r\n        input: {\r\n          id: formData.get(\"metaId\"),\r\n        },\r\n      },\r\n    });\r\n  } else {\r\n    await addProductMeta(request, formData);\r\n  }\r\n};\r\n", "import { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { ContextualSaveBar } from \"@shopify/polaris\";\r\nimport { DragList } from \"./DraggableItem.styled\";\r\nimport { MetafieldModal } from \"../MetafieldModal/MetafieldModal\";\r\nimport { useSubmit } from \"@remix-run/react\";\r\nimport { DraggableItem } from \"./DraggableItem\";\r\n\r\nexport const DraggableItems = ({ appId, meta, defaultMeta }) => {\r\n  const isInitialRenderTwo = useRef(true);\r\n  const submit = useSubmit();\r\n  const [loading, setLoading] = useState(false);\r\n  const [items, setItems] = useState(() => {\r\n    return JSON.parse(defaultMeta[0]?.node.value);\r\n  });\r\n  const [itemsChange, setItemsChange] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setItemsChange(false);\r\n    setLoading(false);\r\n    setItems(JSON.parse(defaultMeta[0].node.value));\r\n  }, [defaultMeta]);\r\n\r\n  useEffect(() => {\r\n    if (isInitialRenderTwo.current) {\r\n      isInitialRenderTwo.current = false;\r\n      return;\r\n    }\r\n    if (defaultMeta[0].node.value === JSON.stringify(items)) {\r\n      setItemsChange(false);\r\n    } else {\r\n      setItemsChange(true);\r\n    }\r\n  }, [items]);\r\n\r\n  const handleDragEnd = useCallback(\r\n    (result) => {\r\n      if (!result.destination) return;\r\n      const updatedItems = Array.from(items);\r\n      const [removed] = updatedItems.splice(result.source.index, 1);\r\n      updatedItems.splice(result.destination.index, 0, removed);\r\n      setItems(updatedItems);\r\n    },\r\n    [items]\r\n  );\r\n\r\n  const handleSaveNewMeta = useCallback(() => {\r\n    setLoading(true);\r\n    submit(\r\n      {\r\n        key: \"product_comparison\",\r\n        value: JSON.stringify(items),\r\n        id: appId,\r\n        namespace: \"default_product_meta\",\r\n        type: \"json\",\r\n      },\r\n      { replace: true, method: \"POST\" }\r\n    );\r\n  }, [loading, items]);\r\n\r\n  const handleDiscardMeta = useCallback(() => {\r\n    setItems(JSON.parse(defaultMeta[0].node.value));\r\n    setItemsChange(false);\r\n  }, [defaultMeta, itemsChange, items]);\r\n\r\n  return (\r\n    <>\r\n      {itemsChange && (\r\n        <ContextualSaveBar\r\n          alignContentFlush\r\n          message=\"Unsaved changes\"\r\n          saveAction={{\r\n            onAction: handleSaveNewMeta,\r\n            loading: loading,\r\n          }}\r\n          discardAction={{\r\n            onAction: handleDiscardMeta,\r\n          }}\r\n        />\r\n      )}\r\n      <DragDropContext onDragEnd={handleDragEnd}>\r\n        <Droppable droppableId=\"droppable-list\">\r\n          {(provided) => (\r\n            <DragList ref={provided.innerRef} {...provided.droppableProps}>\r\n              {items.map((item, index) => (\r\n                <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                  {(provided) => (\r\n                    <DraggableItem\r\n                      provided={provided}\r\n                      items={items}\r\n                      setItems={setItems}\r\n                      item={item}\r\n                    />\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </DragList>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n      <MetafieldModal appId={appId} meta={meta} setItems={setItems} />\r\n    </>\r\n  );\r\n};\r\n", "import styled from \"@emotion/styled\";\r\n\r\nexport const DragList = styled.ul`\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 4px;\r\n`;\r\n\r\nexport const DragItem = styled.li`\r\n  border-radius: 4px;\r\n  :hover {\r\n    background-color: #f5f5f5;\r\n  }\r\n`;\r\n\r\nexport const DragBox = styled.div<{ checked: boolean }>`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 4px;\r\n  border-radius: 4px;\r\n`;\r\n\r\nexport const DragCheckboxContainer = styled.div`\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  gap: 5px;\r\n`;\r\n", "import { Button, Modal } from \"@shopify/polaris\";\r\nimport { useState, useCallback, FC, useEffect } from \"react\";\r\nimport { MetaForm } from \"../MetafieldModalForm/MetafieldModalForm\";\r\nimport { IModalProps } from \"~/interfaces/interfaces\";\r\nimport { ModalContainer } from \"./MetafieldModal.styled\";\r\n\r\nexport const MetafieldModal: FC<IModalProps> = ({ appId, meta, setItems }) => {\r\n  const [active, setActive] = useState(false);\r\n  const [isAddBtnDisabled, setIsAddBtnDisabled] = useState(false);\r\n  const [newMetaItems, setNewMetaItems] = useState([]);\r\n  const [checkedItems, setCheckedItems] = useState(\r\n    meta.reduce((acc, item) => {\r\n      acc[item.node.key] = false;\r\n      return acc;\r\n    }, {})\r\n  );\r\n\r\n  useEffect(() => {\r\n    const newMetaItems = meta.reduce((acc, item) => {\r\n      for (const key in checkedItems) {\r\n        if (Object.prototype.hasOwnProperty.call(checkedItems, key)) {\r\n          if (item.node.key === key && checkedItems[key]) {\r\n            const newMetaObj = {\r\n              id: item.node.id,\r\n              content: item.node.key\r\n                .split(\"_\")\r\n                .filter((item) => item !== \"_\")\r\n                .join(\" \"),\r\n              description: \"Product Metafield\",\r\n              key: item.node.key,\r\n              active: false,\r\n            };\r\n            acc.push(newMetaObj);\r\n          }\r\n        }\r\n      }\r\n      return acc;\r\n    }, []);\r\n\r\n    if (!newMetaItems.length) {\r\n      setIsAddBtnDisabled(true);\r\n    } else {\r\n      setIsAddBtnDisabled(false);\r\n    }\r\n    setNewMetaItems(newMetaItems);\r\n  }, [checkedItems]);\r\n\r\n  const handleChange = useCallback(() => {\r\n    setActive(!active);\r\n  }, [active]);\r\n\r\n  const handleAddFieldAction = useCallback(() => {\r\n    setItems((prevState) => [\r\n      ...prevState,\r\n      ...newMetaItems.filter(\r\n        (el) => !prevState.find((item) => item.id === el.id)\r\n      ),\r\n    ]);\r\n    setCheckedItems({});\r\n    setActive(!active);\r\n  }, [active, newMetaItems]);\r\n\r\n  return (\r\n    <ModalContainer>\r\n      <Button onClick={handleChange}>Add Metafields</Button>\r\n      <Modal\r\n        open={active}\r\n        onClose={handleChange}\r\n        title=\"New Metafield\"\r\n        primaryAction={{\r\n          content: \"Add Field\",\r\n          onAction: handleAddFieldAction,\r\n          disabled: isAddBtnDisabled,\r\n        }}\r\n      >\r\n        <Modal.Section>\r\n          <MetaForm\r\n            id={appId}\r\n            meta={meta}\r\n            setCheckedItems={setCheckedItems}\r\n            checkedItems={checkedItems}\r\n          />\r\n        </Modal.Section>\r\n      </Modal>\r\n    </ModalContainer>\r\n  );\r\n};\r\n", "import { Button, Form, FormLayout, Text, TextField } from \"@shopify/polaris\";\r\nimport { FC, useCallback } from \"react\";\r\nimport { useCreateMeta } from \"~/hooks/useCreateMeta\";\r\nimport { CheckboxList } from \"./MetafieldModalForm.styled\";\r\nimport { ResourcePicker } from \"@shopify/app-bridge-react\";\r\nimport { MetafieldModalCheckbox } from \"./MetafieldModalCheckbox\";\r\nimport { IModalFormProps } from \"~/interfaces/interfaces\";\r\nimport { error } from \"console\";\r\n\r\nexport const MetaForm: FC<IModalFormProps> = ({\r\n  id,\r\n  meta,\r\n  setCheckedItems,\r\n  checkedItems,\r\n}) => {\r\n  const {\r\n    key,\r\n    value,\r\n    isPickerOpen,\r\n    pickerPayload,\r\n    loadingMeta,\r\n    pattern,\r\n    setIsPickerOpen,\r\n    handlePicker,\r\n    handleSubmit,\r\n    handleKeyChange,\r\n    handleValueChange,\r\n  } = useCreateMeta(id, meta);\r\n\r\n  const onPickerBtnClick = useCallback(() => {\r\n    setIsPickerOpen(true);\r\n  }, []);\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <FormLayout>\r\n        <CheckboxList>\r\n          {meta.map((item, idx) => {\r\n            return (\r\n              <MetafieldModalCheckbox\r\n                key={idx}\r\n                id={id}\r\n                idx={idx}\r\n                item={item}\r\n                setCheckedItems={setCheckedItems}\r\n                checkedItems={checkedItems}\r\n              />\r\n            );\r\n          })}\r\n        </CheckboxList>\r\n        <ResourcePicker\r\n          resourceType=\"Product\"\r\n          open={isPickerOpen}\r\n          onSelection={handlePicker}\r\n          selectMultiple={false}\r\n          onCancel={() => {\r\n            setIsPickerOpen(false);\r\n          }}\r\n        />\r\n        <Button fullWidth onClick={onPickerBtnClick}>\r\n          Select a product\r\n        </Button>\r\n        <Text variant=\"headingMd\" as=\"h3\">\r\n          {pickerPayload.length ? pickerPayload[0].title : \"\"}\r\n        </Text>\r\n        <TextField\r\n          pattern={pattern}\r\n          value={key}\r\n          onChange={handleKeyChange}\r\n          label=\"Key\"\r\n          type=\"text\"\r\n          autoComplete=\"text\"\r\n          requiredIndicator={false}\r\n          helpText={\r\n            <span>\r\n              The key of the metafield to use in extension. Example text format\r\n              \"Example_text\"\r\n            </span>\r\n          }\r\n        />\r\n        <TextField\r\n          value={value}\r\n          onChange={handleValueChange}\r\n          label=\"Value\"\r\n          type=\"text\"\r\n          autoComplete=\"text\"\r\n          helpText={\r\n            <span>The value of the metafield to use in extension.</span>\r\n          }\r\n        />\r\n        <Button submit loading={loadingMeta}>\r\n          Save meta\r\n        </Button>\r\n      </FormLayout>\r\n    </Form>\r\n  );\r\n};\r\n", "import { useSubmit } from \"@remix-run/react\";\r\nimport { SelectPayload } from \"@shopify/app-bridge/actions/ResourcePicker\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\n\r\nexport const useCreateMeta = (\r\n  id: string,\r\n  meta: {\r\n    node: { namespace: string; key: string; value: string; id: string };\r\n  }[]\r\n) => {\r\n  const submit = useSubmit();\r\n  const [isPickerOpen, setIsPickerOpen] = useState(false);\r\n  const [pickerPayload, setPickerPayload] = useState([]);\r\n  const [key, setKey] = useState(\"\");\r\n  const [value, setValue] = useState(\"\");\r\n  const [loadingMeta, setLoadingMeta] = useState(false);\r\n  const pattern: string = \"^[a-zA-Z]+(_[a-zA-Z]+)*$\";\r\n\r\n  useEffect(() => {\r\n    setLoadingMeta(false);\r\n  }, [meta]);\r\n\r\n  const handleSubmit = useCallback(() => {\r\n    if (pickerPayload.length && key && value) {\r\n      setLoadingMeta(true);\r\n      const metaData = meta.find((item) => item.node.key === key);\r\n      let parsedValue = [];\r\n      if (metaData) {\r\n        parsedValue = JSON.parse(metaData.node.value);\r\n      }\r\n      const updatedValue = parsedValue.map((item) => {\r\n        if (item.productId === pickerPayload[0].id) {\r\n          return { productId: item.productId, value };\r\n        }\r\n        return item;\r\n      });\r\n      if (JSON.stringify(updatedValue) === JSON.stringify(parsedValue)) {\r\n        updatedValue.push({ productId: pickerPayload[0].id, value });\r\n      }\r\n      submit(\r\n        {\r\n          key,\r\n          value: JSON.stringify([...updatedValue]),\r\n          id,\r\n          namespace: \"product_meta\",\r\n          type: \"json\",\r\n        },\r\n        { replace: true, method: \"POST\" }\r\n      );\r\n      setKey(\"\");\r\n      setValue(\"\");\r\n      setPickerPayload([]);\r\n    }\r\n    return;\r\n  }, [key, value, pickerPayload]);\r\n\r\n  const handlePicker = useCallback((selectPayload: SelectPayload) => {\r\n    setIsPickerOpen(false);\r\n    setPickerPayload(selectPayload.selection);\r\n  }, []);\r\n\r\n  const handleKeyChange = useCallback((value: string) => {\r\n    setKey(value);\r\n  }, []);\r\n  const handleValueChange = useCallback((value: string) => {\r\n    setValue(value);\r\n  }, []);\r\n\r\n  return {\r\n    key,\r\n    value,\r\n    isPickerOpen,\r\n    pickerPayload,\r\n    loadingMeta,\r\n    pattern,\r\n    setIsPickerOpen,\r\n    handleSubmit,\r\n    handlePicker,\r\n    handleKeyChange,\r\n    handleValueChange,\r\n  };\r\n};\r\n", "import styled from \"@emotion/styled\";\r\n\r\nexport const CheckboxList = styled.div`\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  max-height: 150px;\r\n`;\r\n\r\nexport const CheckboxContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const CheckboxDelBtn = styled.button`\r\n  border: none;\r\n  background-color: inherit;\r\n  padding: 0;\r\n  cursor: pointer;\r\n`;\r\n", "import { useCallback, useEffect, useState } from \"react\";\r\nimport { CheckboxContainer, CheckboxDelBtn } from \"./MetafieldModalForm.styled\";\r\nimport { Checkbox, Icon, Spinner } from \"@shopify/polaris\";\r\nimport { useSubmit } from \"@remix-run/react\";\r\nimport { DeleteMajor } from \"@shopify/polaris-icons\";\r\n\r\nexport const MetafieldModalCheckbox = ({\r\n  idx,\r\n  item,\r\n  checkedItems,\r\n  setCheckedItems,\r\n  id,\r\n}) => {\r\n  const submit = useSubmit();\r\n  const [loading, setLoading] = useState(false);\r\n  const [btnId, setBtnId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setLoading(false);\r\n  }, [item]);\r\n\r\n  const handleChange = useCallback(\r\n    (itemId) => {\r\n      setCheckedItems((prevCheckedItems) => {\r\n        const updatedCheckedItems = {\r\n          ...prevCheckedItems,\r\n          [itemId]: !prevCheckedItems[itemId],\r\n        };\r\n        return updatedCheckedItems;\r\n      });\r\n    },\r\n    [checkedItems]\r\n  );\r\n\r\n  const handleDelBtn = useCallback((e) => {\r\n    setLoading(true);\r\n    setBtnId(e.currentTarget.id);\r\n    submit(\r\n      { action: \"del\", id, metaId: e.currentTarget.id },\r\n      { replace: true, method: \"POST\" }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <CheckboxContainer>\r\n      <Checkbox\r\n        label={item.node.key}\r\n        checked={checkedItems[item.node.key]}\r\n        onChange={() => handleChange(item.node.key)}\r\n      />\r\n      <CheckboxDelBtn id={item.node.id} type=\"button\" onClick={handleDelBtn}>\r\n        {loading && btnId === item.node.id ? (\r\n          <Spinner accessibilityLabel=\"Spinner example\" size=\"small\" />\r\n        ) : (\r\n          <Icon source={DeleteMajor} tone=\"base\" />\r\n        )}\r\n      </CheckboxDelBtn>\r\n    </CheckboxContainer>\r\n  );\r\n};\r\n", "import styled from \"@emotion/styled\";\r\n\r\nexport const ModalContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 10px;\r\n`;\r\n", "import { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  DragBox,\r\n  DragCheckboxContainer,\r\n  DragItem,\r\n} from \"./DraggableItem.styled\";\r\nimport { Checkbox, Icon, Text } from \"@shopify/polaris\";\r\nimport { CheckboxDelBtn } from \"../MetafieldModalForm/MetafieldModalForm.styled\";\r\nimport { DragHandleMinor, DeleteMajor } from \"@shopify/polaris-icons\";\r\n\r\nexport const DraggableItem = ({ provided, items, setItems, item }) => {\r\n  const isInitialRenderOne = useRef(true);\r\n  const [checkedItems, setCheckedItems] = useState(\r\n    items.reduce((acc, item) => {\r\n      acc[item.id] = item.active;\r\n      return acc;\r\n    }, {})\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isInitialRenderOne.current) {\r\n      isInitialRenderOne.current = false;\r\n      return;\r\n    }\r\n    setItems((prevState) => {\r\n      return prevState.map((item) => {\r\n        for (const key in checkedItems) {\r\n          if (Object.prototype.hasOwnProperty.call(checkedItems, key)) {\r\n            const element = checkedItems[key];\r\n            if (item.id === key) {\r\n              return { ...item, active: element };\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }, [checkedItems]);\r\n\r\n  const handleChange = useCallback(\r\n    (itemId) => {\r\n      setCheckedItems((prevCheckedItems) => {\r\n        const updatedCheckedItems = {\r\n          ...prevCheckedItems,\r\n          [itemId]: !prevCheckedItems[itemId],\r\n        };\r\n        return updatedCheckedItems;\r\n      });\r\n    },\r\n    [checkedItems]\r\n  );\r\n\r\n  const handleDelBtn = useCallback(\r\n    (e) => {\r\n      const filteredItems = items.filter(\r\n        (item) => item.id !== e.currentTarget.id\r\n      );\r\n      setItems(filteredItems);\r\n    },\r\n    [items]\r\n  );\r\n\r\n  return (\r\n    <DragItem ref={provided.innerRef} {...provided.draggableProps}>\r\n      <DragBox checked={checkedItems[item.id]}>\r\n        <DragCheckboxContainer\r\n          onClick={(e) => {\r\n            const target = e.target as HTMLDivElement;\r\n            if (target.nodeName !== \"INPUT\") {\r\n              handleChange(item.id);\r\n            }\r\n          }}\r\n        >\r\n          <Checkbox\r\n            label=\"\"\r\n            checked={checkedItems[item.id]}\r\n            onChange={() => handleChange(item.id)}\r\n          />\r\n          <div>\r\n            <Text variant=\"bodyMd\" fontWeight=\"regular\" as=\"h3\">\r\n              {item.content}\r\n            </Text>\r\n            <Text variant=\"bodyMd\" fontWeight=\"regular\" as=\"h3\">\r\n              {item.description}\r\n            </Text>\r\n          </div>\r\n        </DragCheckboxContainer>\r\n        {Boolean(item.key) && (\r\n          <CheckboxDelBtn id={item.id} type=\"button\" onClick={handleDelBtn}>\r\n            <Icon source={DeleteMajor} tone=\"base\" />\r\n          </CheckboxDelBtn>\r\n        )}\r\n\r\n        <div {...provided.dragHandleProps}>\r\n          <Icon source={DragHandleMinor} tone=\"base\" />\r\n        </div>\r\n      </DragBox>\r\n    </DragItem>\r\n  );\r\n};\r\n", "import { useState } from \"react\";\nimport type { ActionFunctionArgs, LoaderFunctionArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport {\n  AppProvider as PolarisAppProvider,\n  Button,\n  Card,\n  FormLayout,\n  Page,\n  Text,\n  TextField } from\n\"@shopify/polaris\";\nimport { Form, useActionData, useLoaderData } from \"@remix-run/react\";\nimport polarisStyles from \"@shopify/polaris/build/esm/styles.css\";\nimport { login } from \"../../shopify.server\";\nimport { loginErrorMessage } from \"./error.server\";\n\nexport const links = () => [{ rel: \"stylesheet\", href: polarisStyles }];\n\nexport const loader = async ({ request }: LoaderFunctionArgs) => {\n  const errors = loginErrorMessage(await login(request));\n\n  return json({\n    errors,\n    polarisTranslations: require(`@shopify/polaris/locales/en.json`)\n  });\n};\n\nexport const action = async ({ request }: ActionFunctionArgs) => {\n  const errors = loginErrorMessage(await login(request));\n\n  return json({\n    errors\n  });\n};\n\nexport default function Auth() {\n  const loaderData = useLoaderData<typeof loader>();\n  const actionData = useActionData<typeof action>();\n  const [shop, setShop] = useState(\"\");\n  const { errors } = actionData || loaderData;\n\n  return (\n    <PolarisAppProvider i18n={loaderData.polarisTranslations}>\r\n      <Page>\r\n        <Card>\r\n          <Form method=\"post\">\r\n            <FormLayout>\r\n              <Text variant=\"headingMd\" as=\"h2\">\r\n                Log in\r\n              </Text>\r\n              <TextField\n                type=\"text\"\n                name=\"shop\"\n                label=\"Shop domain\"\n                helpText=\"example.myshopify.com\"\n                value={shop}\n                onChange={setShop}\n                autoComplete=\"on\"\n                error={errors.shop} />\n              \r\n              <Button submit>Log in</Button>\r\n            </FormLayout>\r\n          </Form>\r\n        </Card>\r\n      </Page>\r\n    </PolarisAppProvider>);\n\n}", "import type { LoginError } from \"@shopify/shopify-app-remix/server\";\r\nimport { LoginErrorType } from \"@shopify/shopify-app-remix/server\";\r\n\r\ninterface LoginErrorMessage {\r\n  shop?: string;\r\n}\r\n\r\nexport function loginErrorMessage(loginErrors: LoginError): LoginErrorMessage {\r\n  if (loginErrors?.shop === LoginErrorType.MissingShop) {\r\n    return { shop: \"Please enter your shop domain to log in\" };\r\n  } else if (loginErrors?.shop === LoginErrorType.InvalidShop) {\r\n    return { shop: \"Please enter a valid shop domain to log in\" };\r\n  }\r\n\r\n  return {};\r\n}\r\n", "import type { ActionFunctionArgs } from \"@remix-run/node\";\r\nimport { authenticate } from \"../shopify.server\";\r\nimport db from \"../db.server\";\r\n\r\nexport const action = async ({ request }: ActionFunctionArgs) => {\r\n  const { topic, shop, session, admin, payload } = await authenticate.webhook(\r\n    request\r\n  );\r\n\r\n  if (!admin) {\r\n    // The admin context isn't returned if the webhook fired after a shop was uninstalled.\r\n    throw new Response();\r\n  }\r\n\r\n  switch (topic) {\r\n    case \"APP_UNINSTALLED\":\r\n      if (session) {\r\n        await db.session.deleteMany({ where: { shop } });\r\n      }\r\n\r\n      break;\r\n    case \"CUSTOMERS_DATA_REQUEST\":\r\n    case \"CUSTOMERS_REDACT\":\r\n    case \"SHOP_REDACT\":\r\n    default:\r\n      throw new Response(\"Unhandled webhook topic\", { status: 404 });\r\n  }\r\n\r\n  throw new Response();\r\n};\r\n", "import type { LoaderFunctionArgs } from \"@remix-run/node\";\r\nimport { authenticate } from \"../shopify.server\";\r\n\r\nexport const loader = async ({ request }: LoaderFunctionArgs) => {\r\n  await authenticate.admin(request);\r\n\r\n  return null;\r\n};\r\n", "import type { LoaderFunctionArgs } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useLoaderData } from \"@remix-run/react\";\nimport { login } from \"../../shopify.server\";\nimport indexStyles from \"./style.css\";\n\nexport const links = () => [{ rel: \"stylesheet\", href: indexStyles }];\n\nexport const loader = async ({ request }: LoaderFunctionArgs) => {\n  const url = new URL(request.url);\n\n  if (url.searchParams.get(\"shop\")) {\n    throw redirect(`/app?${url.searchParams.toString()}`);\n  }\n\n  return json({ showForm: Boolean(login) });\n};\n\nexport default function App() {\n  const { showForm } = useLoaderData<typeof loader>();\n\n  return (\n    <div className=\"index\">\r\n      <div className=\"content\">\r\n        <h1>A short heading about [your app]</h1>\r\n        <p>A tagline about [your app] that describes your value proposition.</p>\r\n        {showForm &&\n        <Form method=\"post\" action=\"/auth/login\">\r\n            <label>\r\n              <span>Shop domain</span>\r\n              <input type=\"text\" name=\"shop\" />\r\n              <span>e.g: my-shop-domain.myshopify.com</span>\r\n            </label>\r\n            <button type=\"submit\">Log in</button>\r\n          </Form>}\n        \r\n        <ul>\r\n          <li>\r\n            <strong>Product feature</strong>. Some detail about your feature and\r\n            its benefit to your customer.\r\n          </li>\r\n          <li>\r\n            <strong>Product feature</strong>. Some detail about your feature and\r\n            its benefit to your customer.\r\n          </li>\r\n          <li>\r\n            <strong>Product feature</strong>. Some detail about your feature and\r\n            its benefit to your customer.\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>);\n\n}", "import type { HeadersFunction, LoaderFunctionArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Link, Outlet, useLoaderData, useRouteError } from \"@remix-run/react\";\nimport polarisStyles from \"@shopify/polaris/build/esm/styles.css\";\nimport { boundary } from \"@shopify/shopify-app-remix/server\";\nimport { AppProvider } from \"@shopify/shopify-app-remix/react\";\nimport { authenticate } from \"~/shopify.server\";\nimport { Routes } from \"~/constants/routes\";\nimport { useEffect, useState } from \"react\";\nimport { Provider } from \"@shopify/app-bridge-react\";\n\nexport const links = () => [{ rel: \"stylesheet\", href: polarisStyles }];\n\nexport const loader = async ({ request }: LoaderFunctionArgs) => {\n  await authenticate.admin(request);\n\n  return json({ apiKey: process.env.SHOPIFY_API_KEY || \"\" });\n};\n\nexport default function App() {\n  const { apiKey } = useLoaderData<typeof loader>();\n  const [appProviderLoad, setAppProviderLoad] = useState(false);\n\n  useEffect(() => {\n    setAppProviderLoad(true);\n  }, []);\n\n  return (\n    <AppProvider isEmbeddedApp apiKey={apiKey}>\r\n      {appProviderLoad &&\n      <Provider config={shopify.config}>\r\n          <ui-nav-menu>\r\n            <Link to={Routes.ROOT} rel=\"home\">\r\n              Home\r\n            </Link>\r\n            <Link to={Routes.COMPARISON}>Comparison</Link>\r\n          </ui-nav-menu>\r\n          <Outlet />\r\n        </Provider>}\n      \r\n    </AppProvider>);\n\n}\n\n// Shopify needs Remix to catch some thrown responses, so that their headers are included in the response.\nexport function ErrorBoundary() {\n  return boundary.error(useRouteError());\n}\n\nexport const headers: HeadersFunction = (headersArgs) => {\n  return boundary.headers(headersArgs);\n};", "export default {'entry':{'module':'/build/entry.client-3VIWTASQ.js','imports':['/build/_shared/chunk-ZWGWGGVF.js','/build/_shared/chunk-EANB4GN4.js','/build/_shared/chunk-R5POWXF3.js','/build/_shared/chunk-GIAAE3CH.js','/build/_shared/chunk-XU7DNSPJ.js','/build/_shared/chunk-BOXFZXVX.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-VUEDSTCX.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-FZYKW7Q2.js','imports':['/build/_shared/chunk-3GJP5LZF.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':false,'hasLoader':true,'hasErrorBoundary':false},'routes/app':{'id':'routes/app','parentId':'root','path':'app','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app-OE27S7AH.js','imports':['/build/_shared/chunk-NMZL6IDN.js','/build/_shared/chunk-MIBD2XN6.js','/build/_shared/chunk-S6Y3EBRO.js','/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-WD5KJCUX.js','/build/_shared/chunk-AHRZ4I3J.js','/build/_shared/chunk-OBV6KFN7.js'],'hasAction':false,'hasLoader':true,'hasErrorBoundary':true},'routes/app._index':{'id':'routes/app._index','parentId':'routes/app','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/app._index-G3SH5OYF.js','imports':['/build/_shared/chunk-YKNNQKH4.js'],'hasAction':true,'hasLoader':true,'hasErrorBoundary':false},'routes/app.comparison':{'id':'routes/app.comparison','parentId':'routes/app','path':'comparison','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.comparison-JOXAIZQG.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/app.comparison.atc':{'id':'routes/app.comparison.atc','parentId':'routes/app.comparison','path':'atc','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.comparison.atc-PROCQK4Y.js','imports':['/build/_shared/chunk-4NT7NZIW.js','/build/_shared/chunk-AJEI3VWP.js','/build/_shared/chunk-YKNNQKH4.js','/build/_shared/chunk-S6Y3EBRO.js','/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-OBV6KFN7.js'],'hasAction':true,'hasLoader':true,'hasErrorBoundary':false},'routes/app.comparison.fixed-btn':{'id':'routes/app.comparison.fixed-btn','parentId':'routes/app.comparison','path':'fixed-btn','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.comparison.fixed-btn-NML4OIUC.js','imports':['/build/_shared/chunk-4NT7NZIW.js','/build/_shared/chunk-AJEI3VWP.js','/build/_shared/chunk-YKNNQKH4.js','/build/_shared/chunk-S6Y3EBRO.js','/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-OBV6KFN7.js'],'hasAction':true,'hasLoader':true,'hasErrorBoundary':false},'routes/app.comparison.grid':{'id':'routes/app.comparison.grid','parentId':'routes/app.comparison','path':'grid','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.comparison.grid-YBMK36FJ.js','imports':['/build/_shared/chunk-4NT7NZIW.js','/build/_shared/chunk-AJEI3VWP.js','/build/_shared/chunk-YKNNQKH4.js','/build/_shared/chunk-S6Y3EBRO.js','/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-OBV6KFN7.js'],'hasAction':true,'hasLoader':true,'hasErrorBoundary':false},'routes/app.comparison.table':{'id':'routes/app.comparison.table','parentId':'routes/app.comparison','path':'table','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.comparison.table-ZXLE7AJU.js','imports':['/build/_shared/chunk-AJEI3VWP.js','/build/_shared/chunk-YKNNQKH4.js','/build/_shared/chunk-S6Y3EBRO.js','/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-OBV6KFN7.js'],'hasAction':true,'hasLoader':true,'hasErrorBoundary':false},'routes/app.comparison.toolbar':{'id':'routes/app.comparison.toolbar','parentId':'routes/app.comparison','path':'toolbar','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.comparison.toolbar-LEKQOPRW.js','imports':['/build/_shared/chunk-4NT7NZIW.js','/build/_shared/chunk-AJEI3VWP.js','/build/_shared/chunk-YKNNQKH4.js','/build/_shared/chunk-S6Y3EBRO.js','/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-OBV6KFN7.js'],'hasAction':true,'hasLoader':true,'hasErrorBoundary':false},'routes/auth.$':{'id':'routes/auth.$','parentId':'root','path':'auth/*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth.$-Z6LPBAD4.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasErrorBoundary':false},'routes/auth.login':{'id':'routes/auth.login','parentId':'root','path':'auth/login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth.login-75ANNZ2G.js','imports':['/build/_shared/chunk-3GJP5LZF.js','/build/_shared/chunk-MIBD2XN6.js','/build/_shared/chunk-G7CHZRZX.js','/build/_shared/chunk-OBV6KFN7.js'],'hasAction':true,'hasLoader':true,'hasErrorBoundary':false},'routes/webhooks':{'id':'routes/webhooks','parentId':'root','path':'webhooks','index':undefined,'caseSensitive':undefined,'module':'/build/routes/webhooks-YCEDH7MD.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasErrorBoundary':false}},'version':'93c93ef5','hmr':{'runtime':'/build/_shared\\\\chunk-R5POWXF3.js','timestamp':1702635139941},'url':'/build/manifest-93C93EF5.js'};", "\nimport * as entryServer from \"D:\\\\dev-it\\\\product-compare\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/app.comparison.fixed-btn.tsx\";\nimport * as route2 from \"./routes/app.comparison.toolbar.tsx\";\nimport * as route3 from \"./routes/app.comparison.table.tsx\";\nimport * as route4 from \"./routes/app.comparison.grid.tsx\";\nimport * as route5 from \"./routes/app.comparison.atc.tsx\";\nimport * as route6 from \"./routes/app.comparison.tsx\";\nimport * as route7 from \"./routes/app._index.tsx\";\nimport * as route8 from \"./routes/auth.login/route.tsx\";\nimport * as route9 from \"./routes/webhooks.tsx\";\nimport * as route10 from \"./routes/auth.$.tsx\";\nimport * as route11 from \"./routes/_index/route.tsx\";\nimport * as route12 from \"./routes/app.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const future = {\"v3_fetcherPersist\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/app.comparison.fixed-btn\": {\n      id: \"routes/app.comparison.fixed-btn\",\n      parentId: \"routes/app.comparison\",\n      path: \"fixed-btn\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/app.comparison.toolbar\": {\n      id: \"routes/app.comparison.toolbar\",\n      parentId: \"routes/app.comparison\",\n      path: \"toolbar\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/app.comparison.table\": {\n      id: \"routes/app.comparison.table\",\n      parentId: \"routes/app.comparison\",\n      path: \"table\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/app.comparison.grid\": {\n      id: \"routes/app.comparison.grid\",\n      parentId: \"routes/app.comparison\",\n      path: \"grid\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/app.comparison.atc\": {\n      id: \"routes/app.comparison.atc\",\n      parentId: \"routes/app.comparison\",\n      path: \"atc\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/app.comparison\": {\n      id: \"routes/app.comparison\",\n      parentId: \"routes/app\",\n      path: \"comparison\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/app._index\": {\n      id: \"routes/app._index\",\n      parentId: \"routes/app\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/auth.login\": {\n      id: \"routes/auth.login\",\n      parentId: \"root\",\n      path: \"auth/login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/webhooks\": {\n      id: \"routes/webhooks\",\n      parentId: \"root\",\n      path: \"webhooks\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/auth.$\": {\n      id: \"routes/auth.$\",\n      parentId: \"root\",\n      path: \"auth/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/app\": {\n      id: \"routes/app\",\n      parentId: \"root\",\n      path: \"app\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    }\n  };"],
  "mappings": "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",
  "names": ["import_server", "import_node", "shopify", "shopify", "isbot", "import_react", "import_jsx_dev_runtime", "import_polaris", "import_jsx_dev_runtime", "import_react", "import_polaris", "import_react", "import_jsx_dev_runtime", "chroma", "import_node", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "action", "loader", "import_polaris", "import_react", "import_node", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "action", "action", "loader", "import_polaris", "import_react", "import_node", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "action", "action", "loader", "import_polaris", "import_react", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "action", "action", "loader", "import_polaris", "import_react", "import_node", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "action", "import_polaris", "import_react", "import_react", "import_polaris", "import_polaris_icons", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "action", "loader", "import_react", "import_node", "import_polaris", "import_react", "import_react", "import_actions", "import_react", "import_polaris", "styled", "import_polaris", "import_react", "import_polaris", "import_react", "import_react", "value", "import_styled", "styled", "import_app_bridge_react", "import_react", "import_polaris", "import_react", "import_polaris_icons", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_styled", "styled", "import_jsx_dev_runtime", "newMetaItems", "item", "import_react", "import_react", "import_polaris", "import_polaris_icons", "import_jsx_dev_runtime", "item", "import_jsx_dev_runtime", "provided", "import_jsx_dev_runtime", "loader", "action", "redirect", "action", "loader", "import_react", "import_node", "import_polaris", "import_server", "import_jsx_dev_runtime", "loader", "action", "PolarisAppProvider", "action", "action", "loader", "loader", "route_exports", "App", "links", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "links", "loader", "App", "App", "links", "loader", "import_node", "import_react", "import_server", "import_react", "import_react", "import_app_bridge_react", "import_jsx_dev_runtime", "links", "loader", "App", "route_exports"]
}
